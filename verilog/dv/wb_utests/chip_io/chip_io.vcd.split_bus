$date
	Wed Jun 16 11:38:05 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module chip_io_tb $end
$var wire 1 ! VDD1V8 $end
$var wire 1 " VDD1V8_PKG $end
$var wire 1 # VDD3V3 $end
$var wire 1 $ VDD3V3_PKG $end
$var wire 1 % VSS $end
$var wire 1 & VSS_PKG $end
$var wire 1 ' flash_clk $end
$var wire 1 ( flash_csb $end
$var wire 1 ) flash_io0 $end
$var wire 1 * flash_io1 $end
$var wire 1 + gpio $end
$var wire 31 , mprj_analog_io [30:0] $end
$var wire 38 - mprj_io [37:0] $end
$var wire 1 . por_l $end
$var wire 1 / rstb_h $end
$var wire 38 0 mprj_io_in [37:0] $end
$var wire 38 1 mprj_io_hldh_n [37:0] $end
$var wire 38 2 mprj_io_enh [37:0] $end
$var wire 1 3 gpio_mode1_core $end
$var wire 1 4 gpio_mode0_core $end
$var wire 1 5 gpio_in_core $end
$var wire 1 6 flash_io1_di_core $end
$var wire 1 7 flash_io0_di_core $end
$var wire 1 8 clock_core $end
$var reg 1 9 RSTB $end
$var reg 1 : clock $end
$var reg 3 ; dm_all [2:0] $end
$var reg 1 < flash_clk_core $end
$var reg 1 = flash_clk_ieb_core $end
$var reg 1 > flash_clk_oeb_core $end
$var reg 1 ? flash_csb_core $end
$var reg 1 @ flash_csb_ieb_core $end
$var reg 1 A flash_csb_oeb_core $end
$var reg 1 B flash_io0_bit $end
$var reg 1 C flash_io0_do_core $end
$var reg 1 D flash_io0_ieb_core $end
$var reg 1 E flash_io0_oeb_core $end
$var reg 1 F flash_io1_bit $end
$var reg 1 G flash_io1_do_core $end
$var reg 1 H flash_io1_ieb_core $end
$var reg 1 I flash_io1_oeb_core $end
$var reg 1 J gpio_bit $end
$var reg 1 K gpio_inenb_core $end
$var reg 1 L gpio_out_core $end
$var reg 1 M gpio_outenb_core $end
$var reg 38 N mprj_io_analog_en [37:0] $end
$var reg 38 O mprj_io_analog_pol [37:0] $end
$var reg 38 P mprj_io_analog_sel [37:0] $end
$var reg 38 Q mprj_io_bits [37:0] $end
$var reg 114 R mprj_io_dm [113:0] $end
$var reg 38 S mprj_io_holdover [37:0] $end
$var reg 38 T mprj_io_ib_mode_sel [37:0] $end
$var reg 38 U mprj_io_inp_dis [37:0] $end
$var reg 38 V mprj_io_oeb [37:0] $end
$var reg 38 W mprj_io_out [37:0] $end
$var reg 38 X mprj_io_slow_sel [37:0] $end
$var reg 38 Y mprj_io_vtrip_sel [37:0] $end
$var reg 1 Z porb_h $end
$var reg 1 [ power1 $end
$var reg 1 \ power2 $end
$scope module uut $end
$var wire 1 ] analog_a $end
$var wire 1 ^ analog_b $end
$var wire 1 _ clock $end
$var wire 1 ` \dm_all[0] $end
$var wire 1 a \dm_all[1] $end
$var wire 1 b \dm_all[2] $end
$var wire 1 ' flash_clk $end
$var wire 1 < flash_clk_core $end
$var wire 1 = flash_clk_ieb_core $end
$var wire 1 > flash_clk_oeb_core $end
$var wire 1 ( flash_csb $end
$var wire 1 ? flash_csb_core $end
$var wire 1 @ flash_csb_ieb_core $end
$var wire 1 A flash_csb_oeb_core $end
$var wire 1 ) flash_io0 $end
$var wire 1 C flash_io0_do_core $end
$var wire 1 D flash_io0_ieb_core $end
$var wire 1 c \flash_io0_mode[0] $end
$var wire 1 d \flash_io0_mode[1] $end
$var wire 1 e \flash_io0_mode[2] $end
$var wire 1 E flash_io0_oeb_core $end
$var wire 1 * flash_io1 $end
$var wire 1 G flash_io1_do_core $end
$var wire 1 H flash_io1_ieb_core $end
$var wire 1 f \flash_io1_mode[0] $end
$var wire 1 g \flash_io1_mode[1] $end
$var wire 1 h \flash_io1_mode[2] $end
$var wire 1 I flash_io1_oeb_core $end
$var wire 1 + gpio $end
$var wire 1 K gpio_inenb_core $end
$var wire 1 4 gpio_mode0_core $end
$var wire 1 3 gpio_mode1_core $end
$var wire 1 L gpio_out_core $end
$var wire 1 M gpio_outenb_core $end
$var wire 1 i \mprj_analog_io[0] $end
$var wire 1 j \mprj_analog_io[10] $end
$var wire 1 k \mprj_analog_io[11] $end
$var wire 1 l \mprj_analog_io[12] $end
$var wire 1 m \mprj_analog_io[13] $end
$var wire 1 n \mprj_analog_io[14] $end
$var wire 1 o \mprj_analog_io[15] $end
$var wire 1 p \mprj_analog_io[16] $end
$var wire 1 q \mprj_analog_io[17] $end
$var wire 1 r \mprj_analog_io[18] $end
$var wire 1 s \mprj_analog_io[19] $end
$var wire 1 t \mprj_analog_io[1] $end
$var wire 1 u \mprj_analog_io[20] $end
$var wire 1 v \mprj_analog_io[21] $end
$var wire 1 w \mprj_analog_io[22] $end
$var wire 1 x \mprj_analog_io[23] $end
$var wire 1 y \mprj_analog_io[24] $end
$var wire 1 z \mprj_analog_io[25] $end
$var wire 1 { \mprj_analog_io[26] $end
$var wire 1 | \mprj_analog_io[27] $end
$var wire 1 } \mprj_analog_io[28] $end
$var wire 1 ~ \mprj_analog_io[29] $end
$var wire 1 !" \mprj_analog_io[2] $end
$var wire 1 "" \mprj_analog_io[30] $end
$var wire 1 #" \mprj_analog_io[3] $end
$var wire 1 $" \mprj_analog_io[4] $end
$var wire 1 %" \mprj_analog_io[5] $end
$var wire 1 &" \mprj_analog_io[6] $end
$var wire 1 '" \mprj_analog_io[7] $end
$var wire 1 (" \mprj_analog_io[8] $end
$var wire 1 )" \mprj_analog_io[9] $end
$var wire 1 *" \mprj_io[0] $end
$var wire 1 +" \mprj_io[10] $end
$var wire 1 ," \mprj_io[11] $end
$var wire 1 -" \mprj_io[12] $end
$var wire 1 ." \mprj_io[13] $end
$var wire 1 /" \mprj_io[14] $end
$var wire 1 0" \mprj_io[15] $end
$var wire 1 1" \mprj_io[16] $end
$var wire 1 2" \mprj_io[17] $end
$var wire 1 3" \mprj_io[18] $end
$var wire 1 4" \mprj_io[19] $end
$var wire 1 5" \mprj_io[1] $end
$var wire 1 6" \mprj_io[20] $end
$var wire 1 7" \mprj_io[21] $end
$var wire 1 8" \mprj_io[22] $end
$var wire 1 9" \mprj_io[23] $end
$var wire 1 :" \mprj_io[24] $end
$var wire 1 ;" \mprj_io[25] $end
$var wire 1 <" \mprj_io[26] $end
$var wire 1 =" \mprj_io[27] $end
$var wire 1 >" \mprj_io[28] $end
$var wire 1 ?" \mprj_io[29] $end
$var wire 1 @" \mprj_io[2] $end
$var wire 1 A" \mprj_io[30] $end
$var wire 1 B" \mprj_io[31] $end
$var wire 1 C" \mprj_io[32] $end
$var wire 1 D" \mprj_io[33] $end
$var wire 1 E" \mprj_io[34] $end
$var wire 1 F" \mprj_io[35] $end
$var wire 1 G" \mprj_io[36] $end
$var wire 1 H" \mprj_io[37] $end
$var wire 1 I" \mprj_io[3] $end
$var wire 1 J" \mprj_io[4] $end
$var wire 1 K" \mprj_io[5] $end
$var wire 1 L" \mprj_io[6] $end
$var wire 1 M" \mprj_io[7] $end
$var wire 1 N" \mprj_io[8] $end
$var wire 1 O" \mprj_io[9] $end
$var wire 1 P" \mprj_io_analog_en[0] $end
$var wire 1 Q" \mprj_io_analog_en[10] $end
$var wire 1 R" \mprj_io_analog_en[11] $end
$var wire 1 S" \mprj_io_analog_en[12] $end
$var wire 1 T" \mprj_io_analog_en[13] $end
$var wire 1 U" \mprj_io_analog_en[14] $end
$var wire 1 V" \mprj_io_analog_en[15] $end
$var wire 1 W" \mprj_io_analog_en[16] $end
$var wire 1 X" \mprj_io_analog_en[17] $end
$var wire 1 Y" \mprj_io_analog_en[18] $end
$var wire 1 Z" \mprj_io_analog_en[19] $end
$var wire 1 [" \mprj_io_analog_en[1] $end
$var wire 1 \" \mprj_io_analog_en[20] $end
$var wire 1 ]" \mprj_io_analog_en[21] $end
$var wire 1 ^" \mprj_io_analog_en[22] $end
$var wire 1 _" \mprj_io_analog_en[23] $end
$var wire 1 `" \mprj_io_analog_en[24] $end
$var wire 1 a" \mprj_io_analog_en[25] $end
$var wire 1 b" \mprj_io_analog_en[26] $end
$var wire 1 c" \mprj_io_analog_en[27] $end
$var wire 1 d" \mprj_io_analog_en[28] $end
$var wire 1 e" \mprj_io_analog_en[29] $end
$var wire 1 f" \mprj_io_analog_en[2] $end
$var wire 1 g" \mprj_io_analog_en[30] $end
$var wire 1 h" \mprj_io_analog_en[31] $end
$var wire 1 i" \mprj_io_analog_en[32] $end
$var wire 1 j" \mprj_io_analog_en[33] $end
$var wire 1 k" \mprj_io_analog_en[34] $end
$var wire 1 l" \mprj_io_analog_en[35] $end
$var wire 1 m" \mprj_io_analog_en[36] $end
$var wire 1 n" \mprj_io_analog_en[37] $end
$var wire 1 o" \mprj_io_analog_en[3] $end
$var wire 1 p" \mprj_io_analog_en[4] $end
$var wire 1 q" \mprj_io_analog_en[5] $end
$var wire 1 r" \mprj_io_analog_en[6] $end
$var wire 1 s" \mprj_io_analog_en[7] $end
$var wire 1 t" \mprj_io_analog_en[8] $end
$var wire 1 u" \mprj_io_analog_en[9] $end
$var wire 1 v" \mprj_io_analog_pol[0] $end
$var wire 1 w" \mprj_io_analog_pol[10] $end
$var wire 1 x" \mprj_io_analog_pol[11] $end
$var wire 1 y" \mprj_io_analog_pol[12] $end
$var wire 1 z" \mprj_io_analog_pol[13] $end
$var wire 1 {" \mprj_io_analog_pol[14] $end
$var wire 1 |" \mprj_io_analog_pol[15] $end
$var wire 1 }" \mprj_io_analog_pol[16] $end
$var wire 1 ~" \mprj_io_analog_pol[17] $end
$var wire 1 !# \mprj_io_analog_pol[18] $end
$var wire 1 "# \mprj_io_analog_pol[19] $end
$var wire 1 ## \mprj_io_analog_pol[1] $end
$var wire 1 $# \mprj_io_analog_pol[20] $end
$var wire 1 %# \mprj_io_analog_pol[21] $end
$var wire 1 &# \mprj_io_analog_pol[22] $end
$var wire 1 '# \mprj_io_analog_pol[23] $end
$var wire 1 (# \mprj_io_analog_pol[24] $end
$var wire 1 )# \mprj_io_analog_pol[25] $end
$var wire 1 *# \mprj_io_analog_pol[26] $end
$var wire 1 +# \mprj_io_analog_pol[27] $end
$var wire 1 ,# \mprj_io_analog_pol[28] $end
$var wire 1 -# \mprj_io_analog_pol[29] $end
$var wire 1 .# \mprj_io_analog_pol[2] $end
$var wire 1 /# \mprj_io_analog_pol[30] $end
$var wire 1 0# \mprj_io_analog_pol[31] $end
$var wire 1 1# \mprj_io_analog_pol[32] $end
$var wire 1 2# \mprj_io_analog_pol[33] $end
$var wire 1 3# \mprj_io_analog_pol[34] $end
$var wire 1 4# \mprj_io_analog_pol[35] $end
$var wire 1 5# \mprj_io_analog_pol[36] $end
$var wire 1 6# \mprj_io_analog_pol[37] $end
$var wire 1 7# \mprj_io_analog_pol[3] $end
$var wire 1 8# \mprj_io_analog_pol[4] $end
$var wire 1 9# \mprj_io_analog_pol[5] $end
$var wire 1 :# \mprj_io_analog_pol[6] $end
$var wire 1 ;# \mprj_io_analog_pol[7] $end
$var wire 1 <# \mprj_io_analog_pol[8] $end
$var wire 1 =# \mprj_io_analog_pol[9] $end
$var wire 1 ># \mprj_io_analog_sel[0] $end
$var wire 1 ?# \mprj_io_analog_sel[10] $end
$var wire 1 @# \mprj_io_analog_sel[11] $end
$var wire 1 A# \mprj_io_analog_sel[12] $end
$var wire 1 B# \mprj_io_analog_sel[13] $end
$var wire 1 C# \mprj_io_analog_sel[14] $end
$var wire 1 D# \mprj_io_analog_sel[15] $end
$var wire 1 E# \mprj_io_analog_sel[16] $end
$var wire 1 F# \mprj_io_analog_sel[17] $end
$var wire 1 G# \mprj_io_analog_sel[18] $end
$var wire 1 H# \mprj_io_analog_sel[19] $end
$var wire 1 I# \mprj_io_analog_sel[1] $end
$var wire 1 J# \mprj_io_analog_sel[20] $end
$var wire 1 K# \mprj_io_analog_sel[21] $end
$var wire 1 L# \mprj_io_analog_sel[22] $end
$var wire 1 M# \mprj_io_analog_sel[23] $end
$var wire 1 N# \mprj_io_analog_sel[24] $end
$var wire 1 O# \mprj_io_analog_sel[25] $end
$var wire 1 P# \mprj_io_analog_sel[26] $end
$var wire 1 Q# \mprj_io_analog_sel[27] $end
$var wire 1 R# \mprj_io_analog_sel[28] $end
$var wire 1 S# \mprj_io_analog_sel[29] $end
$var wire 1 T# \mprj_io_analog_sel[2] $end
$var wire 1 U# \mprj_io_analog_sel[30] $end
$var wire 1 V# \mprj_io_analog_sel[31] $end
$var wire 1 W# \mprj_io_analog_sel[32] $end
$var wire 1 X# \mprj_io_analog_sel[33] $end
$var wire 1 Y# \mprj_io_analog_sel[34] $end
$var wire 1 Z# \mprj_io_analog_sel[35] $end
$var wire 1 [# \mprj_io_analog_sel[36] $end
$var wire 1 \# \mprj_io_analog_sel[37] $end
$var wire 1 ]# \mprj_io_analog_sel[3] $end
$var wire 1 ^# \mprj_io_analog_sel[4] $end
$var wire 1 _# \mprj_io_analog_sel[5] $end
$var wire 1 `# \mprj_io_analog_sel[6] $end
$var wire 1 a# \mprj_io_analog_sel[7] $end
$var wire 1 b# \mprj_io_analog_sel[8] $end
$var wire 1 c# \mprj_io_analog_sel[9] $end
$var wire 1 d# \mprj_io_dm[0] $end
$var wire 1 e# \mprj_io_dm[100] $end
$var wire 1 f# \mprj_io_dm[101] $end
$var wire 1 g# \mprj_io_dm[102] $end
$var wire 1 h# \mprj_io_dm[103] $end
$var wire 1 i# \mprj_io_dm[104] $end
$var wire 1 j# \mprj_io_dm[105] $end
$var wire 1 k# \mprj_io_dm[106] $end
$var wire 1 l# \mprj_io_dm[107] $end
$var wire 1 m# \mprj_io_dm[108] $end
$var wire 1 n# \mprj_io_dm[109] $end
$var wire 1 o# \mprj_io_dm[10] $end
$var wire 1 p# \mprj_io_dm[110] $end
$var wire 1 q# \mprj_io_dm[111] $end
$var wire 1 r# \mprj_io_dm[112] $end
$var wire 1 s# \mprj_io_dm[113] $end
$var wire 1 t# \mprj_io_dm[11] $end
$var wire 1 u# \mprj_io_dm[12] $end
$var wire 1 v# \mprj_io_dm[13] $end
$var wire 1 w# \mprj_io_dm[14] $end
$var wire 1 x# \mprj_io_dm[15] $end
$var wire 1 y# \mprj_io_dm[16] $end
$var wire 1 z# \mprj_io_dm[17] $end
$var wire 1 {# \mprj_io_dm[18] $end
$var wire 1 |# \mprj_io_dm[19] $end
$var wire 1 }# \mprj_io_dm[1] $end
$var wire 1 ~# \mprj_io_dm[20] $end
$var wire 1 !$ \mprj_io_dm[21] $end
$var wire 1 "$ \mprj_io_dm[22] $end
$var wire 1 #$ \mprj_io_dm[23] $end
$var wire 1 $$ \mprj_io_dm[24] $end
$var wire 1 %$ \mprj_io_dm[25] $end
$var wire 1 &$ \mprj_io_dm[26] $end
$var wire 1 '$ \mprj_io_dm[27] $end
$var wire 1 ($ \mprj_io_dm[28] $end
$var wire 1 )$ \mprj_io_dm[29] $end
$var wire 1 *$ \mprj_io_dm[2] $end
$var wire 1 +$ \mprj_io_dm[30] $end
$var wire 1 ,$ \mprj_io_dm[31] $end
$var wire 1 -$ \mprj_io_dm[32] $end
$var wire 1 .$ \mprj_io_dm[33] $end
$var wire 1 /$ \mprj_io_dm[34] $end
$var wire 1 0$ \mprj_io_dm[35] $end
$var wire 1 1$ \mprj_io_dm[36] $end
$var wire 1 2$ \mprj_io_dm[37] $end
$var wire 1 3$ \mprj_io_dm[38] $end
$var wire 1 4$ \mprj_io_dm[39] $end
$var wire 1 5$ \mprj_io_dm[3] $end
$var wire 1 6$ \mprj_io_dm[40] $end
$var wire 1 7$ \mprj_io_dm[41] $end
$var wire 1 8$ \mprj_io_dm[42] $end
$var wire 1 9$ \mprj_io_dm[43] $end
$var wire 1 :$ \mprj_io_dm[44] $end
$var wire 1 ;$ \mprj_io_dm[45] $end
$var wire 1 <$ \mprj_io_dm[46] $end
$var wire 1 =$ \mprj_io_dm[47] $end
$var wire 1 >$ \mprj_io_dm[48] $end
$var wire 1 ?$ \mprj_io_dm[49] $end
$var wire 1 @$ \mprj_io_dm[4] $end
$var wire 1 A$ \mprj_io_dm[50] $end
$var wire 1 B$ \mprj_io_dm[51] $end
$var wire 1 C$ \mprj_io_dm[52] $end
$var wire 1 D$ \mprj_io_dm[53] $end
$var wire 1 E$ \mprj_io_dm[54] $end
$var wire 1 F$ \mprj_io_dm[55] $end
$var wire 1 G$ \mprj_io_dm[56] $end
$var wire 1 H$ \mprj_io_dm[57] $end
$var wire 1 I$ \mprj_io_dm[58] $end
$var wire 1 J$ \mprj_io_dm[59] $end
$var wire 1 K$ \mprj_io_dm[5] $end
$var wire 1 L$ \mprj_io_dm[60] $end
$var wire 1 M$ \mprj_io_dm[61] $end
$var wire 1 N$ \mprj_io_dm[62] $end
$var wire 1 O$ \mprj_io_dm[63] $end
$var wire 1 P$ \mprj_io_dm[64] $end
$var wire 1 Q$ \mprj_io_dm[65] $end
$var wire 1 R$ \mprj_io_dm[66] $end
$var wire 1 S$ \mprj_io_dm[67] $end
$var wire 1 T$ \mprj_io_dm[68] $end
$var wire 1 U$ \mprj_io_dm[69] $end
$var wire 1 V$ \mprj_io_dm[6] $end
$var wire 1 W$ \mprj_io_dm[70] $end
$var wire 1 X$ \mprj_io_dm[71] $end
$var wire 1 Y$ \mprj_io_dm[72] $end
$var wire 1 Z$ \mprj_io_dm[73] $end
$var wire 1 [$ \mprj_io_dm[74] $end
$var wire 1 \$ \mprj_io_dm[75] $end
$var wire 1 ]$ \mprj_io_dm[76] $end
$var wire 1 ^$ \mprj_io_dm[77] $end
$var wire 1 _$ \mprj_io_dm[78] $end
$var wire 1 `$ \mprj_io_dm[79] $end
$var wire 1 a$ \mprj_io_dm[7] $end
$var wire 1 b$ \mprj_io_dm[80] $end
$var wire 1 c$ \mprj_io_dm[81] $end
$var wire 1 d$ \mprj_io_dm[82] $end
$var wire 1 e$ \mprj_io_dm[83] $end
$var wire 1 f$ \mprj_io_dm[84] $end
$var wire 1 g$ \mprj_io_dm[85] $end
$var wire 1 h$ \mprj_io_dm[86] $end
$var wire 1 i$ \mprj_io_dm[87] $end
$var wire 1 j$ \mprj_io_dm[88] $end
$var wire 1 k$ \mprj_io_dm[89] $end
$var wire 1 l$ \mprj_io_dm[8] $end
$var wire 1 m$ \mprj_io_dm[90] $end
$var wire 1 n$ \mprj_io_dm[91] $end
$var wire 1 o$ \mprj_io_dm[92] $end
$var wire 1 p$ \mprj_io_dm[93] $end
$var wire 1 q$ \mprj_io_dm[94] $end
$var wire 1 r$ \mprj_io_dm[95] $end
$var wire 1 s$ \mprj_io_dm[96] $end
$var wire 1 t$ \mprj_io_dm[97] $end
$var wire 1 u$ \mprj_io_dm[98] $end
$var wire 1 v$ \mprj_io_dm[99] $end
$var wire 1 w$ \mprj_io_dm[9] $end
$var wire 1 x$ \mprj_io_enh[0] $end
$var wire 1 y$ \mprj_io_enh[10] $end
$var wire 1 z$ \mprj_io_enh[11] $end
$var wire 1 {$ \mprj_io_enh[12] $end
$var wire 1 |$ \mprj_io_enh[13] $end
$var wire 1 }$ \mprj_io_enh[14] $end
$var wire 1 ~$ \mprj_io_enh[15] $end
$var wire 1 !% \mprj_io_enh[16] $end
$var wire 1 "% \mprj_io_enh[17] $end
$var wire 1 #% \mprj_io_enh[18] $end
$var wire 1 $% \mprj_io_enh[19] $end
$var wire 1 %% \mprj_io_enh[1] $end
$var wire 1 &% \mprj_io_enh[20] $end
$var wire 1 '% \mprj_io_enh[21] $end
$var wire 1 (% \mprj_io_enh[22] $end
$var wire 1 )% \mprj_io_enh[23] $end
$var wire 1 *% \mprj_io_enh[24] $end
$var wire 1 +% \mprj_io_enh[25] $end
$var wire 1 ,% \mprj_io_enh[26] $end
$var wire 1 -% \mprj_io_enh[27] $end
$var wire 1 .% \mprj_io_enh[28] $end
$var wire 1 /% \mprj_io_enh[29] $end
$var wire 1 0% \mprj_io_enh[2] $end
$var wire 1 1% \mprj_io_enh[30] $end
$var wire 1 2% \mprj_io_enh[31] $end
$var wire 1 3% \mprj_io_enh[32] $end
$var wire 1 4% \mprj_io_enh[33] $end
$var wire 1 5% \mprj_io_enh[34] $end
$var wire 1 6% \mprj_io_enh[35] $end
$var wire 1 7% \mprj_io_enh[36] $end
$var wire 1 8% \mprj_io_enh[37] $end
$var wire 1 9% \mprj_io_enh[3] $end
$var wire 1 :% \mprj_io_enh[4] $end
$var wire 1 ;% \mprj_io_enh[5] $end
$var wire 1 <% \mprj_io_enh[6] $end
$var wire 1 =% \mprj_io_enh[7] $end
$var wire 1 >% \mprj_io_enh[8] $end
$var wire 1 ?% \mprj_io_enh[9] $end
$var wire 1 @% \mprj_io_hldh_n[0] $end
$var wire 1 A% \mprj_io_hldh_n[10] $end
$var wire 1 B% \mprj_io_hldh_n[11] $end
$var wire 1 C% \mprj_io_hldh_n[12] $end
$var wire 1 D% \mprj_io_hldh_n[13] $end
$var wire 1 E% \mprj_io_hldh_n[14] $end
$var wire 1 F% \mprj_io_hldh_n[15] $end
$var wire 1 G% \mprj_io_hldh_n[16] $end
$var wire 1 H% \mprj_io_hldh_n[17] $end
$var wire 1 I% \mprj_io_hldh_n[18] $end
$var wire 1 J% \mprj_io_hldh_n[19] $end
$var wire 1 K% \mprj_io_hldh_n[1] $end
$var wire 1 L% \mprj_io_hldh_n[20] $end
$var wire 1 M% \mprj_io_hldh_n[21] $end
$var wire 1 N% \mprj_io_hldh_n[22] $end
$var wire 1 O% \mprj_io_hldh_n[23] $end
$var wire 1 P% \mprj_io_hldh_n[24] $end
$var wire 1 Q% \mprj_io_hldh_n[25] $end
$var wire 1 R% \mprj_io_hldh_n[26] $end
$var wire 1 S% \mprj_io_hldh_n[27] $end
$var wire 1 T% \mprj_io_hldh_n[28] $end
$var wire 1 U% \mprj_io_hldh_n[29] $end
$var wire 1 V% \mprj_io_hldh_n[2] $end
$var wire 1 W% \mprj_io_hldh_n[30] $end
$var wire 1 X% \mprj_io_hldh_n[31] $end
$var wire 1 Y% \mprj_io_hldh_n[32] $end
$var wire 1 Z% \mprj_io_hldh_n[33] $end
$var wire 1 [% \mprj_io_hldh_n[34] $end
$var wire 1 \% \mprj_io_hldh_n[35] $end
$var wire 1 ]% \mprj_io_hldh_n[36] $end
$var wire 1 ^% \mprj_io_hldh_n[37] $end
$var wire 1 _% \mprj_io_hldh_n[3] $end
$var wire 1 `% \mprj_io_hldh_n[4] $end
$var wire 1 a% \mprj_io_hldh_n[5] $end
$var wire 1 b% \mprj_io_hldh_n[6] $end
$var wire 1 c% \mprj_io_hldh_n[7] $end
$var wire 1 d% \mprj_io_hldh_n[8] $end
$var wire 1 e% \mprj_io_hldh_n[9] $end
$var wire 1 f% \mprj_io_holdover[0] $end
$var wire 1 g% \mprj_io_holdover[10] $end
$var wire 1 h% \mprj_io_holdover[11] $end
$var wire 1 i% \mprj_io_holdover[12] $end
$var wire 1 j% \mprj_io_holdover[13] $end
$var wire 1 k% \mprj_io_holdover[14] $end
$var wire 1 l% \mprj_io_holdover[15] $end
$var wire 1 m% \mprj_io_holdover[16] $end
$var wire 1 n% \mprj_io_holdover[17] $end
$var wire 1 o% \mprj_io_holdover[18] $end
$var wire 1 p% \mprj_io_holdover[19] $end
$var wire 1 q% \mprj_io_holdover[1] $end
$var wire 1 r% \mprj_io_holdover[20] $end
$var wire 1 s% \mprj_io_holdover[21] $end
$var wire 1 t% \mprj_io_holdover[22] $end
$var wire 1 u% \mprj_io_holdover[23] $end
$var wire 1 v% \mprj_io_holdover[24] $end
$var wire 1 w% \mprj_io_holdover[25] $end
$var wire 1 x% \mprj_io_holdover[26] $end
$var wire 1 y% \mprj_io_holdover[27] $end
$var wire 1 z% \mprj_io_holdover[28] $end
$var wire 1 {% \mprj_io_holdover[29] $end
$var wire 1 |% \mprj_io_holdover[2] $end
$var wire 1 }% \mprj_io_holdover[30] $end
$var wire 1 ~% \mprj_io_holdover[31] $end
$var wire 1 !& \mprj_io_holdover[32] $end
$var wire 1 "& \mprj_io_holdover[33] $end
$var wire 1 #& \mprj_io_holdover[34] $end
$var wire 1 $& \mprj_io_holdover[35] $end
$var wire 1 %& \mprj_io_holdover[36] $end
$var wire 1 && \mprj_io_holdover[37] $end
$var wire 1 '& \mprj_io_holdover[3] $end
$var wire 1 (& \mprj_io_holdover[4] $end
$var wire 1 )& \mprj_io_holdover[5] $end
$var wire 1 *& \mprj_io_holdover[6] $end
$var wire 1 +& \mprj_io_holdover[7] $end
$var wire 1 ,& \mprj_io_holdover[8] $end
$var wire 1 -& \mprj_io_holdover[9] $end
$var wire 1 .& \mprj_io_ib_mode_sel[0] $end
$var wire 1 /& \mprj_io_ib_mode_sel[10] $end
$var wire 1 0& \mprj_io_ib_mode_sel[11] $end
$var wire 1 1& \mprj_io_ib_mode_sel[12] $end
$var wire 1 2& \mprj_io_ib_mode_sel[13] $end
$var wire 1 3& \mprj_io_ib_mode_sel[14] $end
$var wire 1 4& \mprj_io_ib_mode_sel[15] $end
$var wire 1 5& \mprj_io_ib_mode_sel[16] $end
$var wire 1 6& \mprj_io_ib_mode_sel[17] $end
$var wire 1 7& \mprj_io_ib_mode_sel[18] $end
$var wire 1 8& \mprj_io_ib_mode_sel[19] $end
$var wire 1 9& \mprj_io_ib_mode_sel[1] $end
$var wire 1 :& \mprj_io_ib_mode_sel[20] $end
$var wire 1 ;& \mprj_io_ib_mode_sel[21] $end
$var wire 1 <& \mprj_io_ib_mode_sel[22] $end
$var wire 1 =& \mprj_io_ib_mode_sel[23] $end
$var wire 1 >& \mprj_io_ib_mode_sel[24] $end
$var wire 1 ?& \mprj_io_ib_mode_sel[25] $end
$var wire 1 @& \mprj_io_ib_mode_sel[26] $end
$var wire 1 A& \mprj_io_ib_mode_sel[27] $end
$var wire 1 B& \mprj_io_ib_mode_sel[28] $end
$var wire 1 C& \mprj_io_ib_mode_sel[29] $end
$var wire 1 D& \mprj_io_ib_mode_sel[2] $end
$var wire 1 E& \mprj_io_ib_mode_sel[30] $end
$var wire 1 F& \mprj_io_ib_mode_sel[31] $end
$var wire 1 G& \mprj_io_ib_mode_sel[32] $end
$var wire 1 H& \mprj_io_ib_mode_sel[33] $end
$var wire 1 I& \mprj_io_ib_mode_sel[34] $end
$var wire 1 J& \mprj_io_ib_mode_sel[35] $end
$var wire 1 K& \mprj_io_ib_mode_sel[36] $end
$var wire 1 L& \mprj_io_ib_mode_sel[37] $end
$var wire 1 M& \mprj_io_ib_mode_sel[3] $end
$var wire 1 N& \mprj_io_ib_mode_sel[4] $end
$var wire 1 O& \mprj_io_ib_mode_sel[5] $end
$var wire 1 P& \mprj_io_ib_mode_sel[6] $end
$var wire 1 Q& \mprj_io_ib_mode_sel[7] $end
$var wire 1 R& \mprj_io_ib_mode_sel[8] $end
$var wire 1 S& \mprj_io_ib_mode_sel[9] $end
$var wire 1 T& \mprj_io_inp_dis[0] $end
$var wire 1 U& \mprj_io_inp_dis[10] $end
$var wire 1 V& \mprj_io_inp_dis[11] $end
$var wire 1 W& \mprj_io_inp_dis[12] $end
$var wire 1 X& \mprj_io_inp_dis[13] $end
$var wire 1 Y& \mprj_io_inp_dis[14] $end
$var wire 1 Z& \mprj_io_inp_dis[15] $end
$var wire 1 [& \mprj_io_inp_dis[16] $end
$var wire 1 \& \mprj_io_inp_dis[17] $end
$var wire 1 ]& \mprj_io_inp_dis[18] $end
$var wire 1 ^& \mprj_io_inp_dis[19] $end
$var wire 1 _& \mprj_io_inp_dis[1] $end
$var wire 1 `& \mprj_io_inp_dis[20] $end
$var wire 1 a& \mprj_io_inp_dis[21] $end
$var wire 1 b& \mprj_io_inp_dis[22] $end
$var wire 1 c& \mprj_io_inp_dis[23] $end
$var wire 1 d& \mprj_io_inp_dis[24] $end
$var wire 1 e& \mprj_io_inp_dis[25] $end
$var wire 1 f& \mprj_io_inp_dis[26] $end
$var wire 1 g& \mprj_io_inp_dis[27] $end
$var wire 1 h& \mprj_io_inp_dis[28] $end
$var wire 1 i& \mprj_io_inp_dis[29] $end
$var wire 1 j& \mprj_io_inp_dis[2] $end
$var wire 1 k& \mprj_io_inp_dis[30] $end
$var wire 1 l& \mprj_io_inp_dis[31] $end
$var wire 1 m& \mprj_io_inp_dis[32] $end
$var wire 1 n& \mprj_io_inp_dis[33] $end
$var wire 1 o& \mprj_io_inp_dis[34] $end
$var wire 1 p& \mprj_io_inp_dis[35] $end
$var wire 1 q& \mprj_io_inp_dis[36] $end
$var wire 1 r& \mprj_io_inp_dis[37] $end
$var wire 1 s& \mprj_io_inp_dis[3] $end
$var wire 1 t& \mprj_io_inp_dis[4] $end
$var wire 1 u& \mprj_io_inp_dis[5] $end
$var wire 1 v& \mprj_io_inp_dis[6] $end
$var wire 1 w& \mprj_io_inp_dis[7] $end
$var wire 1 x& \mprj_io_inp_dis[8] $end
$var wire 1 y& \mprj_io_inp_dis[9] $end
$var wire 1 z& \mprj_io_oeb[0] $end
$var wire 1 {& \mprj_io_oeb[10] $end
$var wire 1 |& \mprj_io_oeb[11] $end
$var wire 1 }& \mprj_io_oeb[12] $end
$var wire 1 ~& \mprj_io_oeb[13] $end
$var wire 1 !' \mprj_io_oeb[14] $end
$var wire 1 "' \mprj_io_oeb[15] $end
$var wire 1 #' \mprj_io_oeb[16] $end
$var wire 1 $' \mprj_io_oeb[17] $end
$var wire 1 %' \mprj_io_oeb[18] $end
$var wire 1 &' \mprj_io_oeb[19] $end
$var wire 1 '' \mprj_io_oeb[1] $end
$var wire 1 (' \mprj_io_oeb[20] $end
$var wire 1 )' \mprj_io_oeb[21] $end
$var wire 1 *' \mprj_io_oeb[22] $end
$var wire 1 +' \mprj_io_oeb[23] $end
$var wire 1 ,' \mprj_io_oeb[24] $end
$var wire 1 -' \mprj_io_oeb[25] $end
$var wire 1 .' \mprj_io_oeb[26] $end
$var wire 1 /' \mprj_io_oeb[27] $end
$var wire 1 0' \mprj_io_oeb[28] $end
$var wire 1 1' \mprj_io_oeb[29] $end
$var wire 1 2' \mprj_io_oeb[2] $end
$var wire 1 3' \mprj_io_oeb[30] $end
$var wire 1 4' \mprj_io_oeb[31] $end
$var wire 1 5' \mprj_io_oeb[32] $end
$var wire 1 6' \mprj_io_oeb[33] $end
$var wire 1 7' \mprj_io_oeb[34] $end
$var wire 1 8' \mprj_io_oeb[35] $end
$var wire 1 9' \mprj_io_oeb[36] $end
$var wire 1 :' \mprj_io_oeb[37] $end
$var wire 1 ;' \mprj_io_oeb[3] $end
$var wire 1 <' \mprj_io_oeb[4] $end
$var wire 1 =' \mprj_io_oeb[5] $end
$var wire 1 >' \mprj_io_oeb[6] $end
$var wire 1 ?' \mprj_io_oeb[7] $end
$var wire 1 @' \mprj_io_oeb[8] $end
$var wire 1 A' \mprj_io_oeb[9] $end
$var wire 1 B' \mprj_io_out[0] $end
$var wire 1 C' \mprj_io_out[10] $end
$var wire 1 D' \mprj_io_out[11] $end
$var wire 1 E' \mprj_io_out[12] $end
$var wire 1 F' \mprj_io_out[13] $end
$var wire 1 G' \mprj_io_out[14] $end
$var wire 1 H' \mprj_io_out[15] $end
$var wire 1 I' \mprj_io_out[16] $end
$var wire 1 J' \mprj_io_out[17] $end
$var wire 1 K' \mprj_io_out[18] $end
$var wire 1 L' \mprj_io_out[19] $end
$var wire 1 M' \mprj_io_out[1] $end
$var wire 1 N' \mprj_io_out[20] $end
$var wire 1 O' \mprj_io_out[21] $end
$var wire 1 P' \mprj_io_out[22] $end
$var wire 1 Q' \mprj_io_out[23] $end
$var wire 1 R' \mprj_io_out[24] $end
$var wire 1 S' \mprj_io_out[25] $end
$var wire 1 T' \mprj_io_out[26] $end
$var wire 1 U' \mprj_io_out[27] $end
$var wire 1 V' \mprj_io_out[28] $end
$var wire 1 W' \mprj_io_out[29] $end
$var wire 1 X' \mprj_io_out[2] $end
$var wire 1 Y' \mprj_io_out[30] $end
$var wire 1 Z' \mprj_io_out[31] $end
$var wire 1 [' \mprj_io_out[32] $end
$var wire 1 \' \mprj_io_out[33] $end
$var wire 1 ]' \mprj_io_out[34] $end
$var wire 1 ^' \mprj_io_out[35] $end
$var wire 1 _' \mprj_io_out[36] $end
$var wire 1 `' \mprj_io_out[37] $end
$var wire 1 a' \mprj_io_out[3] $end
$var wire 1 b' \mprj_io_out[4] $end
$var wire 1 c' \mprj_io_out[5] $end
$var wire 1 d' \mprj_io_out[6] $end
$var wire 1 e' \mprj_io_out[7] $end
$var wire 1 f' \mprj_io_out[8] $end
$var wire 1 g' \mprj_io_out[9] $end
$var wire 1 h' \mprj_io_slow_sel[0] $end
$var wire 1 i' \mprj_io_slow_sel[10] $end
$var wire 1 j' \mprj_io_slow_sel[11] $end
$var wire 1 k' \mprj_io_slow_sel[12] $end
$var wire 1 l' \mprj_io_slow_sel[13] $end
$var wire 1 m' \mprj_io_slow_sel[14] $end
$var wire 1 n' \mprj_io_slow_sel[15] $end
$var wire 1 o' \mprj_io_slow_sel[16] $end
$var wire 1 p' \mprj_io_slow_sel[17] $end
$var wire 1 q' \mprj_io_slow_sel[18] $end
$var wire 1 r' \mprj_io_slow_sel[19] $end
$var wire 1 s' \mprj_io_slow_sel[1] $end
$var wire 1 t' \mprj_io_slow_sel[20] $end
$var wire 1 u' \mprj_io_slow_sel[21] $end
$var wire 1 v' \mprj_io_slow_sel[22] $end
$var wire 1 w' \mprj_io_slow_sel[23] $end
$var wire 1 x' \mprj_io_slow_sel[24] $end
$var wire 1 y' \mprj_io_slow_sel[25] $end
$var wire 1 z' \mprj_io_slow_sel[26] $end
$var wire 1 {' \mprj_io_slow_sel[27] $end
$var wire 1 |' \mprj_io_slow_sel[28] $end
$var wire 1 }' \mprj_io_slow_sel[29] $end
$var wire 1 ~' \mprj_io_slow_sel[2] $end
$var wire 1 !( \mprj_io_slow_sel[30] $end
$var wire 1 "( \mprj_io_slow_sel[31] $end
$var wire 1 #( \mprj_io_slow_sel[32] $end
$var wire 1 $( \mprj_io_slow_sel[33] $end
$var wire 1 %( \mprj_io_slow_sel[34] $end
$var wire 1 &( \mprj_io_slow_sel[35] $end
$var wire 1 '( \mprj_io_slow_sel[36] $end
$var wire 1 (( \mprj_io_slow_sel[37] $end
$var wire 1 )( \mprj_io_slow_sel[3] $end
$var wire 1 *( \mprj_io_slow_sel[4] $end
$var wire 1 +( \mprj_io_slow_sel[5] $end
$var wire 1 ,( \mprj_io_slow_sel[6] $end
$var wire 1 -( \mprj_io_slow_sel[7] $end
$var wire 1 .( \mprj_io_slow_sel[8] $end
$var wire 1 /( \mprj_io_slow_sel[9] $end
$var wire 1 0( \mprj_io_vtrip_sel[0] $end
$var wire 1 1( \mprj_io_vtrip_sel[10] $end
$var wire 1 2( \mprj_io_vtrip_sel[11] $end
$var wire 1 3( \mprj_io_vtrip_sel[12] $end
$var wire 1 4( \mprj_io_vtrip_sel[13] $end
$var wire 1 5( \mprj_io_vtrip_sel[14] $end
$var wire 1 6( \mprj_io_vtrip_sel[15] $end
$var wire 1 7( \mprj_io_vtrip_sel[16] $end
$var wire 1 8( \mprj_io_vtrip_sel[17] $end
$var wire 1 9( \mprj_io_vtrip_sel[18] $end
$var wire 1 :( \mprj_io_vtrip_sel[19] $end
$var wire 1 ;( \mprj_io_vtrip_sel[1] $end
$var wire 1 <( \mprj_io_vtrip_sel[20] $end
$var wire 1 =( \mprj_io_vtrip_sel[21] $end
$var wire 1 >( \mprj_io_vtrip_sel[22] $end
$var wire 1 ?( \mprj_io_vtrip_sel[23] $end
$var wire 1 @( \mprj_io_vtrip_sel[24] $end
$var wire 1 A( \mprj_io_vtrip_sel[25] $end
$var wire 1 B( \mprj_io_vtrip_sel[26] $end
$var wire 1 C( \mprj_io_vtrip_sel[27] $end
$var wire 1 D( \mprj_io_vtrip_sel[28] $end
$var wire 1 E( \mprj_io_vtrip_sel[29] $end
$var wire 1 F( \mprj_io_vtrip_sel[2] $end
$var wire 1 G( \mprj_io_vtrip_sel[30] $end
$var wire 1 H( \mprj_io_vtrip_sel[31] $end
$var wire 1 I( \mprj_io_vtrip_sel[32] $end
$var wire 1 J( \mprj_io_vtrip_sel[33] $end
$var wire 1 K( \mprj_io_vtrip_sel[34] $end
$var wire 1 L( \mprj_io_vtrip_sel[35] $end
$var wire 1 M( \mprj_io_vtrip_sel[36] $end
$var wire 1 N( \mprj_io_vtrip_sel[37] $end
$var wire 1 O( \mprj_io_vtrip_sel[3] $end
$var wire 1 P( \mprj_io_vtrip_sel[4] $end
$var wire 1 Q( \mprj_io_vtrip_sel[5] $end
$var wire 1 R( \mprj_io_vtrip_sel[6] $end
$var wire 1 S( \mprj_io_vtrip_sel[7] $end
$var wire 1 T( \mprj_io_vtrip_sel[8] $end
$var wire 1 U( \mprj_io_vtrip_sel[9] $end
$var wire 1 V( \mprj_pads.analog_a $end
$var wire 1 W( \mprj_pads.analog_b $end
$var wire 1 X( \mprj_pads.analog_en[0] $end
$var wire 1 Y( \mprj_pads.analog_en[10] $end
$var wire 1 Z( \mprj_pads.analog_en[11] $end
$var wire 1 [( \mprj_pads.analog_en[12] $end
$var wire 1 \( \mprj_pads.analog_en[13] $end
$var wire 1 ]( \mprj_pads.analog_en[14] $end
$var wire 1 ^( \mprj_pads.analog_en[15] $end
$var wire 1 _( \mprj_pads.analog_en[16] $end
$var wire 1 `( \mprj_pads.analog_en[17] $end
$var wire 1 a( \mprj_pads.analog_en[18] $end
$var wire 1 b( \mprj_pads.analog_en[19] $end
$var wire 1 c( \mprj_pads.analog_en[1] $end
$var wire 1 d( \mprj_pads.analog_en[20] $end
$var wire 1 e( \mprj_pads.analog_en[21] $end
$var wire 1 f( \mprj_pads.analog_en[22] $end
$var wire 1 g( \mprj_pads.analog_en[23] $end
$var wire 1 h( \mprj_pads.analog_en[24] $end
$var wire 1 i( \mprj_pads.analog_en[25] $end
$var wire 1 j( \mprj_pads.analog_en[26] $end
$var wire 1 k( \mprj_pads.analog_en[27] $end
$var wire 1 l( \mprj_pads.analog_en[28] $end
$var wire 1 m( \mprj_pads.analog_en[29] $end
$var wire 1 n( \mprj_pads.analog_en[2] $end
$var wire 1 o( \mprj_pads.analog_en[30] $end
$var wire 1 p( \mprj_pads.analog_en[31] $end
$var wire 1 q( \mprj_pads.analog_en[32] $end
$var wire 1 r( \mprj_pads.analog_en[33] $end
$var wire 1 s( \mprj_pads.analog_en[34] $end
$var wire 1 t( \mprj_pads.analog_en[35] $end
$var wire 1 u( \mprj_pads.analog_en[36] $end
$var wire 1 v( \mprj_pads.analog_en[37] $end
$var wire 1 w( \mprj_pads.analog_en[3] $end
$var wire 1 x( \mprj_pads.analog_en[4] $end
$var wire 1 y( \mprj_pads.analog_en[5] $end
$var wire 1 z( \mprj_pads.analog_en[6] $end
$var wire 1 {( \mprj_pads.analog_en[7] $end
$var wire 1 |( \mprj_pads.analog_en[8] $end
$var wire 1 }( \mprj_pads.analog_en[9] $end
$var wire 1 ~( \mprj_pads.analog_io[0] $end
$var wire 1 !) \mprj_pads.analog_io[10] $end
$var wire 1 ") \mprj_pads.analog_io[11] $end
$var wire 1 #) \mprj_pads.analog_io[12] $end
$var wire 1 $) \mprj_pads.analog_io[13] $end
$var wire 1 %) \mprj_pads.analog_io[14] $end
$var wire 1 &) \mprj_pads.analog_io[15] $end
$var wire 1 ') \mprj_pads.analog_io[16] $end
$var wire 1 () \mprj_pads.analog_io[17] $end
$var wire 1 )) \mprj_pads.analog_io[18] $end
$var wire 1 *) \mprj_pads.analog_io[19] $end
$var wire 1 +) \mprj_pads.analog_io[1] $end
$var wire 1 ,) \mprj_pads.analog_io[20] $end
$var wire 1 -) \mprj_pads.analog_io[21] $end
$var wire 1 .) \mprj_pads.analog_io[22] $end
$var wire 1 /) \mprj_pads.analog_io[23] $end
$var wire 1 0) \mprj_pads.analog_io[24] $end
$var wire 1 1) \mprj_pads.analog_io[25] $end
$var wire 1 2) \mprj_pads.analog_io[26] $end
$var wire 1 3) \mprj_pads.analog_io[27] $end
$var wire 1 4) \mprj_pads.analog_io[28] $end
$var wire 1 5) \mprj_pads.analog_io[29] $end
$var wire 1 6) \mprj_pads.analog_io[2] $end
$var wire 1 7) \mprj_pads.analog_io[30] $end
$var wire 1 8) \mprj_pads.analog_io[3] $end
$var wire 1 9) \mprj_pads.analog_io[4] $end
$var wire 1 :) \mprj_pads.analog_io[5] $end
$var wire 1 ;) \mprj_pads.analog_io[6] $end
$var wire 1 <) \mprj_pads.analog_io[7] $end
$var wire 1 =) \mprj_pads.analog_io[8] $end
$var wire 1 >) \mprj_pads.analog_io[9] $end
$var wire 1 ?) \mprj_pads.analog_pol[0] $end
$var wire 1 @) \mprj_pads.analog_pol[10] $end
$var wire 1 A) \mprj_pads.analog_pol[11] $end
$var wire 1 B) \mprj_pads.analog_pol[12] $end
$var wire 1 C) \mprj_pads.analog_pol[13] $end
$var wire 1 D) \mprj_pads.analog_pol[14] $end
$var wire 1 E) \mprj_pads.analog_pol[15] $end
$var wire 1 F) \mprj_pads.analog_pol[16] $end
$var wire 1 G) \mprj_pads.analog_pol[17] $end
$var wire 1 H) \mprj_pads.analog_pol[18] $end
$var wire 1 I) \mprj_pads.analog_pol[19] $end
$var wire 1 J) \mprj_pads.analog_pol[1] $end
$var wire 1 K) \mprj_pads.analog_pol[20] $end
$var wire 1 L) \mprj_pads.analog_pol[21] $end
$var wire 1 M) \mprj_pads.analog_pol[22] $end
$var wire 1 N) \mprj_pads.analog_pol[23] $end
$var wire 1 O) \mprj_pads.analog_pol[24] $end
$var wire 1 P) \mprj_pads.analog_pol[25] $end
$var wire 1 Q) \mprj_pads.analog_pol[26] $end
$var wire 1 R) \mprj_pads.analog_pol[27] $end
$var wire 1 S) \mprj_pads.analog_pol[28] $end
$var wire 1 T) \mprj_pads.analog_pol[29] $end
$var wire 1 U) \mprj_pads.analog_pol[2] $end
$var wire 1 V) \mprj_pads.analog_pol[30] $end
$var wire 1 W) \mprj_pads.analog_pol[31] $end
$var wire 1 X) \mprj_pads.analog_pol[32] $end
$var wire 1 Y) \mprj_pads.analog_pol[33] $end
$var wire 1 Z) \mprj_pads.analog_pol[34] $end
$var wire 1 [) \mprj_pads.analog_pol[35] $end
$var wire 1 \) \mprj_pads.analog_pol[36] $end
$var wire 1 ]) \mprj_pads.analog_pol[37] $end
$var wire 1 ^) \mprj_pads.analog_pol[3] $end
$var wire 1 _) \mprj_pads.analog_pol[4] $end
$var wire 1 `) \mprj_pads.analog_pol[5] $end
$var wire 1 a) \mprj_pads.analog_pol[6] $end
$var wire 1 b) \mprj_pads.analog_pol[7] $end
$var wire 1 c) \mprj_pads.analog_pol[8] $end
$var wire 1 d) \mprj_pads.analog_pol[9] $end
$var wire 1 e) \mprj_pads.analog_sel[0] $end
$var wire 1 f) \mprj_pads.analog_sel[10] $end
$var wire 1 g) \mprj_pads.analog_sel[11] $end
$var wire 1 h) \mprj_pads.analog_sel[12] $end
$var wire 1 i) \mprj_pads.analog_sel[13] $end
$var wire 1 j) \mprj_pads.analog_sel[14] $end
$var wire 1 k) \mprj_pads.analog_sel[15] $end
$var wire 1 l) \mprj_pads.analog_sel[16] $end
$var wire 1 m) \mprj_pads.analog_sel[17] $end
$var wire 1 n) \mprj_pads.analog_sel[18] $end
$var wire 1 o) \mprj_pads.analog_sel[19] $end
$var wire 1 p) \mprj_pads.analog_sel[1] $end
$var wire 1 q) \mprj_pads.analog_sel[20] $end
$var wire 1 r) \mprj_pads.analog_sel[21] $end
$var wire 1 s) \mprj_pads.analog_sel[22] $end
$var wire 1 t) \mprj_pads.analog_sel[23] $end
$var wire 1 u) \mprj_pads.analog_sel[24] $end
$var wire 1 v) \mprj_pads.analog_sel[25] $end
$var wire 1 w) \mprj_pads.analog_sel[26] $end
$var wire 1 x) \mprj_pads.analog_sel[27] $end
$var wire 1 y) \mprj_pads.analog_sel[28] $end
$var wire 1 z) \mprj_pads.analog_sel[29] $end
$var wire 1 {) \mprj_pads.analog_sel[2] $end
$var wire 1 |) \mprj_pads.analog_sel[30] $end
$var wire 1 }) \mprj_pads.analog_sel[31] $end
$var wire 1 ~) \mprj_pads.analog_sel[32] $end
$var wire 1 !* \mprj_pads.analog_sel[33] $end
$var wire 1 "* \mprj_pads.analog_sel[34] $end
$var wire 1 #* \mprj_pads.analog_sel[35] $end
$var wire 1 $* \mprj_pads.analog_sel[36] $end
$var wire 1 %* \mprj_pads.analog_sel[37] $end
$var wire 1 &* \mprj_pads.analog_sel[3] $end
$var wire 1 '* \mprj_pads.analog_sel[4] $end
$var wire 1 (* \mprj_pads.analog_sel[5] $end
$var wire 1 )* \mprj_pads.analog_sel[6] $end
$var wire 1 ** \mprj_pads.analog_sel[7] $end
$var wire 1 +* \mprj_pads.analog_sel[8] $end
$var wire 1 ,* \mprj_pads.analog_sel[9] $end
$var wire 1 -* \mprj_pads.dm[0] $end
$var wire 1 .* \mprj_pads.dm[100] $end
$var wire 1 /* \mprj_pads.dm[101] $end
$var wire 1 0* \mprj_pads.dm[102] $end
$var wire 1 1* \mprj_pads.dm[103] $end
$var wire 1 2* \mprj_pads.dm[104] $end
$var wire 1 3* \mprj_pads.dm[105] $end
$var wire 1 4* \mprj_pads.dm[106] $end
$var wire 1 5* \mprj_pads.dm[107] $end
$var wire 1 6* \mprj_pads.dm[108] $end
$var wire 1 7* \mprj_pads.dm[109] $end
$var wire 1 8* \mprj_pads.dm[10] $end
$var wire 1 9* \mprj_pads.dm[110] $end
$var wire 1 :* \mprj_pads.dm[111] $end
$var wire 1 ;* \mprj_pads.dm[112] $end
$var wire 1 <* \mprj_pads.dm[113] $end
$var wire 1 =* \mprj_pads.dm[11] $end
$var wire 1 >* \mprj_pads.dm[12] $end
$var wire 1 ?* \mprj_pads.dm[13] $end
$var wire 1 @* \mprj_pads.dm[14] $end
$var wire 1 A* \mprj_pads.dm[15] $end
$var wire 1 B* \mprj_pads.dm[16] $end
$var wire 1 C* \mprj_pads.dm[17] $end
$var wire 1 D* \mprj_pads.dm[18] $end
$var wire 1 E* \mprj_pads.dm[19] $end
$var wire 1 F* \mprj_pads.dm[1] $end
$var wire 1 G* \mprj_pads.dm[20] $end
$var wire 1 H* \mprj_pads.dm[21] $end
$var wire 1 I* \mprj_pads.dm[22] $end
$var wire 1 J* \mprj_pads.dm[23] $end
$var wire 1 K* \mprj_pads.dm[24] $end
$var wire 1 L* \mprj_pads.dm[25] $end
$var wire 1 M* \mprj_pads.dm[26] $end
$var wire 1 N* \mprj_pads.dm[27] $end
$var wire 1 O* \mprj_pads.dm[28] $end
$var wire 1 P* \mprj_pads.dm[29] $end
$var wire 1 Q* \mprj_pads.dm[2] $end
$var wire 1 R* \mprj_pads.dm[30] $end
$var wire 1 S* \mprj_pads.dm[31] $end
$var wire 1 T* \mprj_pads.dm[32] $end
$var wire 1 U* \mprj_pads.dm[33] $end
$var wire 1 V* \mprj_pads.dm[34] $end
$var wire 1 W* \mprj_pads.dm[35] $end
$var wire 1 X* \mprj_pads.dm[36] $end
$var wire 1 Y* \mprj_pads.dm[37] $end
$var wire 1 Z* \mprj_pads.dm[38] $end
$var wire 1 [* \mprj_pads.dm[39] $end
$var wire 1 \* \mprj_pads.dm[3] $end
$var wire 1 ]* \mprj_pads.dm[40] $end
$var wire 1 ^* \mprj_pads.dm[41] $end
$var wire 1 _* \mprj_pads.dm[42] $end
$var wire 1 `* \mprj_pads.dm[43] $end
$var wire 1 a* \mprj_pads.dm[44] $end
$var wire 1 b* \mprj_pads.dm[45] $end
$var wire 1 c* \mprj_pads.dm[46] $end
$var wire 1 d* \mprj_pads.dm[47] $end
$var wire 1 e* \mprj_pads.dm[48] $end
$var wire 1 f* \mprj_pads.dm[49] $end
$var wire 1 g* \mprj_pads.dm[4] $end
$var wire 1 h* \mprj_pads.dm[50] $end
$var wire 1 i* \mprj_pads.dm[51] $end
$var wire 1 j* \mprj_pads.dm[52] $end
$var wire 1 k* \mprj_pads.dm[53] $end
$var wire 1 l* \mprj_pads.dm[54] $end
$var wire 1 m* \mprj_pads.dm[55] $end
$var wire 1 n* \mprj_pads.dm[56] $end
$var wire 1 o* \mprj_pads.dm[57] $end
$var wire 1 p* \mprj_pads.dm[58] $end
$var wire 1 q* \mprj_pads.dm[59] $end
$var wire 1 r* \mprj_pads.dm[5] $end
$var wire 1 s* \mprj_pads.dm[60] $end
$var wire 1 t* \mprj_pads.dm[61] $end
$var wire 1 u* \mprj_pads.dm[62] $end
$var wire 1 v* \mprj_pads.dm[63] $end
$var wire 1 w* \mprj_pads.dm[64] $end
$var wire 1 x* \mprj_pads.dm[65] $end
$var wire 1 y* \mprj_pads.dm[66] $end
$var wire 1 z* \mprj_pads.dm[67] $end
$var wire 1 {* \mprj_pads.dm[68] $end
$var wire 1 |* \mprj_pads.dm[69] $end
$var wire 1 }* \mprj_pads.dm[6] $end
$var wire 1 ~* \mprj_pads.dm[70] $end
$var wire 1 !+ \mprj_pads.dm[71] $end
$var wire 1 "+ \mprj_pads.dm[72] $end
$var wire 1 #+ \mprj_pads.dm[73] $end
$var wire 1 $+ \mprj_pads.dm[74] $end
$var wire 1 %+ \mprj_pads.dm[75] $end
$var wire 1 &+ \mprj_pads.dm[76] $end
$var wire 1 '+ \mprj_pads.dm[77] $end
$var wire 1 (+ \mprj_pads.dm[78] $end
$var wire 1 )+ \mprj_pads.dm[79] $end
$var wire 1 *+ \mprj_pads.dm[7] $end
$var wire 1 ++ \mprj_pads.dm[80] $end
$var wire 1 ,+ \mprj_pads.dm[81] $end
$var wire 1 -+ \mprj_pads.dm[82] $end
$var wire 1 .+ \mprj_pads.dm[83] $end
$var wire 1 /+ \mprj_pads.dm[84] $end
$var wire 1 0+ \mprj_pads.dm[85] $end
$var wire 1 1+ \mprj_pads.dm[86] $end
$var wire 1 2+ \mprj_pads.dm[87] $end
$var wire 1 3+ \mprj_pads.dm[88] $end
$var wire 1 4+ \mprj_pads.dm[89] $end
$var wire 1 5+ \mprj_pads.dm[8] $end
$var wire 1 6+ \mprj_pads.dm[90] $end
$var wire 1 7+ \mprj_pads.dm[91] $end
$var wire 1 8+ \mprj_pads.dm[92] $end
$var wire 1 9+ \mprj_pads.dm[93] $end
$var wire 1 :+ \mprj_pads.dm[94] $end
$var wire 1 ;+ \mprj_pads.dm[95] $end
$var wire 1 <+ \mprj_pads.dm[96] $end
$var wire 1 =+ \mprj_pads.dm[97] $end
$var wire 1 >+ \mprj_pads.dm[98] $end
$var wire 1 ?+ \mprj_pads.dm[99] $end
$var wire 1 @+ \mprj_pads.dm[9] $end
$var wire 1 A+ \mprj_pads.enh[0] $end
$var wire 1 B+ \mprj_pads.enh[10] $end
$var wire 1 C+ \mprj_pads.enh[11] $end
$var wire 1 D+ \mprj_pads.enh[12] $end
$var wire 1 E+ \mprj_pads.enh[13] $end
$var wire 1 F+ \mprj_pads.enh[14] $end
$var wire 1 G+ \mprj_pads.enh[15] $end
$var wire 1 H+ \mprj_pads.enh[16] $end
$var wire 1 I+ \mprj_pads.enh[17] $end
$var wire 1 J+ \mprj_pads.enh[18] $end
$var wire 1 K+ \mprj_pads.enh[19] $end
$var wire 1 L+ \mprj_pads.enh[1] $end
$var wire 1 M+ \mprj_pads.enh[20] $end
$var wire 1 N+ \mprj_pads.enh[21] $end
$var wire 1 O+ \mprj_pads.enh[22] $end
$var wire 1 P+ \mprj_pads.enh[23] $end
$var wire 1 Q+ \mprj_pads.enh[24] $end
$var wire 1 R+ \mprj_pads.enh[25] $end
$var wire 1 S+ \mprj_pads.enh[26] $end
$var wire 1 T+ \mprj_pads.enh[27] $end
$var wire 1 U+ \mprj_pads.enh[28] $end
$var wire 1 V+ \mprj_pads.enh[29] $end
$var wire 1 W+ \mprj_pads.enh[2] $end
$var wire 1 X+ \mprj_pads.enh[30] $end
$var wire 1 Y+ \mprj_pads.enh[31] $end
$var wire 1 Z+ \mprj_pads.enh[32] $end
$var wire 1 [+ \mprj_pads.enh[33] $end
$var wire 1 \+ \mprj_pads.enh[34] $end
$var wire 1 ]+ \mprj_pads.enh[35] $end
$var wire 1 ^+ \mprj_pads.enh[36] $end
$var wire 1 _+ \mprj_pads.enh[37] $end
$var wire 1 `+ \mprj_pads.enh[3] $end
$var wire 1 a+ \mprj_pads.enh[4] $end
$var wire 1 b+ \mprj_pads.enh[5] $end
$var wire 1 c+ \mprj_pads.enh[6] $end
$var wire 1 d+ \mprj_pads.enh[7] $end
$var wire 1 e+ \mprj_pads.enh[8] $end
$var wire 1 f+ \mprj_pads.enh[9] $end
$var wire 1 g+ \mprj_pads.hldh_n[0] $end
$var wire 1 h+ \mprj_pads.hldh_n[10] $end
$var wire 1 i+ \mprj_pads.hldh_n[11] $end
$var wire 1 j+ \mprj_pads.hldh_n[12] $end
$var wire 1 k+ \mprj_pads.hldh_n[13] $end
$var wire 1 l+ \mprj_pads.hldh_n[14] $end
$var wire 1 m+ \mprj_pads.hldh_n[15] $end
$var wire 1 n+ \mprj_pads.hldh_n[16] $end
$var wire 1 o+ \mprj_pads.hldh_n[17] $end
$var wire 1 p+ \mprj_pads.hldh_n[18] $end
$var wire 1 q+ \mprj_pads.hldh_n[19] $end
$var wire 1 r+ \mprj_pads.hldh_n[1] $end
$var wire 1 s+ \mprj_pads.hldh_n[20] $end
$var wire 1 t+ \mprj_pads.hldh_n[21] $end
$var wire 1 u+ \mprj_pads.hldh_n[22] $end
$var wire 1 v+ \mprj_pads.hldh_n[23] $end
$var wire 1 w+ \mprj_pads.hldh_n[24] $end
$var wire 1 x+ \mprj_pads.hldh_n[25] $end
$var wire 1 y+ \mprj_pads.hldh_n[26] $end
$var wire 1 z+ \mprj_pads.hldh_n[27] $end
$var wire 1 {+ \mprj_pads.hldh_n[28] $end
$var wire 1 |+ \mprj_pads.hldh_n[29] $end
$var wire 1 }+ \mprj_pads.hldh_n[2] $end
$var wire 1 ~+ \mprj_pads.hldh_n[30] $end
$var wire 1 !, \mprj_pads.hldh_n[31] $end
$var wire 1 ", \mprj_pads.hldh_n[32] $end
$var wire 1 #, \mprj_pads.hldh_n[33] $end
$var wire 1 $, \mprj_pads.hldh_n[34] $end
$var wire 1 %, \mprj_pads.hldh_n[35] $end
$var wire 1 &, \mprj_pads.hldh_n[36] $end
$var wire 1 ', \mprj_pads.hldh_n[37] $end
$var wire 1 (, \mprj_pads.hldh_n[3] $end
$var wire 1 ), \mprj_pads.hldh_n[4] $end
$var wire 1 *, \mprj_pads.hldh_n[5] $end
$var wire 1 +, \mprj_pads.hldh_n[6] $end
$var wire 1 ,, \mprj_pads.hldh_n[7] $end
$var wire 1 -, \mprj_pads.hldh_n[8] $end
$var wire 1 ., \mprj_pads.hldh_n[9] $end
$var wire 1 /, \mprj_pads.holdover[0] $end
$var wire 1 0, \mprj_pads.holdover[10] $end
$var wire 1 1, \mprj_pads.holdover[11] $end
$var wire 1 2, \mprj_pads.holdover[12] $end
$var wire 1 3, \mprj_pads.holdover[13] $end
$var wire 1 4, \mprj_pads.holdover[14] $end
$var wire 1 5, \mprj_pads.holdover[15] $end
$var wire 1 6, \mprj_pads.holdover[16] $end
$var wire 1 7, \mprj_pads.holdover[17] $end
$var wire 1 8, \mprj_pads.holdover[18] $end
$var wire 1 9, \mprj_pads.holdover[19] $end
$var wire 1 :, \mprj_pads.holdover[1] $end
$var wire 1 ;, \mprj_pads.holdover[20] $end
$var wire 1 <, \mprj_pads.holdover[21] $end
$var wire 1 =, \mprj_pads.holdover[22] $end
$var wire 1 >, \mprj_pads.holdover[23] $end
$var wire 1 ?, \mprj_pads.holdover[24] $end
$var wire 1 @, \mprj_pads.holdover[25] $end
$var wire 1 A, \mprj_pads.holdover[26] $end
$var wire 1 B, \mprj_pads.holdover[27] $end
$var wire 1 C, \mprj_pads.holdover[28] $end
$var wire 1 D, \mprj_pads.holdover[29] $end
$var wire 1 E, \mprj_pads.holdover[2] $end
$var wire 1 F, \mprj_pads.holdover[30] $end
$var wire 1 G, \mprj_pads.holdover[31] $end
$var wire 1 H, \mprj_pads.holdover[32] $end
$var wire 1 I, \mprj_pads.holdover[33] $end
$var wire 1 J, \mprj_pads.holdover[34] $end
$var wire 1 K, \mprj_pads.holdover[35] $end
$var wire 1 L, \mprj_pads.holdover[36] $end
$var wire 1 M, \mprj_pads.holdover[37] $end
$var wire 1 N, \mprj_pads.holdover[3] $end
$var wire 1 O, \mprj_pads.holdover[4] $end
$var wire 1 P, \mprj_pads.holdover[5] $end
$var wire 1 Q, \mprj_pads.holdover[6] $end
$var wire 1 R, \mprj_pads.holdover[7] $end
$var wire 1 S, \mprj_pads.holdover[8] $end
$var wire 1 T, \mprj_pads.holdover[9] $end
$var wire 1 U, \mprj_pads.ib_mode_sel[0] $end
$var wire 1 V, \mprj_pads.ib_mode_sel[10] $end
$var wire 1 W, \mprj_pads.ib_mode_sel[11] $end
$var wire 1 X, \mprj_pads.ib_mode_sel[12] $end
$var wire 1 Y, \mprj_pads.ib_mode_sel[13] $end
$var wire 1 Z, \mprj_pads.ib_mode_sel[14] $end
$var wire 1 [, \mprj_pads.ib_mode_sel[15] $end
$var wire 1 \, \mprj_pads.ib_mode_sel[16] $end
$var wire 1 ], \mprj_pads.ib_mode_sel[17] $end
$var wire 1 ^, \mprj_pads.ib_mode_sel[18] $end
$var wire 1 _, \mprj_pads.ib_mode_sel[19] $end
$var wire 1 `, \mprj_pads.ib_mode_sel[1] $end
$var wire 1 a, \mprj_pads.ib_mode_sel[20] $end
$var wire 1 b, \mprj_pads.ib_mode_sel[21] $end
$var wire 1 c, \mprj_pads.ib_mode_sel[22] $end
$var wire 1 d, \mprj_pads.ib_mode_sel[23] $end
$var wire 1 e, \mprj_pads.ib_mode_sel[24] $end
$var wire 1 f, \mprj_pads.ib_mode_sel[25] $end
$var wire 1 g, \mprj_pads.ib_mode_sel[26] $end
$var wire 1 h, \mprj_pads.ib_mode_sel[27] $end
$var wire 1 i, \mprj_pads.ib_mode_sel[28] $end
$var wire 1 j, \mprj_pads.ib_mode_sel[29] $end
$var wire 1 k, \mprj_pads.ib_mode_sel[2] $end
$var wire 1 l, \mprj_pads.ib_mode_sel[30] $end
$var wire 1 m, \mprj_pads.ib_mode_sel[31] $end
$var wire 1 n, \mprj_pads.ib_mode_sel[32] $end
$var wire 1 o, \mprj_pads.ib_mode_sel[33] $end
$var wire 1 p, \mprj_pads.ib_mode_sel[34] $end
$var wire 1 q, \mprj_pads.ib_mode_sel[35] $end
$var wire 1 r, \mprj_pads.ib_mode_sel[36] $end
$var wire 1 s, \mprj_pads.ib_mode_sel[37] $end
$var wire 1 t, \mprj_pads.ib_mode_sel[3] $end
$var wire 1 u, \mprj_pads.ib_mode_sel[4] $end
$var wire 1 v, \mprj_pads.ib_mode_sel[5] $end
$var wire 1 w, \mprj_pads.ib_mode_sel[6] $end
$var wire 1 x, \mprj_pads.ib_mode_sel[7] $end
$var wire 1 y, \mprj_pads.ib_mode_sel[8] $end
$var wire 1 z, \mprj_pads.ib_mode_sel[9] $end
$var wire 1 {, \mprj_pads.inp_dis[0] $end
$var wire 1 |, \mprj_pads.inp_dis[10] $end
$var wire 1 }, \mprj_pads.inp_dis[11] $end
$var wire 1 ~, \mprj_pads.inp_dis[12] $end
$var wire 1 !- \mprj_pads.inp_dis[13] $end
$var wire 1 "- \mprj_pads.inp_dis[14] $end
$var wire 1 #- \mprj_pads.inp_dis[15] $end
$var wire 1 $- \mprj_pads.inp_dis[16] $end
$var wire 1 %- \mprj_pads.inp_dis[17] $end
$var wire 1 &- \mprj_pads.inp_dis[18] $end
$var wire 1 '- \mprj_pads.inp_dis[19] $end
$var wire 1 (- \mprj_pads.inp_dis[1] $end
$var wire 1 )- \mprj_pads.inp_dis[20] $end
$var wire 1 *- \mprj_pads.inp_dis[21] $end
$var wire 1 +- \mprj_pads.inp_dis[22] $end
$var wire 1 ,- \mprj_pads.inp_dis[23] $end
$var wire 1 -- \mprj_pads.inp_dis[24] $end
$var wire 1 .- \mprj_pads.inp_dis[25] $end
$var wire 1 /- \mprj_pads.inp_dis[26] $end
$var wire 1 0- \mprj_pads.inp_dis[27] $end
$var wire 1 1- \mprj_pads.inp_dis[28] $end
$var wire 1 2- \mprj_pads.inp_dis[29] $end
$var wire 1 3- \mprj_pads.inp_dis[2] $end
$var wire 1 4- \mprj_pads.inp_dis[30] $end
$var wire 1 5- \mprj_pads.inp_dis[31] $end
$var wire 1 6- \mprj_pads.inp_dis[32] $end
$var wire 1 7- \mprj_pads.inp_dis[33] $end
$var wire 1 8- \mprj_pads.inp_dis[34] $end
$var wire 1 9- \mprj_pads.inp_dis[35] $end
$var wire 1 :- \mprj_pads.inp_dis[36] $end
$var wire 1 ;- \mprj_pads.inp_dis[37] $end
$var wire 1 <- \mprj_pads.inp_dis[3] $end
$var wire 1 =- \mprj_pads.inp_dis[4] $end
$var wire 1 >- \mprj_pads.inp_dis[5] $end
$var wire 1 ?- \mprj_pads.inp_dis[6] $end
$var wire 1 @- \mprj_pads.inp_dis[7] $end
$var wire 1 A- \mprj_pads.inp_dis[8] $end
$var wire 1 B- \mprj_pads.inp_dis[9] $end
$var wire 1 C- \mprj_pads.io[0] $end
$var wire 1 D- \mprj_pads.io[10] $end
$var wire 1 E- \mprj_pads.io[11] $end
$var wire 1 F- \mprj_pads.io[12] $end
$var wire 1 G- \mprj_pads.io[13] $end
$var wire 1 H- \mprj_pads.io[14] $end
$var wire 1 I- \mprj_pads.io[15] $end
$var wire 1 J- \mprj_pads.io[16] $end
$var wire 1 K- \mprj_pads.io[17] $end
$var wire 1 L- \mprj_pads.io[18] $end
$var wire 1 M- \mprj_pads.io[19] $end
$var wire 1 N- \mprj_pads.io[1] $end
$var wire 1 O- \mprj_pads.io[20] $end
$var wire 1 P- \mprj_pads.io[21] $end
$var wire 1 Q- \mprj_pads.io[22] $end
$var wire 1 R- \mprj_pads.io[23] $end
$var wire 1 S- \mprj_pads.io[24] $end
$var wire 1 T- \mprj_pads.io[25] $end
$var wire 1 U- \mprj_pads.io[26] $end
$var wire 1 V- \mprj_pads.io[27] $end
$var wire 1 W- \mprj_pads.io[28] $end
$var wire 1 X- \mprj_pads.io[29] $end
$var wire 1 Y- \mprj_pads.io[2] $end
$var wire 1 Z- \mprj_pads.io[30] $end
$var wire 1 [- \mprj_pads.io[31] $end
$var wire 1 \- \mprj_pads.io[32] $end
$var wire 1 ]- \mprj_pads.io[33] $end
$var wire 1 ^- \mprj_pads.io[34] $end
$var wire 1 _- \mprj_pads.io[35] $end
$var wire 1 `- \mprj_pads.io[36] $end
$var wire 1 a- \mprj_pads.io[37] $end
$var wire 1 b- \mprj_pads.io[3] $end
$var wire 1 c- \mprj_pads.io[4] $end
$var wire 1 d- \mprj_pads.io[5] $end
$var wire 1 e- \mprj_pads.io[6] $end
$var wire 1 f- \mprj_pads.io[7] $end
$var wire 1 g- \mprj_pads.io[8] $end
$var wire 1 h- \mprj_pads.io[9] $end
$var wire 1 i- \mprj_pads.io_out[0] $end
$var wire 1 j- \mprj_pads.io_out[10] $end
$var wire 1 k- \mprj_pads.io_out[11] $end
$var wire 1 l- \mprj_pads.io_out[12] $end
$var wire 1 m- \mprj_pads.io_out[13] $end
$var wire 1 n- \mprj_pads.io_out[14] $end
$var wire 1 o- \mprj_pads.io_out[15] $end
$var wire 1 p- \mprj_pads.io_out[16] $end
$var wire 1 q- \mprj_pads.io_out[17] $end
$var wire 1 r- \mprj_pads.io_out[18] $end
$var wire 1 s- \mprj_pads.io_out[19] $end
$var wire 1 t- \mprj_pads.io_out[1] $end
$var wire 1 u- \mprj_pads.io_out[20] $end
$var wire 1 v- \mprj_pads.io_out[21] $end
$var wire 1 w- \mprj_pads.io_out[22] $end
$var wire 1 x- \mprj_pads.io_out[23] $end
$var wire 1 y- \mprj_pads.io_out[24] $end
$var wire 1 z- \mprj_pads.io_out[25] $end
$var wire 1 {- \mprj_pads.io_out[26] $end
$var wire 1 |- \mprj_pads.io_out[27] $end
$var wire 1 }- \mprj_pads.io_out[28] $end
$var wire 1 ~- \mprj_pads.io_out[29] $end
$var wire 1 !. \mprj_pads.io_out[2] $end
$var wire 1 ". \mprj_pads.io_out[30] $end
$var wire 1 #. \mprj_pads.io_out[31] $end
$var wire 1 $. \mprj_pads.io_out[32] $end
$var wire 1 %. \mprj_pads.io_out[33] $end
$var wire 1 &. \mprj_pads.io_out[34] $end
$var wire 1 '. \mprj_pads.io_out[35] $end
$var wire 1 (. \mprj_pads.io_out[36] $end
$var wire 1 ). \mprj_pads.io_out[37] $end
$var wire 1 *. \mprj_pads.io_out[3] $end
$var wire 1 +. \mprj_pads.io_out[4] $end
$var wire 1 ,. \mprj_pads.io_out[5] $end
$var wire 1 -. \mprj_pads.io_out[6] $end
$var wire 1 .. \mprj_pads.io_out[7] $end
$var wire 1 /. \mprj_pads.io_out[8] $end
$var wire 1 0. \mprj_pads.io_out[9] $end
$var wire 1 1. \mprj_pads.no_connect[0] $end
$var wire 1 2. \mprj_pads.no_connect[1] $end
$var wire 1 3. \mprj_pads.no_connect[2] $end
$var wire 1 4. \mprj_pads.no_connect[3] $end
$var wire 1 5. \mprj_pads.no_connect[4] $end
$var wire 1 6. \mprj_pads.no_connect[5] $end
$var wire 1 7. \mprj_pads.no_connect[6] $end
$var wire 1 8. \mprj_pads.oeb[0] $end
$var wire 1 9. \mprj_pads.oeb[10] $end
$var wire 1 :. \mprj_pads.oeb[11] $end
$var wire 1 ;. \mprj_pads.oeb[12] $end
$var wire 1 <. \mprj_pads.oeb[13] $end
$var wire 1 =. \mprj_pads.oeb[14] $end
$var wire 1 >. \mprj_pads.oeb[15] $end
$var wire 1 ?. \mprj_pads.oeb[16] $end
$var wire 1 @. \mprj_pads.oeb[17] $end
$var wire 1 A. \mprj_pads.oeb[18] $end
$var wire 1 B. \mprj_pads.oeb[19] $end
$var wire 1 C. \mprj_pads.oeb[1] $end
$var wire 1 D. \mprj_pads.oeb[20] $end
$var wire 1 E. \mprj_pads.oeb[21] $end
$var wire 1 F. \mprj_pads.oeb[22] $end
$var wire 1 G. \mprj_pads.oeb[23] $end
$var wire 1 H. \mprj_pads.oeb[24] $end
$var wire 1 I. \mprj_pads.oeb[25] $end
$var wire 1 J. \mprj_pads.oeb[26] $end
$var wire 1 K. \mprj_pads.oeb[27] $end
$var wire 1 L. \mprj_pads.oeb[28] $end
$var wire 1 M. \mprj_pads.oeb[29] $end
$var wire 1 N. \mprj_pads.oeb[2] $end
$var wire 1 O. \mprj_pads.oeb[30] $end
$var wire 1 P. \mprj_pads.oeb[31] $end
$var wire 1 Q. \mprj_pads.oeb[32] $end
$var wire 1 R. \mprj_pads.oeb[33] $end
$var wire 1 S. \mprj_pads.oeb[34] $end
$var wire 1 T. \mprj_pads.oeb[35] $end
$var wire 1 U. \mprj_pads.oeb[36] $end
$var wire 1 V. \mprj_pads.oeb[37] $end
$var wire 1 W. \mprj_pads.oeb[3] $end
$var wire 1 X. \mprj_pads.oeb[4] $end
$var wire 1 Y. \mprj_pads.oeb[5] $end
$var wire 1 Z. \mprj_pads.oeb[6] $end
$var wire 1 [. \mprj_pads.oeb[7] $end
$var wire 1 \. \mprj_pads.oeb[8] $end
$var wire 1 ]. \mprj_pads.oeb[9] $end
$var wire 1 ^. \mprj_pads.porb_h $end
$var wire 1 _. \mprj_pads.slow_sel[0] $end
$var wire 1 `. \mprj_pads.slow_sel[10] $end
$var wire 1 a. \mprj_pads.slow_sel[11] $end
$var wire 1 b. \mprj_pads.slow_sel[12] $end
$var wire 1 c. \mprj_pads.slow_sel[13] $end
$var wire 1 d. \mprj_pads.slow_sel[14] $end
$var wire 1 e. \mprj_pads.slow_sel[15] $end
$var wire 1 f. \mprj_pads.slow_sel[16] $end
$var wire 1 g. \mprj_pads.slow_sel[17] $end
$var wire 1 h. \mprj_pads.slow_sel[18] $end
$var wire 1 i. \mprj_pads.slow_sel[19] $end
$var wire 1 j. \mprj_pads.slow_sel[1] $end
$var wire 1 k. \mprj_pads.slow_sel[20] $end
$var wire 1 l. \mprj_pads.slow_sel[21] $end
$var wire 1 m. \mprj_pads.slow_sel[22] $end
$var wire 1 n. \mprj_pads.slow_sel[23] $end
$var wire 1 o. \mprj_pads.slow_sel[24] $end
$var wire 1 p. \mprj_pads.slow_sel[25] $end
$var wire 1 q. \mprj_pads.slow_sel[26] $end
$var wire 1 r. \mprj_pads.slow_sel[27] $end
$var wire 1 s. \mprj_pads.slow_sel[28] $end
$var wire 1 t. \mprj_pads.slow_sel[29] $end
$var wire 1 u. \mprj_pads.slow_sel[2] $end
$var wire 1 v. \mprj_pads.slow_sel[30] $end
$var wire 1 w. \mprj_pads.slow_sel[31] $end
$var wire 1 x. \mprj_pads.slow_sel[32] $end
$var wire 1 y. \mprj_pads.slow_sel[33] $end
$var wire 1 z. \mprj_pads.slow_sel[34] $end
$var wire 1 {. \mprj_pads.slow_sel[35] $end
$var wire 1 |. \mprj_pads.slow_sel[36] $end
$var wire 1 }. \mprj_pads.slow_sel[37] $end
$var wire 1 ~. \mprj_pads.slow_sel[3] $end
$var wire 1 !/ \mprj_pads.slow_sel[4] $end
$var wire 1 "/ \mprj_pads.slow_sel[5] $end
$var wire 1 #/ \mprj_pads.slow_sel[6] $end
$var wire 1 $/ \mprj_pads.slow_sel[7] $end
$var wire 1 %/ \mprj_pads.slow_sel[8] $end
$var wire 1 &/ \mprj_pads.slow_sel[9] $end
$var wire 1 '/ \mprj_pads.vccd $end
$var wire 1 (/ \mprj_pads.vccd1 $end
$var wire 1 )/ \mprj_pads.vccd2 $end
$var wire 1 */ \mprj_pads.vdda1 $end
$var wire 1 +/ \mprj_pads.vdda2 $end
$var wire 1 ,/ \mprj_pads.vddio $end
$var wire 1 -/ \mprj_pads.vddio_q $end
$var wire 1 ./ \mprj_pads.vssa1 $end
$var wire 1 // \mprj_pads.vssa2 $end
$var wire 1 0/ \mprj_pads.vssd $end
$var wire 1 1/ \mprj_pads.vssd1 $end
$var wire 1 2/ \mprj_pads.vssd2 $end
$var wire 1 3/ \mprj_pads.vssio $end
$var wire 1 4/ \mprj_pads.vssio_q $end
$var wire 1 5/ \mprj_pads.vtrip_sel[0] $end
$var wire 1 6/ \mprj_pads.vtrip_sel[10] $end
$var wire 1 7/ \mprj_pads.vtrip_sel[11] $end
$var wire 1 8/ \mprj_pads.vtrip_sel[12] $end
$var wire 1 9/ \mprj_pads.vtrip_sel[13] $end
$var wire 1 :/ \mprj_pads.vtrip_sel[14] $end
$var wire 1 ;/ \mprj_pads.vtrip_sel[15] $end
$var wire 1 </ \mprj_pads.vtrip_sel[16] $end
$var wire 1 =/ \mprj_pads.vtrip_sel[17] $end
$var wire 1 >/ \mprj_pads.vtrip_sel[18] $end
$var wire 1 ?/ \mprj_pads.vtrip_sel[19] $end
$var wire 1 @/ \mprj_pads.vtrip_sel[1] $end
$var wire 1 A/ \mprj_pads.vtrip_sel[20] $end
$var wire 1 B/ \mprj_pads.vtrip_sel[21] $end
$var wire 1 C/ \mprj_pads.vtrip_sel[22] $end
$var wire 1 D/ \mprj_pads.vtrip_sel[23] $end
$var wire 1 E/ \mprj_pads.vtrip_sel[24] $end
$var wire 1 F/ \mprj_pads.vtrip_sel[25] $end
$var wire 1 G/ \mprj_pads.vtrip_sel[26] $end
$var wire 1 H/ \mprj_pads.vtrip_sel[27] $end
$var wire 1 I/ \mprj_pads.vtrip_sel[28] $end
$var wire 1 J/ \mprj_pads.vtrip_sel[29] $end
$var wire 1 K/ \mprj_pads.vtrip_sel[2] $end
$var wire 1 L/ \mprj_pads.vtrip_sel[30] $end
$var wire 1 M/ \mprj_pads.vtrip_sel[31] $end
$var wire 1 N/ \mprj_pads.vtrip_sel[32] $end
$var wire 1 O/ \mprj_pads.vtrip_sel[33] $end
$var wire 1 P/ \mprj_pads.vtrip_sel[34] $end
$var wire 1 Q/ \mprj_pads.vtrip_sel[35] $end
$var wire 1 R/ \mprj_pads.vtrip_sel[36] $end
$var wire 1 S/ \mprj_pads.vtrip_sel[37] $end
$var wire 1 T/ \mprj_pads.vtrip_sel[3] $end
$var wire 1 U/ \mprj_pads.vtrip_sel[4] $end
$var wire 1 V/ \mprj_pads.vtrip_sel[5] $end
$var wire 1 W/ \mprj_pads.vtrip_sel[6] $end
$var wire 1 X/ \mprj_pads.vtrip_sel[7] $end
$var wire 1 Y/ \mprj_pads.vtrip_sel[8] $end
$var wire 1 Z/ \mprj_pads.vtrip_sel[9] $end
$var wire 1 . por $end
$var wire 1 Z porb_h $end
$var wire 1 [/ resetb $end
$var wire 1 ! vccd $end
$var wire 1 ! vccd1 $end
$var wire 1 " vccd1_pad $end
$var wire 1 ! vccd2 $end
$var wire 1 " vccd2_pad $end
$var wire 1 " vccd_pad $end
$var wire 1 # vdda $end
$var wire 1 # vdda1 $end
$var wire 1 $ vdda1_pad $end
$var wire 1 $ vdda1_pad2 $end
$var wire 1 # vdda2 $end
$var wire 1 $ vdda2_pad $end
$var wire 1 $ vdda_pad $end
$var wire 1 # vddio $end
$var wire 1 $ vddio_pad $end
$var wire 1 $ vddio_pad2 $end
$var wire 1 \/ vddio_q $end
$var wire 1 % vssa $end
$var wire 1 % vssa1 $end
$var wire 1 & vssa1_pad $end
$var wire 1 & vssa1_pad2 $end
$var wire 1 % vssa2 $end
$var wire 1 & vssa2_pad $end
$var wire 1 & vssa_pad $end
$var wire 1 % vssd $end
$var wire 1 % vssd1 $end
$var wire 1 & vssd1_pad $end
$var wire 1 % vssd2 $end
$var wire 1 & vssd2_pad $end
$var wire 1 & vssd_pad $end
$var wire 1 % vssio $end
$var wire 1 & vssio_pad $end
$var wire 1 & vssio_pad2 $end
$var wire 1 ]/ vssio_q $end
$var wire 1 ^/ xresloop $end
$var wire 1 / resetb_core_h $end
$var wire 1 _/ \mprj_pads.loop1_io[9] $end
$var wire 1 `/ \mprj_pads.loop1_io[8] $end
$var wire 1 a/ \mprj_pads.loop1_io[7] $end
$var wire 1 b/ \mprj_pads.loop1_io[6] $end
$var wire 1 c/ \mprj_pads.loop1_io[5] $end
$var wire 1 d/ \mprj_pads.loop1_io[4] $end
$var wire 1 e/ \mprj_pads.loop1_io[3] $end
$var wire 1 f/ \mprj_pads.loop1_io[37] $end
$var wire 1 g/ \mprj_pads.loop1_io[36] $end
$var wire 1 h/ \mprj_pads.loop1_io[35] $end
$var wire 1 i/ \mprj_pads.loop1_io[34] $end
$var wire 1 j/ \mprj_pads.loop1_io[33] $end
$var wire 1 k/ \mprj_pads.loop1_io[32] $end
$var wire 1 l/ \mprj_pads.loop1_io[31] $end
$var wire 1 m/ \mprj_pads.loop1_io[30] $end
$var wire 1 n/ \mprj_pads.loop1_io[2] $end
$var wire 1 o/ \mprj_pads.loop1_io[29] $end
$var wire 1 p/ \mprj_pads.loop1_io[28] $end
$var wire 1 q/ \mprj_pads.loop1_io[27] $end
$var wire 1 r/ \mprj_pads.loop1_io[26] $end
$var wire 1 s/ \mprj_pads.loop1_io[25] $end
$var wire 1 t/ \mprj_pads.loop1_io[24] $end
$var wire 1 u/ \mprj_pads.loop1_io[23] $end
$var wire 1 v/ \mprj_pads.loop1_io[22] $end
$var wire 1 w/ \mprj_pads.loop1_io[21] $end
$var wire 1 x/ \mprj_pads.loop1_io[20] $end
$var wire 1 y/ \mprj_pads.loop1_io[1] $end
$var wire 1 z/ \mprj_pads.loop1_io[19] $end
$var wire 1 {/ \mprj_pads.loop1_io[18] $end
$var wire 1 |/ \mprj_pads.loop1_io[17] $end
$var wire 1 }/ \mprj_pads.loop1_io[16] $end
$var wire 1 ~/ \mprj_pads.loop1_io[15] $end
$var wire 1 !0 \mprj_pads.loop1_io[14] $end
$var wire 1 "0 \mprj_pads.loop1_io[13] $end
$var wire 1 #0 \mprj_pads.loop1_io[12] $end
$var wire 1 $0 \mprj_pads.loop1_io[11] $end
$var wire 1 %0 \mprj_pads.loop1_io[10] $end
$var wire 1 &0 \mprj_pads.loop1_io[0] $end
$var wire 1 '0 \mprj_pads.io_in[9] $end
$var wire 1 (0 \mprj_pads.io_in[8] $end
$var wire 1 )0 \mprj_pads.io_in[7] $end
$var wire 1 *0 \mprj_pads.io_in[6] $end
$var wire 1 +0 \mprj_pads.io_in[5] $end
$var wire 1 ,0 \mprj_pads.io_in[4] $end
$var wire 1 -0 \mprj_pads.io_in[3] $end
$var wire 1 .0 \mprj_pads.io_in[37] $end
$var wire 1 /0 \mprj_pads.io_in[36] $end
$var wire 1 00 \mprj_pads.io_in[35] $end
$var wire 1 10 \mprj_pads.io_in[34] $end
$var wire 1 20 \mprj_pads.io_in[33] $end
$var wire 1 30 \mprj_pads.io_in[32] $end
$var wire 1 40 \mprj_pads.io_in[31] $end
$var wire 1 50 \mprj_pads.io_in[30] $end
$var wire 1 60 \mprj_pads.io_in[2] $end
$var wire 1 70 \mprj_pads.io_in[29] $end
$var wire 1 80 \mprj_pads.io_in[28] $end
$var wire 1 90 \mprj_pads.io_in[27] $end
$var wire 1 :0 \mprj_pads.io_in[26] $end
$var wire 1 ;0 \mprj_pads.io_in[25] $end
$var wire 1 <0 \mprj_pads.io_in[24] $end
$var wire 1 =0 \mprj_pads.io_in[23] $end
$var wire 1 >0 \mprj_pads.io_in[22] $end
$var wire 1 ?0 \mprj_pads.io_in[21] $end
$var wire 1 @0 \mprj_pads.io_in[20] $end
$var wire 1 A0 \mprj_pads.io_in[1] $end
$var wire 1 B0 \mprj_pads.io_in[19] $end
$var wire 1 C0 \mprj_pads.io_in[18] $end
$var wire 1 D0 \mprj_pads.io_in[17] $end
$var wire 1 E0 \mprj_pads.io_in[16] $end
$var wire 1 F0 \mprj_pads.io_in[15] $end
$var wire 1 G0 \mprj_pads.io_in[14] $end
$var wire 1 H0 \mprj_pads.io_in[13] $end
$var wire 1 I0 \mprj_pads.io_in[12] $end
$var wire 1 J0 \mprj_pads.io_in[11] $end
$var wire 1 K0 \mprj_pads.io_in[10] $end
$var wire 1 L0 \mprj_pads.io_in[0] $end
$var wire 1 M0 \mprj_io_in[9] $end
$var wire 1 N0 \mprj_io_in[8] $end
$var wire 1 O0 \mprj_io_in[7] $end
$var wire 1 P0 \mprj_io_in[6] $end
$var wire 1 Q0 \mprj_io_in[5] $end
$var wire 1 R0 \mprj_io_in[4] $end
$var wire 1 S0 \mprj_io_in[3] $end
$var wire 1 T0 \mprj_io_in[37] $end
$var wire 1 U0 \mprj_io_in[36] $end
$var wire 1 V0 \mprj_io_in[35] $end
$var wire 1 W0 \mprj_io_in[34] $end
$var wire 1 X0 \mprj_io_in[33] $end
$var wire 1 Y0 \mprj_io_in[32] $end
$var wire 1 Z0 \mprj_io_in[31] $end
$var wire 1 [0 \mprj_io_in[30] $end
$var wire 1 \0 \mprj_io_in[2] $end
$var wire 1 ]0 \mprj_io_in[29] $end
$var wire 1 ^0 \mprj_io_in[28] $end
$var wire 1 _0 \mprj_io_in[27] $end
$var wire 1 `0 \mprj_io_in[26] $end
$var wire 1 a0 \mprj_io_in[25] $end
$var wire 1 b0 \mprj_io_in[24] $end
$var wire 1 c0 \mprj_io_in[23] $end
$var wire 1 d0 \mprj_io_in[22] $end
$var wire 1 e0 \mprj_io_in[21] $end
$var wire 1 f0 \mprj_io_in[20] $end
$var wire 1 g0 \mprj_io_in[1] $end
$var wire 1 h0 \mprj_io_in[19] $end
$var wire 1 i0 \mprj_io_in[18] $end
$var wire 1 j0 \mprj_io_in[17] $end
$var wire 1 k0 \mprj_io_in[16] $end
$var wire 1 l0 \mprj_io_in[15] $end
$var wire 1 m0 \mprj_io_in[14] $end
$var wire 1 n0 \mprj_io_in[13] $end
$var wire 1 o0 \mprj_io_in[12] $end
$var wire 1 p0 \mprj_io_in[11] $end
$var wire 1 q0 \mprj_io_in[10] $end
$var wire 1 r0 \mprj_io_in[0] $end
$var wire 1 s0 loop_gpio $end
$var wire 1 t0 loop_flash_io1 $end
$var wire 1 u0 loop_flash_io0 $end
$var wire 1 v0 loop_flash_csb $end
$var wire 1 w0 loop_flash_clk $end
$var wire 1 x0 loop_clock $end
$var wire 1 5 gpio_in_core $end
$var wire 1 6 flash_io1_di_core $end
$var wire 1 7 flash_io0_di_core $end
$var wire 1 8 clock_core $end
$scope module clock_pad $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 % ANALOG_EN $end
$var wire 1 % ANALOG_POL $end
$var wire 1 % ANALOG_SEL $end
$var wire 3 y0 DM [2:0] $end
$var wire 1 Z ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 # HLD_H_N $end
$var wire 1 % HLD_OVR $end
$var wire 1 % IB_MODE_SEL $end
$var wire 1 . INP_DIS $end
$var wire 1 ! OE_N $end
$var wire 1 % OUT $end
$var wire 1 _ PAD $end
$var wire 1 z0 PAD_A_ESD_0_H $end
$var wire 1 {0 PAD_A_ESD_1_H $end
$var wire 1 |0 PAD_A_NOESD_H $end
$var wire 1 % SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 % VTRIP_SEL $end
$var wire 1 x0 TIE_LO_ESD $end
$var wire 1 }0 TIE_HI_ESD $end
$var wire 1 ~0 IN_H $end
$var wire 1 8 IN $end
$var wire 1 x0 ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 !1 event_error_vswitch5 $end
$var event 1 "1 event_error_vswitch4 $end
$var event 1 #1 event_error_vswitch3 $end
$var event 1 $1 event_error_vswitch2 $end
$var event 1 %1 event_error_vswitch1 $end
$var event 1 &1 event_error_vddio_q2 $end
$var event 1 '1 event_error_vddio_q1 $end
$var event 1 (1 event_error_vdda_vddioq_vswitch2 $end
$var event 1 )1 event_error_vdda3 $end
$var event 1 *1 event_error_vdda2 $end
$var event 1 +1 event_error_vdda $end
$var event 1 ,1 event_error_supply_good $end
$var event 1 -1 event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 % ANALOG_EN $end
$var wire 1 % ANALOG_POL $end
$var wire 1 % ANALOG_SEL $end
$var wire 3 .1 DM [2:0] $end
$var wire 1 Z ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 # HLD_H_N $end
$var wire 1 % HLD_OVR $end
$var wire 1 % IB_MODE_SEL $end
$var wire 1 . INP_DIS $end
$var wire 1 ! OE_N $end
$var wire 1 % OUT $end
$var wire 1 _ PAD $end
$var wire 1 z0 PAD_A_ESD_0_H $end
$var wire 1 {0 PAD_A_ESD_1_H $end
$var wire 1 |0 PAD_A_NOESD_H $end
$var wire 1 % SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 % VTRIP_SEL $end
$var wire 3 /1 dm_buf [2:0] $end
$var wire 1 01 error_enable_vddio $end
$var wire 1 11 error_supply_good $end
$var wire 1 21 error_vdda $end
$var wire 1 31 error_vdda2 $end
$var wire 1 41 error_vdda3 $end
$var wire 1 51 error_vdda_vddioq_vswitch2 $end
$var wire 1 61 error_vddio_q1 $end
$var wire 1 71 error_vddio_q2 $end
$var wire 1 81 error_vswitch1 $end
$var wire 1 91 error_vswitch2 $end
$var wire 1 :1 error_vswitch3 $end
$var wire 1 ;1 error_vswitch4 $end
$var wire 1 <1 error_vswitch5 $end
$var wire 1 =1 functional_mode_amux $end
$var wire 1 >1 hld_h_n_buf $end
$var wire 1 ?1 hld_ovr_buf $end
$var wire 1 @1 ib_mode_sel_buf $end
$var wire 1 A1 inp_dis_buf $end
$var wire 1 B1 invalid_controls_amux $end
$var wire 1 C1 oe_n_buf $end
$var wire 1 D1 out_buf $end
$var wire 1 E1 pad_tristate $end
$var wire 1 F1 pwr_good_active_mode $end
$var wire 1 G1 pwr_good_active_mode_vdda $end
$var wire 1 H1 pwr_good_amux $end
$var wire 1 I1 pwr_good_analog_en_vdda $end
$var wire 1 J1 pwr_good_analog_en_vddio_q $end
$var wire 1 K1 pwr_good_analog_en_vswitch $end
$var wire 1 L1 pwr_good_hold_mode $end
$var wire 1 M1 pwr_good_hold_mode_vdda $end
$var wire 1 N1 pwr_good_hold_ovr_mode $end
$var wire 1 O1 pwr_good_inpbuff_hv $end
$var wire 1 P1 pwr_good_inpbuff_lv $end
$var wire 1 Q1 pwr_good_output_driver $end
$var wire 1 R1 slow_buf $end
$var wire 1 S1 vtrip_sel_buf $end
$var wire 1 T1 x_on_analog_en_vdda $end
$var wire 1 U1 x_on_analog_en_vddio_q $end
$var wire 1 V1 x_on_analog_en_vswitch $end
$var wire 1 W1 x_on_in_hv $end
$var wire 1 X1 x_on_in_lv $end
$var wire 1 Y1 x_on_pad $end
$var wire 1 Z1 zero_on_analog_en_vdda $end
$var wire 1 [1 zero_on_analog_en_vddio_q $end
$var wire 1 \1 zero_on_analog_en_vswitch $end
$var wire 1 ]1 pwr_good_amux_vccd $end
$var wire 1 ^1 enable_pad_vssio_q $end
$var wire 1 _1 enable_pad_vddio_q $end
$var wire 1 `1 enable_pad_amuxbus_b $end
$var wire 1 a1 enable_pad_amuxbus_a $end
$var wire 1 b1 disable_inp_buff_lv $end
$var wire 1 c1 disable_inp_buff $end
$var wire 3 d1 amux_select [2:0] $end
$var wire 1 x0 TIE_LO_ESD $end
$var wire 1 }0 TIE_HI_ESD $end
$var wire 1 ~0 IN_H $end
$var wire 1 8 IN $end
$var wire 1 x0 ENABLE_INP_H $end
$var reg 1 e1 analog_en_final $end
$var reg 1 f1 analog_en_vdda $end
$var reg 1 g1 analog_en_vddio_q $end
$var reg 1 h1 analog_en_vswitch $end
$var reg 1 i1 dis_err_msgs $end
$var reg 3 j1 dm_final [2:0] $end
$var reg 1 k1 hld_ovr_final $end
$var reg 1 l1 ib_mode_sel_final $end
$var reg 1 m1 inp_dis_final $end
$var reg 1 n1 notifier_dm $end
$var reg 1 o1 notifier_enable_h $end
$var reg 1 p1 notifier_hld_ovr $end
$var reg 1 q1 notifier_ib_mode_sel $end
$var reg 1 r1 notifier_inp_dis $end
$var reg 1 s1 notifier_oe_n $end
$var reg 1 t1 notifier_out $end
$var reg 1 u1 notifier_slow $end
$var reg 1 v1 notifier_vtrip_sel $end
$var reg 1 w1 oe_n_final $end
$var reg 1 x1 out_final $end
$var reg 1 y1 slow_final $end
$var reg 1 z1 vtrip_sel_final $end
$var integer 32 {1 msg_count_pad [31:0] $end
$var integer 32 |1 msg_count_pad1 [31:0] $end
$var integer 32 }1 msg_count_pad10 [31:0] $end
$var integer 32 ~1 msg_count_pad11 [31:0] $end
$var integer 32 !2 msg_count_pad12 [31:0] $end
$var integer 32 "2 msg_count_pad2 [31:0] $end
$var integer 32 #2 msg_count_pad3 [31:0] $end
$var integer 32 $2 msg_count_pad4 [31:0] $end
$var integer 32 %2 msg_count_pad5 [31:0] $end
$var integer 32 &2 msg_count_pad6 [31:0] $end
$var integer 32 '2 msg_count_pad7 [31:0] $end
$var integer 32 (2 msg_count_pad8 [31:0] $end
$var integer 32 )2 msg_count_pad9 [31:0] $end
$var integer 32 *2 slow_0_delay [31:0] $end
$var integer 32 +2 slow_1_delay [31:0] $end
$var integer 32 ,2 slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module flash_clk_pad $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 % ANALOG_EN $end
$var wire 1 % ANALOG_POL $end
$var wire 1 % ANALOG_SEL $end
$var wire 3 -2 DM [2:0] $end
$var wire 1 Z ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 # HLD_H_N $end
$var wire 1 % HLD_OVR $end
$var wire 1 % IB_MODE_SEL $end
$var wire 1 = INP_DIS $end
$var wire 1 > OE_N $end
$var wire 1 < OUT $end
$var wire 1 ' PAD $end
$var wire 1 .2 PAD_A_ESD_0_H $end
$var wire 1 /2 PAD_A_ESD_1_H $end
$var wire 1 02 PAD_A_NOESD_H $end
$var wire 1 % SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 % VTRIP_SEL $end
$var wire 1 w0 TIE_LO_ESD $end
$var wire 1 12 TIE_HI_ESD $end
$var wire 1 22 IN_H $end
$var wire 1 32 IN $end
$var wire 1 w0 ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 42 event_error_vswitch5 $end
$var event 1 52 event_error_vswitch4 $end
$var event 1 62 event_error_vswitch3 $end
$var event 1 72 event_error_vswitch2 $end
$var event 1 82 event_error_vswitch1 $end
$var event 1 92 event_error_vddio_q2 $end
$var event 1 :2 event_error_vddio_q1 $end
$var event 1 ;2 event_error_vdda_vddioq_vswitch2 $end
$var event 1 <2 event_error_vdda3 $end
$var event 1 =2 event_error_vdda2 $end
$var event 1 >2 event_error_vdda $end
$var event 1 ?2 event_error_supply_good $end
$var event 1 @2 event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 % ANALOG_EN $end
$var wire 1 % ANALOG_POL $end
$var wire 1 % ANALOG_SEL $end
$var wire 3 A2 DM [2:0] $end
$var wire 1 Z ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 # HLD_H_N $end
$var wire 1 % HLD_OVR $end
$var wire 1 % IB_MODE_SEL $end
$var wire 1 = INP_DIS $end
$var wire 1 > OE_N $end
$var wire 1 < OUT $end
$var wire 1 ' PAD $end
$var wire 1 .2 PAD_A_ESD_0_H $end
$var wire 1 /2 PAD_A_ESD_1_H $end
$var wire 1 02 PAD_A_NOESD_H $end
$var wire 1 % SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 % VTRIP_SEL $end
$var wire 3 B2 dm_buf [2:0] $end
$var wire 1 C2 error_enable_vddio $end
$var wire 1 D2 error_supply_good $end
$var wire 1 E2 error_vdda $end
$var wire 1 F2 error_vdda2 $end
$var wire 1 G2 error_vdda3 $end
$var wire 1 H2 error_vdda_vddioq_vswitch2 $end
$var wire 1 I2 error_vddio_q1 $end
$var wire 1 J2 error_vddio_q2 $end
$var wire 1 K2 error_vswitch1 $end
$var wire 1 L2 error_vswitch2 $end
$var wire 1 M2 error_vswitch3 $end
$var wire 1 N2 error_vswitch4 $end
$var wire 1 O2 error_vswitch5 $end
$var wire 1 P2 functional_mode_amux $end
$var wire 1 Q2 hld_h_n_buf $end
$var wire 1 R2 hld_ovr_buf $end
$var wire 1 S2 ib_mode_sel_buf $end
$var wire 1 T2 inp_dis_buf $end
$var wire 1 U2 invalid_controls_amux $end
$var wire 1 V2 oe_n_buf $end
$var wire 1 W2 out_buf $end
$var wire 1 X2 pad_tristate $end
$var wire 1 Y2 pwr_good_active_mode $end
$var wire 1 Z2 pwr_good_active_mode_vdda $end
$var wire 1 [2 pwr_good_amux $end
$var wire 1 \2 pwr_good_analog_en_vdda $end
$var wire 1 ]2 pwr_good_analog_en_vddio_q $end
$var wire 1 ^2 pwr_good_analog_en_vswitch $end
$var wire 1 _2 pwr_good_hold_mode $end
$var wire 1 `2 pwr_good_hold_mode_vdda $end
$var wire 1 a2 pwr_good_hold_ovr_mode $end
$var wire 1 b2 pwr_good_inpbuff_hv $end
$var wire 1 c2 pwr_good_inpbuff_lv $end
$var wire 1 d2 pwr_good_output_driver $end
$var wire 1 e2 slow_buf $end
$var wire 1 f2 vtrip_sel_buf $end
$var wire 1 g2 x_on_analog_en_vdda $end
$var wire 1 h2 x_on_analog_en_vddio_q $end
$var wire 1 i2 x_on_analog_en_vswitch $end
$var wire 1 j2 x_on_in_hv $end
$var wire 1 k2 x_on_in_lv $end
$var wire 1 l2 x_on_pad $end
$var wire 1 m2 zero_on_analog_en_vdda $end
$var wire 1 n2 zero_on_analog_en_vddio_q $end
$var wire 1 o2 zero_on_analog_en_vswitch $end
$var wire 1 p2 pwr_good_amux_vccd $end
$var wire 1 q2 enable_pad_vssio_q $end
$var wire 1 r2 enable_pad_vddio_q $end
$var wire 1 s2 enable_pad_amuxbus_b $end
$var wire 1 t2 enable_pad_amuxbus_a $end
$var wire 1 u2 disable_inp_buff_lv $end
$var wire 1 v2 disable_inp_buff $end
$var wire 3 w2 amux_select [2:0] $end
$var wire 1 w0 TIE_LO_ESD $end
$var wire 1 12 TIE_HI_ESD $end
$var wire 1 22 IN_H $end
$var wire 1 32 IN $end
$var wire 1 w0 ENABLE_INP_H $end
$var reg 1 x2 analog_en_final $end
$var reg 1 y2 analog_en_vdda $end
$var reg 1 z2 analog_en_vddio_q $end
$var reg 1 {2 analog_en_vswitch $end
$var reg 1 |2 dis_err_msgs $end
$var reg 3 }2 dm_final [2:0] $end
$var reg 1 ~2 hld_ovr_final $end
$var reg 1 !3 ib_mode_sel_final $end
$var reg 1 "3 inp_dis_final $end
$var reg 1 #3 notifier_dm $end
$var reg 1 $3 notifier_enable_h $end
$var reg 1 %3 notifier_hld_ovr $end
$var reg 1 &3 notifier_ib_mode_sel $end
$var reg 1 '3 notifier_inp_dis $end
$var reg 1 (3 notifier_oe_n $end
$var reg 1 )3 notifier_out $end
$var reg 1 *3 notifier_slow $end
$var reg 1 +3 notifier_vtrip_sel $end
$var reg 1 ,3 oe_n_final $end
$var reg 1 -3 out_final $end
$var reg 1 .3 slow_final $end
$var reg 1 /3 vtrip_sel_final $end
$var integer 32 03 msg_count_pad [31:0] $end
$var integer 32 13 msg_count_pad1 [31:0] $end
$var integer 32 23 msg_count_pad10 [31:0] $end
$var integer 32 33 msg_count_pad11 [31:0] $end
$var integer 32 43 msg_count_pad12 [31:0] $end
$var integer 32 53 msg_count_pad2 [31:0] $end
$var integer 32 63 msg_count_pad3 [31:0] $end
$var integer 32 73 msg_count_pad4 [31:0] $end
$var integer 32 83 msg_count_pad5 [31:0] $end
$var integer 32 93 msg_count_pad6 [31:0] $end
$var integer 32 :3 msg_count_pad7 [31:0] $end
$var integer 32 ;3 msg_count_pad8 [31:0] $end
$var integer 32 <3 msg_count_pad9 [31:0] $end
$var integer 32 =3 slow_0_delay [31:0] $end
$var integer 32 >3 slow_1_delay [31:0] $end
$var integer 32 ?3 slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module flash_csb_pad $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 % ANALOG_EN $end
$var wire 1 % ANALOG_POL $end
$var wire 1 % ANALOG_SEL $end
$var wire 3 @3 DM [2:0] $end
$var wire 1 Z ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 # HLD_H_N $end
$var wire 1 % HLD_OVR $end
$var wire 1 % IB_MODE_SEL $end
$var wire 1 @ INP_DIS $end
$var wire 1 A OE_N $end
$var wire 1 ? OUT $end
$var wire 1 ( PAD $end
$var wire 1 A3 PAD_A_ESD_0_H $end
$var wire 1 B3 PAD_A_ESD_1_H $end
$var wire 1 C3 PAD_A_NOESD_H $end
$var wire 1 % SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 % VTRIP_SEL $end
$var wire 1 v0 TIE_LO_ESD $end
$var wire 1 D3 TIE_HI_ESD $end
$var wire 1 E3 IN_H $end
$var wire 1 F3 IN $end
$var wire 1 v0 ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 G3 event_error_vswitch5 $end
$var event 1 H3 event_error_vswitch4 $end
$var event 1 I3 event_error_vswitch3 $end
$var event 1 J3 event_error_vswitch2 $end
$var event 1 K3 event_error_vswitch1 $end
$var event 1 L3 event_error_vddio_q2 $end
$var event 1 M3 event_error_vddio_q1 $end
$var event 1 N3 event_error_vdda_vddioq_vswitch2 $end
$var event 1 O3 event_error_vdda3 $end
$var event 1 P3 event_error_vdda2 $end
$var event 1 Q3 event_error_vdda $end
$var event 1 R3 event_error_supply_good $end
$var event 1 S3 event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 % ANALOG_EN $end
$var wire 1 % ANALOG_POL $end
$var wire 1 % ANALOG_SEL $end
$var wire 3 T3 DM [2:0] $end
$var wire 1 Z ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 # HLD_H_N $end
$var wire 1 % HLD_OVR $end
$var wire 1 % IB_MODE_SEL $end
$var wire 1 @ INP_DIS $end
$var wire 1 A OE_N $end
$var wire 1 ? OUT $end
$var wire 1 ( PAD $end
$var wire 1 A3 PAD_A_ESD_0_H $end
$var wire 1 B3 PAD_A_ESD_1_H $end
$var wire 1 C3 PAD_A_NOESD_H $end
$var wire 1 % SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 % VTRIP_SEL $end
$var wire 3 U3 dm_buf [2:0] $end
$var wire 1 V3 error_enable_vddio $end
$var wire 1 W3 error_supply_good $end
$var wire 1 X3 error_vdda $end
$var wire 1 Y3 error_vdda2 $end
$var wire 1 Z3 error_vdda3 $end
$var wire 1 [3 error_vdda_vddioq_vswitch2 $end
$var wire 1 \3 error_vddio_q1 $end
$var wire 1 ]3 error_vddio_q2 $end
$var wire 1 ^3 error_vswitch1 $end
$var wire 1 _3 error_vswitch2 $end
$var wire 1 `3 error_vswitch3 $end
$var wire 1 a3 error_vswitch4 $end
$var wire 1 b3 error_vswitch5 $end
$var wire 1 c3 functional_mode_amux $end
$var wire 1 d3 hld_h_n_buf $end
$var wire 1 e3 hld_ovr_buf $end
$var wire 1 f3 ib_mode_sel_buf $end
$var wire 1 g3 inp_dis_buf $end
$var wire 1 h3 invalid_controls_amux $end
$var wire 1 i3 oe_n_buf $end
$var wire 1 j3 out_buf $end
$var wire 1 k3 pad_tristate $end
$var wire 1 l3 pwr_good_active_mode $end
$var wire 1 m3 pwr_good_active_mode_vdda $end
$var wire 1 n3 pwr_good_amux $end
$var wire 1 o3 pwr_good_analog_en_vdda $end
$var wire 1 p3 pwr_good_analog_en_vddio_q $end
$var wire 1 q3 pwr_good_analog_en_vswitch $end
$var wire 1 r3 pwr_good_hold_mode $end
$var wire 1 s3 pwr_good_hold_mode_vdda $end
$var wire 1 t3 pwr_good_hold_ovr_mode $end
$var wire 1 u3 pwr_good_inpbuff_hv $end
$var wire 1 v3 pwr_good_inpbuff_lv $end
$var wire 1 w3 pwr_good_output_driver $end
$var wire 1 x3 slow_buf $end
$var wire 1 y3 vtrip_sel_buf $end
$var wire 1 z3 x_on_analog_en_vdda $end
$var wire 1 {3 x_on_analog_en_vddio_q $end
$var wire 1 |3 x_on_analog_en_vswitch $end
$var wire 1 }3 x_on_in_hv $end
$var wire 1 ~3 x_on_in_lv $end
$var wire 1 !4 x_on_pad $end
$var wire 1 "4 zero_on_analog_en_vdda $end
$var wire 1 #4 zero_on_analog_en_vddio_q $end
$var wire 1 $4 zero_on_analog_en_vswitch $end
$var wire 1 %4 pwr_good_amux_vccd $end
$var wire 1 &4 enable_pad_vssio_q $end
$var wire 1 '4 enable_pad_vddio_q $end
$var wire 1 (4 enable_pad_amuxbus_b $end
$var wire 1 )4 enable_pad_amuxbus_a $end
$var wire 1 *4 disable_inp_buff_lv $end
$var wire 1 +4 disable_inp_buff $end
$var wire 3 ,4 amux_select [2:0] $end
$var wire 1 v0 TIE_LO_ESD $end
$var wire 1 D3 TIE_HI_ESD $end
$var wire 1 E3 IN_H $end
$var wire 1 F3 IN $end
$var wire 1 v0 ENABLE_INP_H $end
$var reg 1 -4 analog_en_final $end
$var reg 1 .4 analog_en_vdda $end
$var reg 1 /4 analog_en_vddio_q $end
$var reg 1 04 analog_en_vswitch $end
$var reg 1 14 dis_err_msgs $end
$var reg 3 24 dm_final [2:0] $end
$var reg 1 34 hld_ovr_final $end
$var reg 1 44 ib_mode_sel_final $end
$var reg 1 54 inp_dis_final $end
$var reg 1 64 notifier_dm $end
$var reg 1 74 notifier_enable_h $end
$var reg 1 84 notifier_hld_ovr $end
$var reg 1 94 notifier_ib_mode_sel $end
$var reg 1 :4 notifier_inp_dis $end
$var reg 1 ;4 notifier_oe_n $end
$var reg 1 <4 notifier_out $end
$var reg 1 =4 notifier_slow $end
$var reg 1 >4 notifier_vtrip_sel $end
$var reg 1 ?4 oe_n_final $end
$var reg 1 @4 out_final $end
$var reg 1 A4 slow_final $end
$var reg 1 B4 vtrip_sel_final $end
$var integer 32 C4 msg_count_pad [31:0] $end
$var integer 32 D4 msg_count_pad1 [31:0] $end
$var integer 32 E4 msg_count_pad10 [31:0] $end
$var integer 32 F4 msg_count_pad11 [31:0] $end
$var integer 32 G4 msg_count_pad12 [31:0] $end
$var integer 32 H4 msg_count_pad2 [31:0] $end
$var integer 32 I4 msg_count_pad3 [31:0] $end
$var integer 32 J4 msg_count_pad4 [31:0] $end
$var integer 32 K4 msg_count_pad5 [31:0] $end
$var integer 32 L4 msg_count_pad6 [31:0] $end
$var integer 32 M4 msg_count_pad7 [31:0] $end
$var integer 32 N4 msg_count_pad8 [31:0] $end
$var integer 32 O4 msg_count_pad9 [31:0] $end
$var integer 32 P4 slow_0_delay [31:0] $end
$var integer 32 Q4 slow_1_delay [31:0] $end
$var integer 32 R4 slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module flash_io0_pad $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 % ANALOG_EN $end
$var wire 1 % ANALOG_POL $end
$var wire 1 % ANALOG_SEL $end
$var wire 3 S4 DM [2:0] $end
$var wire 1 Z ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 # HLD_H_N $end
$var wire 1 % HLD_OVR $end
$var wire 1 % IB_MODE_SEL $end
$var wire 1 D INP_DIS $end
$var wire 1 E OE_N $end
$var wire 1 C OUT $end
$var wire 1 ) PAD $end
$var wire 1 T4 PAD_A_ESD_0_H $end
$var wire 1 U4 PAD_A_ESD_1_H $end
$var wire 1 V4 PAD_A_NOESD_H $end
$var wire 1 % SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 % VTRIP_SEL $end
$var wire 1 u0 TIE_LO_ESD $end
$var wire 1 W4 TIE_HI_ESD $end
$var wire 1 X4 IN_H $end
$var wire 1 7 IN $end
$var wire 1 u0 ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 Y4 event_error_vswitch5 $end
$var event 1 Z4 event_error_vswitch4 $end
$var event 1 [4 event_error_vswitch3 $end
$var event 1 \4 event_error_vswitch2 $end
$var event 1 ]4 event_error_vswitch1 $end
$var event 1 ^4 event_error_vddio_q2 $end
$var event 1 _4 event_error_vddio_q1 $end
$var event 1 `4 event_error_vdda_vddioq_vswitch2 $end
$var event 1 a4 event_error_vdda3 $end
$var event 1 b4 event_error_vdda2 $end
$var event 1 c4 event_error_vdda $end
$var event 1 d4 event_error_supply_good $end
$var event 1 e4 event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 % ANALOG_EN $end
$var wire 1 % ANALOG_POL $end
$var wire 1 % ANALOG_SEL $end
$var wire 3 f4 DM [2:0] $end
$var wire 1 Z ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 # HLD_H_N $end
$var wire 1 % HLD_OVR $end
$var wire 1 % IB_MODE_SEL $end
$var wire 1 D INP_DIS $end
$var wire 1 E OE_N $end
$var wire 1 C OUT $end
$var wire 1 ) PAD $end
$var wire 1 T4 PAD_A_ESD_0_H $end
$var wire 1 U4 PAD_A_ESD_1_H $end
$var wire 1 V4 PAD_A_NOESD_H $end
$var wire 1 % SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 % VTRIP_SEL $end
$var wire 3 g4 dm_buf [2:0] $end
$var wire 1 h4 error_enable_vddio $end
$var wire 1 i4 error_supply_good $end
$var wire 1 j4 error_vdda $end
$var wire 1 k4 error_vdda2 $end
$var wire 1 l4 error_vdda3 $end
$var wire 1 m4 error_vdda_vddioq_vswitch2 $end
$var wire 1 n4 error_vddio_q1 $end
$var wire 1 o4 error_vddio_q2 $end
$var wire 1 p4 error_vswitch1 $end
$var wire 1 q4 error_vswitch2 $end
$var wire 1 r4 error_vswitch3 $end
$var wire 1 s4 error_vswitch4 $end
$var wire 1 t4 error_vswitch5 $end
$var wire 1 u4 functional_mode_amux $end
$var wire 1 v4 hld_h_n_buf $end
$var wire 1 w4 hld_ovr_buf $end
$var wire 1 x4 ib_mode_sel_buf $end
$var wire 1 y4 inp_dis_buf $end
$var wire 1 z4 invalid_controls_amux $end
$var wire 1 {4 oe_n_buf $end
$var wire 1 |4 out_buf $end
$var wire 1 }4 pad_tristate $end
$var wire 1 ~4 pwr_good_active_mode $end
$var wire 1 !5 pwr_good_active_mode_vdda $end
$var wire 1 "5 pwr_good_amux $end
$var wire 1 #5 pwr_good_analog_en_vdda $end
$var wire 1 $5 pwr_good_analog_en_vddio_q $end
$var wire 1 %5 pwr_good_analog_en_vswitch $end
$var wire 1 &5 pwr_good_hold_mode $end
$var wire 1 '5 pwr_good_hold_mode_vdda $end
$var wire 1 (5 pwr_good_hold_ovr_mode $end
$var wire 1 )5 pwr_good_inpbuff_hv $end
$var wire 1 *5 pwr_good_inpbuff_lv $end
$var wire 1 +5 pwr_good_output_driver $end
$var wire 1 ,5 slow_buf $end
$var wire 1 -5 vtrip_sel_buf $end
$var wire 1 .5 x_on_analog_en_vdda $end
$var wire 1 /5 x_on_analog_en_vddio_q $end
$var wire 1 05 x_on_analog_en_vswitch $end
$var wire 1 15 x_on_in_hv $end
$var wire 1 25 x_on_in_lv $end
$var wire 1 35 x_on_pad $end
$var wire 1 45 zero_on_analog_en_vdda $end
$var wire 1 55 zero_on_analog_en_vddio_q $end
$var wire 1 65 zero_on_analog_en_vswitch $end
$var wire 1 75 pwr_good_amux_vccd $end
$var wire 1 85 enable_pad_vssio_q $end
$var wire 1 95 enable_pad_vddio_q $end
$var wire 1 :5 enable_pad_amuxbus_b $end
$var wire 1 ;5 enable_pad_amuxbus_a $end
$var wire 1 <5 disable_inp_buff_lv $end
$var wire 1 =5 disable_inp_buff $end
$var wire 3 >5 amux_select [2:0] $end
$var wire 1 u0 TIE_LO_ESD $end
$var wire 1 W4 TIE_HI_ESD $end
$var wire 1 X4 IN_H $end
$var wire 1 7 IN $end
$var wire 1 u0 ENABLE_INP_H $end
$var reg 1 ?5 analog_en_final $end
$var reg 1 @5 analog_en_vdda $end
$var reg 1 A5 analog_en_vddio_q $end
$var reg 1 B5 analog_en_vswitch $end
$var reg 1 C5 dis_err_msgs $end
$var reg 3 D5 dm_final [2:0] $end
$var reg 1 E5 hld_ovr_final $end
$var reg 1 F5 ib_mode_sel_final $end
$var reg 1 G5 inp_dis_final $end
$var reg 1 H5 notifier_dm $end
$var reg 1 I5 notifier_enable_h $end
$var reg 1 J5 notifier_hld_ovr $end
$var reg 1 K5 notifier_ib_mode_sel $end
$var reg 1 L5 notifier_inp_dis $end
$var reg 1 M5 notifier_oe_n $end
$var reg 1 N5 notifier_out $end
$var reg 1 O5 notifier_slow $end
$var reg 1 P5 notifier_vtrip_sel $end
$var reg 1 Q5 oe_n_final $end
$var reg 1 R5 out_final $end
$var reg 1 S5 slow_final $end
$var reg 1 T5 vtrip_sel_final $end
$var integer 32 U5 msg_count_pad [31:0] $end
$var integer 32 V5 msg_count_pad1 [31:0] $end
$var integer 32 W5 msg_count_pad10 [31:0] $end
$var integer 32 X5 msg_count_pad11 [31:0] $end
$var integer 32 Y5 msg_count_pad12 [31:0] $end
$var integer 32 Z5 msg_count_pad2 [31:0] $end
$var integer 32 [5 msg_count_pad3 [31:0] $end
$var integer 32 \5 msg_count_pad4 [31:0] $end
$var integer 32 ]5 msg_count_pad5 [31:0] $end
$var integer 32 ^5 msg_count_pad6 [31:0] $end
$var integer 32 _5 msg_count_pad7 [31:0] $end
$var integer 32 `5 msg_count_pad8 [31:0] $end
$var integer 32 a5 msg_count_pad9 [31:0] $end
$var integer 32 b5 slow_0_delay [31:0] $end
$var integer 32 c5 slow_1_delay [31:0] $end
$var integer 32 d5 slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module flash_io1_pad $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 % ANALOG_EN $end
$var wire 1 % ANALOG_POL $end
$var wire 1 % ANALOG_SEL $end
$var wire 3 e5 DM [2:0] $end
$var wire 1 Z ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 # HLD_H_N $end
$var wire 1 % HLD_OVR $end
$var wire 1 % IB_MODE_SEL $end
$var wire 1 H INP_DIS $end
$var wire 1 I OE_N $end
$var wire 1 G OUT $end
$var wire 1 * PAD $end
$var wire 1 f5 PAD_A_ESD_0_H $end
$var wire 1 g5 PAD_A_ESD_1_H $end
$var wire 1 h5 PAD_A_NOESD_H $end
$var wire 1 % SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 % VTRIP_SEL $end
$var wire 1 t0 TIE_LO_ESD $end
$var wire 1 i5 TIE_HI_ESD $end
$var wire 1 j5 IN_H $end
$var wire 1 6 IN $end
$var wire 1 t0 ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 k5 event_error_vswitch5 $end
$var event 1 l5 event_error_vswitch4 $end
$var event 1 m5 event_error_vswitch3 $end
$var event 1 n5 event_error_vswitch2 $end
$var event 1 o5 event_error_vswitch1 $end
$var event 1 p5 event_error_vddio_q2 $end
$var event 1 q5 event_error_vddio_q1 $end
$var event 1 r5 event_error_vdda_vddioq_vswitch2 $end
$var event 1 s5 event_error_vdda3 $end
$var event 1 t5 event_error_vdda2 $end
$var event 1 u5 event_error_vdda $end
$var event 1 v5 event_error_supply_good $end
$var event 1 w5 event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 % ANALOG_EN $end
$var wire 1 % ANALOG_POL $end
$var wire 1 % ANALOG_SEL $end
$var wire 3 x5 DM [2:0] $end
$var wire 1 Z ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 # HLD_H_N $end
$var wire 1 % HLD_OVR $end
$var wire 1 % IB_MODE_SEL $end
$var wire 1 H INP_DIS $end
$var wire 1 I OE_N $end
$var wire 1 G OUT $end
$var wire 1 * PAD $end
$var wire 1 f5 PAD_A_ESD_0_H $end
$var wire 1 g5 PAD_A_ESD_1_H $end
$var wire 1 h5 PAD_A_NOESD_H $end
$var wire 1 % SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 % VTRIP_SEL $end
$var wire 3 y5 dm_buf [2:0] $end
$var wire 1 z5 error_enable_vddio $end
$var wire 1 {5 error_supply_good $end
$var wire 1 |5 error_vdda $end
$var wire 1 }5 error_vdda2 $end
$var wire 1 ~5 error_vdda3 $end
$var wire 1 !6 error_vdda_vddioq_vswitch2 $end
$var wire 1 "6 error_vddio_q1 $end
$var wire 1 #6 error_vddio_q2 $end
$var wire 1 $6 error_vswitch1 $end
$var wire 1 %6 error_vswitch2 $end
$var wire 1 &6 error_vswitch3 $end
$var wire 1 '6 error_vswitch4 $end
$var wire 1 (6 error_vswitch5 $end
$var wire 1 )6 functional_mode_amux $end
$var wire 1 *6 hld_h_n_buf $end
$var wire 1 +6 hld_ovr_buf $end
$var wire 1 ,6 ib_mode_sel_buf $end
$var wire 1 -6 inp_dis_buf $end
$var wire 1 .6 invalid_controls_amux $end
$var wire 1 /6 oe_n_buf $end
$var wire 1 06 out_buf $end
$var wire 1 16 pad_tristate $end
$var wire 1 26 pwr_good_active_mode $end
$var wire 1 36 pwr_good_active_mode_vdda $end
$var wire 1 46 pwr_good_amux $end
$var wire 1 56 pwr_good_analog_en_vdda $end
$var wire 1 66 pwr_good_analog_en_vddio_q $end
$var wire 1 76 pwr_good_analog_en_vswitch $end
$var wire 1 86 pwr_good_hold_mode $end
$var wire 1 96 pwr_good_hold_mode_vdda $end
$var wire 1 :6 pwr_good_hold_ovr_mode $end
$var wire 1 ;6 pwr_good_inpbuff_hv $end
$var wire 1 <6 pwr_good_inpbuff_lv $end
$var wire 1 =6 pwr_good_output_driver $end
$var wire 1 >6 slow_buf $end
$var wire 1 ?6 vtrip_sel_buf $end
$var wire 1 @6 x_on_analog_en_vdda $end
$var wire 1 A6 x_on_analog_en_vddio_q $end
$var wire 1 B6 x_on_analog_en_vswitch $end
$var wire 1 C6 x_on_in_hv $end
$var wire 1 D6 x_on_in_lv $end
$var wire 1 E6 x_on_pad $end
$var wire 1 F6 zero_on_analog_en_vdda $end
$var wire 1 G6 zero_on_analog_en_vddio_q $end
$var wire 1 H6 zero_on_analog_en_vswitch $end
$var wire 1 I6 pwr_good_amux_vccd $end
$var wire 1 J6 enable_pad_vssio_q $end
$var wire 1 K6 enable_pad_vddio_q $end
$var wire 1 L6 enable_pad_amuxbus_b $end
$var wire 1 M6 enable_pad_amuxbus_a $end
$var wire 1 N6 disable_inp_buff_lv $end
$var wire 1 O6 disable_inp_buff $end
$var wire 3 P6 amux_select [2:0] $end
$var wire 1 t0 TIE_LO_ESD $end
$var wire 1 i5 TIE_HI_ESD $end
$var wire 1 j5 IN_H $end
$var wire 1 6 IN $end
$var wire 1 t0 ENABLE_INP_H $end
$var reg 1 Q6 analog_en_final $end
$var reg 1 R6 analog_en_vdda $end
$var reg 1 S6 analog_en_vddio_q $end
$var reg 1 T6 analog_en_vswitch $end
$var reg 1 U6 dis_err_msgs $end
$var reg 3 V6 dm_final [2:0] $end
$var reg 1 W6 hld_ovr_final $end
$var reg 1 X6 ib_mode_sel_final $end
$var reg 1 Y6 inp_dis_final $end
$var reg 1 Z6 notifier_dm $end
$var reg 1 [6 notifier_enable_h $end
$var reg 1 \6 notifier_hld_ovr $end
$var reg 1 ]6 notifier_ib_mode_sel $end
$var reg 1 ^6 notifier_inp_dis $end
$var reg 1 _6 notifier_oe_n $end
$var reg 1 `6 notifier_out $end
$var reg 1 a6 notifier_slow $end
$var reg 1 b6 notifier_vtrip_sel $end
$var reg 1 c6 oe_n_final $end
$var reg 1 d6 out_final $end
$var reg 1 e6 slow_final $end
$var reg 1 f6 vtrip_sel_final $end
$var integer 32 g6 msg_count_pad [31:0] $end
$var integer 32 h6 msg_count_pad1 [31:0] $end
$var integer 32 i6 msg_count_pad10 [31:0] $end
$var integer 32 j6 msg_count_pad11 [31:0] $end
$var integer 32 k6 msg_count_pad12 [31:0] $end
$var integer 32 l6 msg_count_pad2 [31:0] $end
$var integer 32 m6 msg_count_pad3 [31:0] $end
$var integer 32 n6 msg_count_pad4 [31:0] $end
$var integer 32 o6 msg_count_pad5 [31:0] $end
$var integer 32 p6 msg_count_pad6 [31:0] $end
$var integer 32 q6 msg_count_pad7 [31:0] $end
$var integer 32 r6 msg_count_pad8 [31:0] $end
$var integer 32 s6 msg_count_pad9 [31:0] $end
$var integer 32 t6 slow_0_delay [31:0] $end
$var integer 32 u6 slow_1_delay [31:0] $end
$var integer 32 v6 slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module gpio_pad $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 % ANALOG_EN $end
$var wire 1 % ANALOG_POL $end
$var wire 1 % ANALOG_SEL $end
$var wire 3 w6 DM [2:0] $end
$var wire 1 Z ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 # HLD_H_N $end
$var wire 1 % HLD_OVR $end
$var wire 1 % IB_MODE_SEL $end
$var wire 1 K INP_DIS $end
$var wire 1 M OE_N $end
$var wire 1 L OUT $end
$var wire 1 + PAD $end
$var wire 1 x6 PAD_A_ESD_0_H $end
$var wire 1 y6 PAD_A_ESD_1_H $end
$var wire 1 z6 PAD_A_NOESD_H $end
$var wire 1 % SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 % VTRIP_SEL $end
$var wire 1 s0 TIE_LO_ESD $end
$var wire 1 {6 TIE_HI_ESD $end
$var wire 1 |6 IN_H $end
$var wire 1 5 IN $end
$var wire 1 s0 ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 }6 event_error_vswitch5 $end
$var event 1 ~6 event_error_vswitch4 $end
$var event 1 !7 event_error_vswitch3 $end
$var event 1 "7 event_error_vswitch2 $end
$var event 1 #7 event_error_vswitch1 $end
$var event 1 $7 event_error_vddio_q2 $end
$var event 1 %7 event_error_vddio_q1 $end
$var event 1 &7 event_error_vdda_vddioq_vswitch2 $end
$var event 1 '7 event_error_vdda3 $end
$var event 1 (7 event_error_vdda2 $end
$var event 1 )7 event_error_vdda $end
$var event 1 *7 event_error_supply_good $end
$var event 1 +7 event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 % ANALOG_EN $end
$var wire 1 % ANALOG_POL $end
$var wire 1 % ANALOG_SEL $end
$var wire 3 ,7 DM [2:0] $end
$var wire 1 Z ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 # HLD_H_N $end
$var wire 1 % HLD_OVR $end
$var wire 1 % IB_MODE_SEL $end
$var wire 1 K INP_DIS $end
$var wire 1 M OE_N $end
$var wire 1 L OUT $end
$var wire 1 + PAD $end
$var wire 1 x6 PAD_A_ESD_0_H $end
$var wire 1 y6 PAD_A_ESD_1_H $end
$var wire 1 z6 PAD_A_NOESD_H $end
$var wire 1 % SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 % VTRIP_SEL $end
$var wire 3 -7 dm_buf [2:0] $end
$var wire 1 .7 error_enable_vddio $end
$var wire 1 /7 error_supply_good $end
$var wire 1 07 error_vdda $end
$var wire 1 17 error_vdda2 $end
$var wire 1 27 error_vdda3 $end
$var wire 1 37 error_vdda_vddioq_vswitch2 $end
$var wire 1 47 error_vddio_q1 $end
$var wire 1 57 error_vddio_q2 $end
$var wire 1 67 error_vswitch1 $end
$var wire 1 77 error_vswitch2 $end
$var wire 1 87 error_vswitch3 $end
$var wire 1 97 error_vswitch4 $end
$var wire 1 :7 error_vswitch5 $end
$var wire 1 ;7 functional_mode_amux $end
$var wire 1 <7 hld_h_n_buf $end
$var wire 1 =7 hld_ovr_buf $end
$var wire 1 >7 ib_mode_sel_buf $end
$var wire 1 ?7 inp_dis_buf $end
$var wire 1 @7 invalid_controls_amux $end
$var wire 1 A7 oe_n_buf $end
$var wire 1 B7 out_buf $end
$var wire 1 C7 pad_tristate $end
$var wire 1 D7 pwr_good_active_mode $end
$var wire 1 E7 pwr_good_active_mode_vdda $end
$var wire 1 F7 pwr_good_amux $end
$var wire 1 G7 pwr_good_analog_en_vdda $end
$var wire 1 H7 pwr_good_analog_en_vddio_q $end
$var wire 1 I7 pwr_good_analog_en_vswitch $end
$var wire 1 J7 pwr_good_hold_mode $end
$var wire 1 K7 pwr_good_hold_mode_vdda $end
$var wire 1 L7 pwr_good_hold_ovr_mode $end
$var wire 1 M7 pwr_good_inpbuff_hv $end
$var wire 1 N7 pwr_good_inpbuff_lv $end
$var wire 1 O7 pwr_good_output_driver $end
$var wire 1 P7 slow_buf $end
$var wire 1 Q7 vtrip_sel_buf $end
$var wire 1 R7 x_on_analog_en_vdda $end
$var wire 1 S7 x_on_analog_en_vddio_q $end
$var wire 1 T7 x_on_analog_en_vswitch $end
$var wire 1 U7 x_on_in_hv $end
$var wire 1 V7 x_on_in_lv $end
$var wire 1 W7 x_on_pad $end
$var wire 1 X7 zero_on_analog_en_vdda $end
$var wire 1 Y7 zero_on_analog_en_vddio_q $end
$var wire 1 Z7 zero_on_analog_en_vswitch $end
$var wire 1 [7 pwr_good_amux_vccd $end
$var wire 1 \7 enable_pad_vssio_q $end
$var wire 1 ]7 enable_pad_vddio_q $end
$var wire 1 ^7 enable_pad_amuxbus_b $end
$var wire 1 _7 enable_pad_amuxbus_a $end
$var wire 1 `7 disable_inp_buff_lv $end
$var wire 1 a7 disable_inp_buff $end
$var wire 3 b7 amux_select [2:0] $end
$var wire 1 s0 TIE_LO_ESD $end
$var wire 1 {6 TIE_HI_ESD $end
$var wire 1 |6 IN_H $end
$var wire 1 5 IN $end
$var wire 1 s0 ENABLE_INP_H $end
$var reg 1 c7 analog_en_final $end
$var reg 1 d7 analog_en_vdda $end
$var reg 1 e7 analog_en_vddio_q $end
$var reg 1 f7 analog_en_vswitch $end
$var reg 1 g7 dis_err_msgs $end
$var reg 3 h7 dm_final [2:0] $end
$var reg 1 i7 hld_ovr_final $end
$var reg 1 j7 ib_mode_sel_final $end
$var reg 1 k7 inp_dis_final $end
$var reg 1 l7 notifier_dm $end
$var reg 1 m7 notifier_enable_h $end
$var reg 1 n7 notifier_hld_ovr $end
$var reg 1 o7 notifier_ib_mode_sel $end
$var reg 1 p7 notifier_inp_dis $end
$var reg 1 q7 notifier_oe_n $end
$var reg 1 r7 notifier_out $end
$var reg 1 s7 notifier_slow $end
$var reg 1 t7 notifier_vtrip_sel $end
$var reg 1 u7 oe_n_final $end
$var reg 1 v7 out_final $end
$var reg 1 w7 slow_final $end
$var reg 1 x7 vtrip_sel_final $end
$var integer 32 y7 msg_count_pad [31:0] $end
$var integer 32 z7 msg_count_pad1 [31:0] $end
$var integer 32 {7 msg_count_pad10 [31:0] $end
$var integer 32 |7 msg_count_pad11 [31:0] $end
$var integer 32 }7 msg_count_pad12 [31:0] $end
$var integer 32 ~7 msg_count_pad2 [31:0] $end
$var integer 32 !8 msg_count_pad3 [31:0] $end
$var integer 32 "8 msg_count_pad4 [31:0] $end
$var integer 32 #8 msg_count_pad5 [31:0] $end
$var integer 32 $8 msg_count_pad6 [31:0] $end
$var integer 32 %8 msg_count_pad7 [31:0] $end
$var integer 32 &8 msg_count_pad8 [31:0] $end
$var integer 32 '8 msg_count_pad9 [31:0] $end
$var integer 32 (8 slow_0_delay [31:0] $end
$var integer 32 )8 slow_1_delay [31:0] $end
$var integer 32 *8 slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mgmt_corner[0] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$upscope $end
$scope module mgmt_corner[1] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$upscope $end
$scope module mgmt_vccd_lvclamp_pad $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 ! VCCD $end
$var wire 1 +8 VCCD_PAD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$scope module sky130_fd_io__top_power_lvc_base $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 % BDY2_B2B $end
$var wire 1 ! DRN_LVC1 $end
$var wire 1 ! DRN_LVC2 $end
$var wire 1 ,8 OGC_LVC $end
$var wire 1 ! P_CORE $end
$var wire 1 +8 P_PAD $end
$var wire 1 % SRC_BDY_LVC1 $end
$var wire 1 % SRC_BDY_LVC2 $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$upscope $end
$upscope $end
$scope module mgmt_vdda_hvclamp_pad $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 -8 VDDA_PAD $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$scope module sky130_fd_io__top_power_hvc_base $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 # DRN_HVC $end
$var wire 1 .8 OGC_HVC $end
$var wire 1 # P_CORE $end
$var wire 1 -8 P_PAD $end
$var wire 1 % SRC_BDY_HVC $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$upscope $end
$upscope $end
$scope module mgmt_vddio_hvclamp_pad[0] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 /8 VDDIO_PAD $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$scope module sky130_fd_io__top_power_hvc_base $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 # DRN_HVC $end
$var wire 1 08 OGC_HVC $end
$var wire 1 # P_CORE $end
$var wire 1 /8 P_PAD $end
$var wire 1 % SRC_BDY_HVC $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$upscope $end
$upscope $end
$scope module mgmt_vddio_hvclamp_pad[1] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 18 VDDIO_PAD $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$scope module sky130_fd_io__top_power_hvc_base $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 # DRN_HVC $end
$var wire 1 28 OGC_HVC $end
$var wire 1 # P_CORE $end
$var wire 1 18 P_PAD $end
$var wire 1 % SRC_BDY_HVC $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$upscope $end
$upscope $end
$scope module mgmt_vssa_hvclamp_pad $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 38 VSSA_PAD $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$scope module sky130_fd_io__top_ground_hvc_base $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 # DRN_HVC $end
$var wire 1 % G_CORE $end
$var wire 1 38 G_PAD $end
$var wire 1 48 OGC_HVC $end
$var wire 1 % SRC_BDY_HVC $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$upscope $end
$upscope $end
$scope module mgmt_vssd_lvclmap_pad $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 58 VSSD_PAD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$scope module sky130_fd_io__top_ground_lvc_base $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 % BDY2_B2B $end
$var wire 1 ! DRN_LVC1 $end
$var wire 1 ! DRN_LVC2 $end
$var wire 1 % G_CORE $end
$var wire 1 58 G_PAD $end
$var wire 1 68 OGC_LVC $end
$var wire 1 % SRC_BDY_LVC1 $end
$var wire 1 % SRC_BDY_LVC2 $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$upscope $end
$upscope $end
$scope module mgmt_vssio_hvclamp_pad[0] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 78 VSSIO_PAD $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$scope module sky130_fd_io__top_ground_hvc_base $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 # DRN_HVC $end
$var wire 1 % G_CORE $end
$var wire 1 78 G_PAD $end
$var wire 1 88 OGC_HVC $end
$var wire 1 % SRC_BDY_HVC $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$upscope $end
$upscope $end
$scope module mgmt_vssio_hvclamp_pad[1] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 98 VSSIO_PAD $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$scope module sky130_fd_io__top_ground_hvc_base $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 # DRN_HVC $end
$var wire 1 % G_CORE $end
$var wire 1 98 G_PAD $end
$var wire 1 :8 OGC_HVC $end
$var wire 1 % SRC_BDY_HVC $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$upscope $end
$upscope $end
$scope module mprj_pads.area1_io_pad[0] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 P" ANALOG_EN $end
$var wire 1 v" ANALOG_POL $end
$var wire 1 ># ANALOG_SEL $end
$var wire 3 ;8 DM [2:0] $end
$var wire 1 x$ ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 @% HLD_H_N $end
$var wire 1 f% HLD_OVR $end
$var wire 1 .& IB_MODE_SEL $end
$var wire 1 T& INP_DIS $end
$var wire 1 z& OE_N $end
$var wire 1 B' OUT $end
$var wire 1 *" PAD $end
$var wire 1 1. PAD_A_ESD_0_H $end
$var wire 1 <8 PAD_A_ESD_1_H $end
$var wire 1 =8 PAD_A_NOESD_H $end
$var wire 1 h' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 0( VTRIP_SEL $end
$var wire 1 &0 TIE_LO_ESD $end
$var wire 1 >8 TIE_HI_ESD $end
$var wire 1 ?8 IN_H $end
$var wire 1 L0 IN $end
$var wire 1 &0 ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 @8 event_error_vswitch5 $end
$var event 1 A8 event_error_vswitch4 $end
$var event 1 B8 event_error_vswitch3 $end
$var event 1 C8 event_error_vswitch2 $end
$var event 1 D8 event_error_vswitch1 $end
$var event 1 E8 event_error_vddio_q2 $end
$var event 1 F8 event_error_vddio_q1 $end
$var event 1 G8 event_error_vdda_vddioq_vswitch2 $end
$var event 1 H8 event_error_vdda3 $end
$var event 1 I8 event_error_vdda2 $end
$var event 1 J8 event_error_vdda $end
$var event 1 K8 event_error_supply_good $end
$var event 1 L8 event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 P" ANALOG_EN $end
$var wire 1 v" ANALOG_POL $end
$var wire 1 ># ANALOG_SEL $end
$var wire 3 M8 DM [2:0] $end
$var wire 1 x$ ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 @% HLD_H_N $end
$var wire 1 f% HLD_OVR $end
$var wire 1 .& IB_MODE_SEL $end
$var wire 1 T& INP_DIS $end
$var wire 1 z& OE_N $end
$var wire 1 B' OUT $end
$var wire 1 *" PAD $end
$var wire 1 1. PAD_A_ESD_0_H $end
$var wire 1 <8 PAD_A_ESD_1_H $end
$var wire 1 =8 PAD_A_NOESD_H $end
$var wire 1 h' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 0( VTRIP_SEL $end
$var wire 3 N8 dm_buf [2:0] $end
$var wire 1 O8 error_enable_vddio $end
$var wire 1 P8 error_supply_good $end
$var wire 1 Q8 error_vdda $end
$var wire 1 R8 error_vdda2 $end
$var wire 1 S8 error_vdda3 $end
$var wire 1 T8 error_vdda_vddioq_vswitch2 $end
$var wire 1 U8 error_vddio_q1 $end
$var wire 1 V8 error_vddio_q2 $end
$var wire 1 W8 error_vswitch1 $end
$var wire 1 X8 error_vswitch2 $end
$var wire 1 Y8 error_vswitch3 $end
$var wire 1 Z8 error_vswitch4 $end
$var wire 1 [8 error_vswitch5 $end
$var wire 1 \8 functional_mode_amux $end
$var wire 1 ]8 hld_h_n_buf $end
$var wire 1 ^8 hld_ovr_buf $end
$var wire 1 _8 ib_mode_sel_buf $end
$var wire 1 `8 inp_dis_buf $end
$var wire 1 a8 invalid_controls_amux $end
$var wire 1 b8 oe_n_buf $end
$var wire 1 c8 out_buf $end
$var wire 1 d8 pad_tristate $end
$var wire 1 e8 pwr_good_active_mode $end
$var wire 1 f8 pwr_good_active_mode_vdda $end
$var wire 1 g8 pwr_good_amux $end
$var wire 1 h8 pwr_good_analog_en_vdda $end
$var wire 1 i8 pwr_good_analog_en_vddio_q $end
$var wire 1 j8 pwr_good_analog_en_vswitch $end
$var wire 1 k8 pwr_good_hold_mode $end
$var wire 1 l8 pwr_good_hold_mode_vdda $end
$var wire 1 m8 pwr_good_hold_ovr_mode $end
$var wire 1 n8 pwr_good_inpbuff_hv $end
$var wire 1 o8 pwr_good_inpbuff_lv $end
$var wire 1 p8 pwr_good_output_driver $end
$var wire 1 q8 slow_buf $end
$var wire 1 r8 vtrip_sel_buf $end
$var wire 1 s8 x_on_analog_en_vdda $end
$var wire 1 t8 x_on_analog_en_vddio_q $end
$var wire 1 u8 x_on_analog_en_vswitch $end
$var wire 1 v8 x_on_in_hv $end
$var wire 1 w8 x_on_in_lv $end
$var wire 1 x8 x_on_pad $end
$var wire 1 y8 zero_on_analog_en_vdda $end
$var wire 1 z8 zero_on_analog_en_vddio_q $end
$var wire 1 {8 zero_on_analog_en_vswitch $end
$var wire 1 |8 pwr_good_amux_vccd $end
$var wire 1 }8 enable_pad_vssio_q $end
$var wire 1 ~8 enable_pad_vddio_q $end
$var wire 1 !9 enable_pad_amuxbus_b $end
$var wire 1 "9 enable_pad_amuxbus_a $end
$var wire 1 #9 disable_inp_buff_lv $end
$var wire 1 $9 disable_inp_buff $end
$var wire 3 %9 amux_select [2:0] $end
$var wire 1 &0 TIE_LO_ESD $end
$var wire 1 >8 TIE_HI_ESD $end
$var wire 1 ?8 IN_H $end
$var wire 1 L0 IN $end
$var wire 1 &0 ENABLE_INP_H $end
$var reg 1 &9 analog_en_final $end
$var reg 1 '9 analog_en_vdda $end
$var reg 1 (9 analog_en_vddio_q $end
$var reg 1 )9 analog_en_vswitch $end
$var reg 1 *9 dis_err_msgs $end
$var reg 3 +9 dm_final [2:0] $end
$var reg 1 ,9 hld_ovr_final $end
$var reg 1 -9 ib_mode_sel_final $end
$var reg 1 .9 inp_dis_final $end
$var reg 1 /9 notifier_dm $end
$var reg 1 09 notifier_enable_h $end
$var reg 1 19 notifier_hld_ovr $end
$var reg 1 29 notifier_ib_mode_sel $end
$var reg 1 39 notifier_inp_dis $end
$var reg 1 49 notifier_oe_n $end
$var reg 1 59 notifier_out $end
$var reg 1 69 notifier_slow $end
$var reg 1 79 notifier_vtrip_sel $end
$var reg 1 89 oe_n_final $end
$var reg 1 99 out_final $end
$var reg 1 :9 slow_final $end
$var reg 1 ;9 vtrip_sel_final $end
$var integer 32 <9 msg_count_pad [31:0] $end
$var integer 32 =9 msg_count_pad1 [31:0] $end
$var integer 32 >9 msg_count_pad10 [31:0] $end
$var integer 32 ?9 msg_count_pad11 [31:0] $end
$var integer 32 @9 msg_count_pad12 [31:0] $end
$var integer 32 A9 msg_count_pad2 [31:0] $end
$var integer 32 B9 msg_count_pad3 [31:0] $end
$var integer 32 C9 msg_count_pad4 [31:0] $end
$var integer 32 D9 msg_count_pad5 [31:0] $end
$var integer 32 E9 msg_count_pad6 [31:0] $end
$var integer 32 F9 msg_count_pad7 [31:0] $end
$var integer 32 G9 msg_count_pad8 [31:0] $end
$var integer 32 H9 msg_count_pad9 [31:0] $end
$var integer 32 I9 slow_0_delay [31:0] $end
$var integer 32 J9 slow_1_delay [31:0] $end
$var integer 32 K9 slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area1_io_pad[10] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 Q" ANALOG_EN $end
$var wire 1 w" ANALOG_POL $end
$var wire 1 ?# ANALOG_SEL $end
$var wire 3 L9 DM [2:0] $end
$var wire 1 y$ ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 A% HLD_H_N $end
$var wire 1 g% HLD_OVR $end
$var wire 1 /& IB_MODE_SEL $end
$var wire 1 U& INP_DIS $end
$var wire 1 {& OE_N $end
$var wire 1 C' OUT $end
$var wire 1 +" PAD $end
$var wire 1 #" PAD_A_ESD_0_H $end
$var wire 1 M9 PAD_A_ESD_1_H $end
$var wire 1 N9 PAD_A_NOESD_H $end
$var wire 1 i' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 1( VTRIP_SEL $end
$var wire 1 %0 TIE_LO_ESD $end
$var wire 1 O9 TIE_HI_ESD $end
$var wire 1 P9 IN_H $end
$var wire 1 K0 IN $end
$var wire 1 %0 ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 Q9 event_error_vswitch5 $end
$var event 1 R9 event_error_vswitch4 $end
$var event 1 S9 event_error_vswitch3 $end
$var event 1 T9 event_error_vswitch2 $end
$var event 1 U9 event_error_vswitch1 $end
$var event 1 V9 event_error_vddio_q2 $end
$var event 1 W9 event_error_vddio_q1 $end
$var event 1 X9 event_error_vdda_vddioq_vswitch2 $end
$var event 1 Y9 event_error_vdda3 $end
$var event 1 Z9 event_error_vdda2 $end
$var event 1 [9 event_error_vdda $end
$var event 1 \9 event_error_supply_good $end
$var event 1 ]9 event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 Q" ANALOG_EN $end
$var wire 1 w" ANALOG_POL $end
$var wire 1 ?# ANALOG_SEL $end
$var wire 3 ^9 DM [2:0] $end
$var wire 1 y$ ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 A% HLD_H_N $end
$var wire 1 g% HLD_OVR $end
$var wire 1 /& IB_MODE_SEL $end
$var wire 1 U& INP_DIS $end
$var wire 1 {& OE_N $end
$var wire 1 C' OUT $end
$var wire 1 +" PAD $end
$var wire 1 #" PAD_A_ESD_0_H $end
$var wire 1 M9 PAD_A_ESD_1_H $end
$var wire 1 N9 PAD_A_NOESD_H $end
$var wire 1 i' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 1( VTRIP_SEL $end
$var wire 3 _9 dm_buf [2:0] $end
$var wire 1 `9 error_enable_vddio $end
$var wire 1 a9 error_supply_good $end
$var wire 1 b9 error_vdda $end
$var wire 1 c9 error_vdda2 $end
$var wire 1 d9 error_vdda3 $end
$var wire 1 e9 error_vdda_vddioq_vswitch2 $end
$var wire 1 f9 error_vddio_q1 $end
$var wire 1 g9 error_vddio_q2 $end
$var wire 1 h9 error_vswitch1 $end
$var wire 1 i9 error_vswitch2 $end
$var wire 1 j9 error_vswitch3 $end
$var wire 1 k9 error_vswitch4 $end
$var wire 1 l9 error_vswitch5 $end
$var wire 1 m9 functional_mode_amux $end
$var wire 1 n9 hld_h_n_buf $end
$var wire 1 o9 hld_ovr_buf $end
$var wire 1 p9 ib_mode_sel_buf $end
$var wire 1 q9 inp_dis_buf $end
$var wire 1 r9 invalid_controls_amux $end
$var wire 1 s9 oe_n_buf $end
$var wire 1 t9 out_buf $end
$var wire 1 u9 pad_tristate $end
$var wire 1 v9 pwr_good_active_mode $end
$var wire 1 w9 pwr_good_active_mode_vdda $end
$var wire 1 x9 pwr_good_amux $end
$var wire 1 y9 pwr_good_analog_en_vdda $end
$var wire 1 z9 pwr_good_analog_en_vddio_q $end
$var wire 1 {9 pwr_good_analog_en_vswitch $end
$var wire 1 |9 pwr_good_hold_mode $end
$var wire 1 }9 pwr_good_hold_mode_vdda $end
$var wire 1 ~9 pwr_good_hold_ovr_mode $end
$var wire 1 !: pwr_good_inpbuff_hv $end
$var wire 1 ": pwr_good_inpbuff_lv $end
$var wire 1 #: pwr_good_output_driver $end
$var wire 1 $: slow_buf $end
$var wire 1 %: vtrip_sel_buf $end
$var wire 1 &: x_on_analog_en_vdda $end
$var wire 1 ': x_on_analog_en_vddio_q $end
$var wire 1 (: x_on_analog_en_vswitch $end
$var wire 1 ): x_on_in_hv $end
$var wire 1 *: x_on_in_lv $end
$var wire 1 +: x_on_pad $end
$var wire 1 ,: zero_on_analog_en_vdda $end
$var wire 1 -: zero_on_analog_en_vddio_q $end
$var wire 1 .: zero_on_analog_en_vswitch $end
$var wire 1 /: pwr_good_amux_vccd $end
$var wire 1 0: enable_pad_vssio_q $end
$var wire 1 1: enable_pad_vddio_q $end
$var wire 1 2: enable_pad_amuxbus_b $end
$var wire 1 3: enable_pad_amuxbus_a $end
$var wire 1 4: disable_inp_buff_lv $end
$var wire 1 5: disable_inp_buff $end
$var wire 3 6: amux_select [2:0] $end
$var wire 1 %0 TIE_LO_ESD $end
$var wire 1 O9 TIE_HI_ESD $end
$var wire 1 P9 IN_H $end
$var wire 1 K0 IN $end
$var wire 1 %0 ENABLE_INP_H $end
$var reg 1 7: analog_en_final $end
$var reg 1 8: analog_en_vdda $end
$var reg 1 9: analog_en_vddio_q $end
$var reg 1 :: analog_en_vswitch $end
$var reg 1 ;: dis_err_msgs $end
$var reg 3 <: dm_final [2:0] $end
$var reg 1 =: hld_ovr_final $end
$var reg 1 >: ib_mode_sel_final $end
$var reg 1 ?: inp_dis_final $end
$var reg 1 @: notifier_dm $end
$var reg 1 A: notifier_enable_h $end
$var reg 1 B: notifier_hld_ovr $end
$var reg 1 C: notifier_ib_mode_sel $end
$var reg 1 D: notifier_inp_dis $end
$var reg 1 E: notifier_oe_n $end
$var reg 1 F: notifier_out $end
$var reg 1 G: notifier_slow $end
$var reg 1 H: notifier_vtrip_sel $end
$var reg 1 I: oe_n_final $end
$var reg 1 J: out_final $end
$var reg 1 K: slow_final $end
$var reg 1 L: vtrip_sel_final $end
$var integer 32 M: msg_count_pad [31:0] $end
$var integer 32 N: msg_count_pad1 [31:0] $end
$var integer 32 O: msg_count_pad10 [31:0] $end
$var integer 32 P: msg_count_pad11 [31:0] $end
$var integer 32 Q: msg_count_pad12 [31:0] $end
$var integer 32 R: msg_count_pad2 [31:0] $end
$var integer 32 S: msg_count_pad3 [31:0] $end
$var integer 32 T: msg_count_pad4 [31:0] $end
$var integer 32 U: msg_count_pad5 [31:0] $end
$var integer 32 V: msg_count_pad6 [31:0] $end
$var integer 32 W: msg_count_pad7 [31:0] $end
$var integer 32 X: msg_count_pad8 [31:0] $end
$var integer 32 Y: msg_count_pad9 [31:0] $end
$var integer 32 Z: slow_0_delay [31:0] $end
$var integer 32 [: slow_1_delay [31:0] $end
$var integer 32 \: slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area1_io_pad[11] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 R" ANALOG_EN $end
$var wire 1 x" ANALOG_POL $end
$var wire 1 @# ANALOG_SEL $end
$var wire 3 ]: DM [2:0] $end
$var wire 1 z$ ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 B% HLD_H_N $end
$var wire 1 h% HLD_OVR $end
$var wire 1 0& IB_MODE_SEL $end
$var wire 1 V& INP_DIS $end
$var wire 1 |& OE_N $end
$var wire 1 D' OUT $end
$var wire 1 ," PAD $end
$var wire 1 $" PAD_A_ESD_0_H $end
$var wire 1 ^: PAD_A_ESD_1_H $end
$var wire 1 _: PAD_A_NOESD_H $end
$var wire 1 j' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 2( VTRIP_SEL $end
$var wire 1 $0 TIE_LO_ESD $end
$var wire 1 `: TIE_HI_ESD $end
$var wire 1 a: IN_H $end
$var wire 1 J0 IN $end
$var wire 1 $0 ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 b: event_error_vswitch5 $end
$var event 1 c: event_error_vswitch4 $end
$var event 1 d: event_error_vswitch3 $end
$var event 1 e: event_error_vswitch2 $end
$var event 1 f: event_error_vswitch1 $end
$var event 1 g: event_error_vddio_q2 $end
$var event 1 h: event_error_vddio_q1 $end
$var event 1 i: event_error_vdda_vddioq_vswitch2 $end
$var event 1 j: event_error_vdda3 $end
$var event 1 k: event_error_vdda2 $end
$var event 1 l: event_error_vdda $end
$var event 1 m: event_error_supply_good $end
$var event 1 n: event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 R" ANALOG_EN $end
$var wire 1 x" ANALOG_POL $end
$var wire 1 @# ANALOG_SEL $end
$var wire 3 o: DM [2:0] $end
$var wire 1 z$ ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 B% HLD_H_N $end
$var wire 1 h% HLD_OVR $end
$var wire 1 0& IB_MODE_SEL $end
$var wire 1 V& INP_DIS $end
$var wire 1 |& OE_N $end
$var wire 1 D' OUT $end
$var wire 1 ," PAD $end
$var wire 1 $" PAD_A_ESD_0_H $end
$var wire 1 ^: PAD_A_ESD_1_H $end
$var wire 1 _: PAD_A_NOESD_H $end
$var wire 1 j' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 2( VTRIP_SEL $end
$var wire 3 p: dm_buf [2:0] $end
$var wire 1 q: error_enable_vddio $end
$var wire 1 r: error_supply_good $end
$var wire 1 s: error_vdda $end
$var wire 1 t: error_vdda2 $end
$var wire 1 u: error_vdda3 $end
$var wire 1 v: error_vdda_vddioq_vswitch2 $end
$var wire 1 w: error_vddio_q1 $end
$var wire 1 x: error_vddio_q2 $end
$var wire 1 y: error_vswitch1 $end
$var wire 1 z: error_vswitch2 $end
$var wire 1 {: error_vswitch3 $end
$var wire 1 |: error_vswitch4 $end
$var wire 1 }: error_vswitch5 $end
$var wire 1 ~: functional_mode_amux $end
$var wire 1 !; hld_h_n_buf $end
$var wire 1 "; hld_ovr_buf $end
$var wire 1 #; ib_mode_sel_buf $end
$var wire 1 $; inp_dis_buf $end
$var wire 1 %; invalid_controls_amux $end
$var wire 1 &; oe_n_buf $end
$var wire 1 '; out_buf $end
$var wire 1 (; pad_tristate $end
$var wire 1 ); pwr_good_active_mode $end
$var wire 1 *; pwr_good_active_mode_vdda $end
$var wire 1 +; pwr_good_amux $end
$var wire 1 ,; pwr_good_analog_en_vdda $end
$var wire 1 -; pwr_good_analog_en_vddio_q $end
$var wire 1 .; pwr_good_analog_en_vswitch $end
$var wire 1 /; pwr_good_hold_mode $end
$var wire 1 0; pwr_good_hold_mode_vdda $end
$var wire 1 1; pwr_good_hold_ovr_mode $end
$var wire 1 2; pwr_good_inpbuff_hv $end
$var wire 1 3; pwr_good_inpbuff_lv $end
$var wire 1 4; pwr_good_output_driver $end
$var wire 1 5; slow_buf $end
$var wire 1 6; vtrip_sel_buf $end
$var wire 1 7; x_on_analog_en_vdda $end
$var wire 1 8; x_on_analog_en_vddio_q $end
$var wire 1 9; x_on_analog_en_vswitch $end
$var wire 1 :; x_on_in_hv $end
$var wire 1 ;; x_on_in_lv $end
$var wire 1 <; x_on_pad $end
$var wire 1 =; zero_on_analog_en_vdda $end
$var wire 1 >; zero_on_analog_en_vddio_q $end
$var wire 1 ?; zero_on_analog_en_vswitch $end
$var wire 1 @; pwr_good_amux_vccd $end
$var wire 1 A; enable_pad_vssio_q $end
$var wire 1 B; enable_pad_vddio_q $end
$var wire 1 C; enable_pad_amuxbus_b $end
$var wire 1 D; enable_pad_amuxbus_a $end
$var wire 1 E; disable_inp_buff_lv $end
$var wire 1 F; disable_inp_buff $end
$var wire 3 G; amux_select [2:0] $end
$var wire 1 $0 TIE_LO_ESD $end
$var wire 1 `: TIE_HI_ESD $end
$var wire 1 a: IN_H $end
$var wire 1 J0 IN $end
$var wire 1 $0 ENABLE_INP_H $end
$var reg 1 H; analog_en_final $end
$var reg 1 I; analog_en_vdda $end
$var reg 1 J; analog_en_vddio_q $end
$var reg 1 K; analog_en_vswitch $end
$var reg 1 L; dis_err_msgs $end
$var reg 3 M; dm_final [2:0] $end
$var reg 1 N; hld_ovr_final $end
$var reg 1 O; ib_mode_sel_final $end
$var reg 1 P; inp_dis_final $end
$var reg 1 Q; notifier_dm $end
$var reg 1 R; notifier_enable_h $end
$var reg 1 S; notifier_hld_ovr $end
$var reg 1 T; notifier_ib_mode_sel $end
$var reg 1 U; notifier_inp_dis $end
$var reg 1 V; notifier_oe_n $end
$var reg 1 W; notifier_out $end
$var reg 1 X; notifier_slow $end
$var reg 1 Y; notifier_vtrip_sel $end
$var reg 1 Z; oe_n_final $end
$var reg 1 [; out_final $end
$var reg 1 \; slow_final $end
$var reg 1 ]; vtrip_sel_final $end
$var integer 32 ^; msg_count_pad [31:0] $end
$var integer 32 _; msg_count_pad1 [31:0] $end
$var integer 32 `; msg_count_pad10 [31:0] $end
$var integer 32 a; msg_count_pad11 [31:0] $end
$var integer 32 b; msg_count_pad12 [31:0] $end
$var integer 32 c; msg_count_pad2 [31:0] $end
$var integer 32 d; msg_count_pad3 [31:0] $end
$var integer 32 e; msg_count_pad4 [31:0] $end
$var integer 32 f; msg_count_pad5 [31:0] $end
$var integer 32 g; msg_count_pad6 [31:0] $end
$var integer 32 h; msg_count_pad7 [31:0] $end
$var integer 32 i; msg_count_pad8 [31:0] $end
$var integer 32 j; msg_count_pad9 [31:0] $end
$var integer 32 k; slow_0_delay [31:0] $end
$var integer 32 l; slow_1_delay [31:0] $end
$var integer 32 m; slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area1_io_pad[12] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 S" ANALOG_EN $end
$var wire 1 y" ANALOG_POL $end
$var wire 1 A# ANALOG_SEL $end
$var wire 3 n; DM [2:0] $end
$var wire 1 {$ ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 C% HLD_H_N $end
$var wire 1 i% HLD_OVR $end
$var wire 1 1& IB_MODE_SEL $end
$var wire 1 W& INP_DIS $end
$var wire 1 }& OE_N $end
$var wire 1 E' OUT $end
$var wire 1 -" PAD $end
$var wire 1 %" PAD_A_ESD_0_H $end
$var wire 1 o; PAD_A_ESD_1_H $end
$var wire 1 p; PAD_A_NOESD_H $end
$var wire 1 k' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 3( VTRIP_SEL $end
$var wire 1 #0 TIE_LO_ESD $end
$var wire 1 q; TIE_HI_ESD $end
$var wire 1 r; IN_H $end
$var wire 1 I0 IN $end
$var wire 1 #0 ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 s; event_error_vswitch5 $end
$var event 1 t; event_error_vswitch4 $end
$var event 1 u; event_error_vswitch3 $end
$var event 1 v; event_error_vswitch2 $end
$var event 1 w; event_error_vswitch1 $end
$var event 1 x; event_error_vddio_q2 $end
$var event 1 y; event_error_vddio_q1 $end
$var event 1 z; event_error_vdda_vddioq_vswitch2 $end
$var event 1 {; event_error_vdda3 $end
$var event 1 |; event_error_vdda2 $end
$var event 1 }; event_error_vdda $end
$var event 1 ~; event_error_supply_good $end
$var event 1 !< event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 S" ANALOG_EN $end
$var wire 1 y" ANALOG_POL $end
$var wire 1 A# ANALOG_SEL $end
$var wire 3 "< DM [2:0] $end
$var wire 1 {$ ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 C% HLD_H_N $end
$var wire 1 i% HLD_OVR $end
$var wire 1 1& IB_MODE_SEL $end
$var wire 1 W& INP_DIS $end
$var wire 1 }& OE_N $end
$var wire 1 E' OUT $end
$var wire 1 -" PAD $end
$var wire 1 %" PAD_A_ESD_0_H $end
$var wire 1 o; PAD_A_ESD_1_H $end
$var wire 1 p; PAD_A_NOESD_H $end
$var wire 1 k' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 3( VTRIP_SEL $end
$var wire 3 #< dm_buf [2:0] $end
$var wire 1 $< error_enable_vddio $end
$var wire 1 %< error_supply_good $end
$var wire 1 &< error_vdda $end
$var wire 1 '< error_vdda2 $end
$var wire 1 (< error_vdda3 $end
$var wire 1 )< error_vdda_vddioq_vswitch2 $end
$var wire 1 *< error_vddio_q1 $end
$var wire 1 +< error_vddio_q2 $end
$var wire 1 ,< error_vswitch1 $end
$var wire 1 -< error_vswitch2 $end
$var wire 1 .< error_vswitch3 $end
$var wire 1 /< error_vswitch4 $end
$var wire 1 0< error_vswitch5 $end
$var wire 1 1< functional_mode_amux $end
$var wire 1 2< hld_h_n_buf $end
$var wire 1 3< hld_ovr_buf $end
$var wire 1 4< ib_mode_sel_buf $end
$var wire 1 5< inp_dis_buf $end
$var wire 1 6< invalid_controls_amux $end
$var wire 1 7< oe_n_buf $end
$var wire 1 8< out_buf $end
$var wire 1 9< pad_tristate $end
$var wire 1 :< pwr_good_active_mode $end
$var wire 1 ;< pwr_good_active_mode_vdda $end
$var wire 1 << pwr_good_amux $end
$var wire 1 =< pwr_good_analog_en_vdda $end
$var wire 1 >< pwr_good_analog_en_vddio_q $end
$var wire 1 ?< pwr_good_analog_en_vswitch $end
$var wire 1 @< pwr_good_hold_mode $end
$var wire 1 A< pwr_good_hold_mode_vdda $end
$var wire 1 B< pwr_good_hold_ovr_mode $end
$var wire 1 C< pwr_good_inpbuff_hv $end
$var wire 1 D< pwr_good_inpbuff_lv $end
$var wire 1 E< pwr_good_output_driver $end
$var wire 1 F< slow_buf $end
$var wire 1 G< vtrip_sel_buf $end
$var wire 1 H< x_on_analog_en_vdda $end
$var wire 1 I< x_on_analog_en_vddio_q $end
$var wire 1 J< x_on_analog_en_vswitch $end
$var wire 1 K< x_on_in_hv $end
$var wire 1 L< x_on_in_lv $end
$var wire 1 M< x_on_pad $end
$var wire 1 N< zero_on_analog_en_vdda $end
$var wire 1 O< zero_on_analog_en_vddio_q $end
$var wire 1 P< zero_on_analog_en_vswitch $end
$var wire 1 Q< pwr_good_amux_vccd $end
$var wire 1 R< enable_pad_vssio_q $end
$var wire 1 S< enable_pad_vddio_q $end
$var wire 1 T< enable_pad_amuxbus_b $end
$var wire 1 U< enable_pad_amuxbus_a $end
$var wire 1 V< disable_inp_buff_lv $end
$var wire 1 W< disable_inp_buff $end
$var wire 3 X< amux_select [2:0] $end
$var wire 1 #0 TIE_LO_ESD $end
$var wire 1 q; TIE_HI_ESD $end
$var wire 1 r; IN_H $end
$var wire 1 I0 IN $end
$var wire 1 #0 ENABLE_INP_H $end
$var reg 1 Y< analog_en_final $end
$var reg 1 Z< analog_en_vdda $end
$var reg 1 [< analog_en_vddio_q $end
$var reg 1 \< analog_en_vswitch $end
$var reg 1 ]< dis_err_msgs $end
$var reg 3 ^< dm_final [2:0] $end
$var reg 1 _< hld_ovr_final $end
$var reg 1 `< ib_mode_sel_final $end
$var reg 1 a< inp_dis_final $end
$var reg 1 b< notifier_dm $end
$var reg 1 c< notifier_enable_h $end
$var reg 1 d< notifier_hld_ovr $end
$var reg 1 e< notifier_ib_mode_sel $end
$var reg 1 f< notifier_inp_dis $end
$var reg 1 g< notifier_oe_n $end
$var reg 1 h< notifier_out $end
$var reg 1 i< notifier_slow $end
$var reg 1 j< notifier_vtrip_sel $end
$var reg 1 k< oe_n_final $end
$var reg 1 l< out_final $end
$var reg 1 m< slow_final $end
$var reg 1 n< vtrip_sel_final $end
$var integer 32 o< msg_count_pad [31:0] $end
$var integer 32 p< msg_count_pad1 [31:0] $end
$var integer 32 q< msg_count_pad10 [31:0] $end
$var integer 32 r< msg_count_pad11 [31:0] $end
$var integer 32 s< msg_count_pad12 [31:0] $end
$var integer 32 t< msg_count_pad2 [31:0] $end
$var integer 32 u< msg_count_pad3 [31:0] $end
$var integer 32 v< msg_count_pad4 [31:0] $end
$var integer 32 w< msg_count_pad5 [31:0] $end
$var integer 32 x< msg_count_pad6 [31:0] $end
$var integer 32 y< msg_count_pad7 [31:0] $end
$var integer 32 z< msg_count_pad8 [31:0] $end
$var integer 32 {< msg_count_pad9 [31:0] $end
$var integer 32 |< slow_0_delay [31:0] $end
$var integer 32 }< slow_1_delay [31:0] $end
$var integer 32 ~< slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area1_io_pad[13] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 T" ANALOG_EN $end
$var wire 1 z" ANALOG_POL $end
$var wire 1 B# ANALOG_SEL $end
$var wire 3 != DM [2:0] $end
$var wire 1 |$ ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 D% HLD_H_N $end
$var wire 1 j% HLD_OVR $end
$var wire 1 2& IB_MODE_SEL $end
$var wire 1 X& INP_DIS $end
$var wire 1 ~& OE_N $end
$var wire 1 F' OUT $end
$var wire 1 ." PAD $end
$var wire 1 &" PAD_A_ESD_0_H $end
$var wire 1 "= PAD_A_ESD_1_H $end
$var wire 1 #= PAD_A_NOESD_H $end
$var wire 1 l' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 4( VTRIP_SEL $end
$var wire 1 "0 TIE_LO_ESD $end
$var wire 1 $= TIE_HI_ESD $end
$var wire 1 %= IN_H $end
$var wire 1 H0 IN $end
$var wire 1 "0 ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 &= event_error_vswitch5 $end
$var event 1 '= event_error_vswitch4 $end
$var event 1 (= event_error_vswitch3 $end
$var event 1 )= event_error_vswitch2 $end
$var event 1 *= event_error_vswitch1 $end
$var event 1 += event_error_vddio_q2 $end
$var event 1 ,= event_error_vddio_q1 $end
$var event 1 -= event_error_vdda_vddioq_vswitch2 $end
$var event 1 .= event_error_vdda3 $end
$var event 1 /= event_error_vdda2 $end
$var event 1 0= event_error_vdda $end
$var event 1 1= event_error_supply_good $end
$var event 1 2= event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 T" ANALOG_EN $end
$var wire 1 z" ANALOG_POL $end
$var wire 1 B# ANALOG_SEL $end
$var wire 3 3= DM [2:0] $end
$var wire 1 |$ ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 D% HLD_H_N $end
$var wire 1 j% HLD_OVR $end
$var wire 1 2& IB_MODE_SEL $end
$var wire 1 X& INP_DIS $end
$var wire 1 ~& OE_N $end
$var wire 1 F' OUT $end
$var wire 1 ." PAD $end
$var wire 1 &" PAD_A_ESD_0_H $end
$var wire 1 "= PAD_A_ESD_1_H $end
$var wire 1 #= PAD_A_NOESD_H $end
$var wire 1 l' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 4( VTRIP_SEL $end
$var wire 3 4= dm_buf [2:0] $end
$var wire 1 5= error_enable_vddio $end
$var wire 1 6= error_supply_good $end
$var wire 1 7= error_vdda $end
$var wire 1 8= error_vdda2 $end
$var wire 1 9= error_vdda3 $end
$var wire 1 := error_vdda_vddioq_vswitch2 $end
$var wire 1 ;= error_vddio_q1 $end
$var wire 1 <= error_vddio_q2 $end
$var wire 1 == error_vswitch1 $end
$var wire 1 >= error_vswitch2 $end
$var wire 1 ?= error_vswitch3 $end
$var wire 1 @= error_vswitch4 $end
$var wire 1 A= error_vswitch5 $end
$var wire 1 B= functional_mode_amux $end
$var wire 1 C= hld_h_n_buf $end
$var wire 1 D= hld_ovr_buf $end
$var wire 1 E= ib_mode_sel_buf $end
$var wire 1 F= inp_dis_buf $end
$var wire 1 G= invalid_controls_amux $end
$var wire 1 H= oe_n_buf $end
$var wire 1 I= out_buf $end
$var wire 1 J= pad_tristate $end
$var wire 1 K= pwr_good_active_mode $end
$var wire 1 L= pwr_good_active_mode_vdda $end
$var wire 1 M= pwr_good_amux $end
$var wire 1 N= pwr_good_analog_en_vdda $end
$var wire 1 O= pwr_good_analog_en_vddio_q $end
$var wire 1 P= pwr_good_analog_en_vswitch $end
$var wire 1 Q= pwr_good_hold_mode $end
$var wire 1 R= pwr_good_hold_mode_vdda $end
$var wire 1 S= pwr_good_hold_ovr_mode $end
$var wire 1 T= pwr_good_inpbuff_hv $end
$var wire 1 U= pwr_good_inpbuff_lv $end
$var wire 1 V= pwr_good_output_driver $end
$var wire 1 W= slow_buf $end
$var wire 1 X= vtrip_sel_buf $end
$var wire 1 Y= x_on_analog_en_vdda $end
$var wire 1 Z= x_on_analog_en_vddio_q $end
$var wire 1 [= x_on_analog_en_vswitch $end
$var wire 1 \= x_on_in_hv $end
$var wire 1 ]= x_on_in_lv $end
$var wire 1 ^= x_on_pad $end
$var wire 1 _= zero_on_analog_en_vdda $end
$var wire 1 `= zero_on_analog_en_vddio_q $end
$var wire 1 a= zero_on_analog_en_vswitch $end
$var wire 1 b= pwr_good_amux_vccd $end
$var wire 1 c= enable_pad_vssio_q $end
$var wire 1 d= enable_pad_vddio_q $end
$var wire 1 e= enable_pad_amuxbus_b $end
$var wire 1 f= enable_pad_amuxbus_a $end
$var wire 1 g= disable_inp_buff_lv $end
$var wire 1 h= disable_inp_buff $end
$var wire 3 i= amux_select [2:0] $end
$var wire 1 "0 TIE_LO_ESD $end
$var wire 1 $= TIE_HI_ESD $end
$var wire 1 %= IN_H $end
$var wire 1 H0 IN $end
$var wire 1 "0 ENABLE_INP_H $end
$var reg 1 j= analog_en_final $end
$var reg 1 k= analog_en_vdda $end
$var reg 1 l= analog_en_vddio_q $end
$var reg 1 m= analog_en_vswitch $end
$var reg 1 n= dis_err_msgs $end
$var reg 3 o= dm_final [2:0] $end
$var reg 1 p= hld_ovr_final $end
$var reg 1 q= ib_mode_sel_final $end
$var reg 1 r= inp_dis_final $end
$var reg 1 s= notifier_dm $end
$var reg 1 t= notifier_enable_h $end
$var reg 1 u= notifier_hld_ovr $end
$var reg 1 v= notifier_ib_mode_sel $end
$var reg 1 w= notifier_inp_dis $end
$var reg 1 x= notifier_oe_n $end
$var reg 1 y= notifier_out $end
$var reg 1 z= notifier_slow $end
$var reg 1 {= notifier_vtrip_sel $end
$var reg 1 |= oe_n_final $end
$var reg 1 }= out_final $end
$var reg 1 ~= slow_final $end
$var reg 1 !> vtrip_sel_final $end
$var integer 32 "> msg_count_pad [31:0] $end
$var integer 32 #> msg_count_pad1 [31:0] $end
$var integer 32 $> msg_count_pad10 [31:0] $end
$var integer 32 %> msg_count_pad11 [31:0] $end
$var integer 32 &> msg_count_pad12 [31:0] $end
$var integer 32 '> msg_count_pad2 [31:0] $end
$var integer 32 (> msg_count_pad3 [31:0] $end
$var integer 32 )> msg_count_pad4 [31:0] $end
$var integer 32 *> msg_count_pad5 [31:0] $end
$var integer 32 +> msg_count_pad6 [31:0] $end
$var integer 32 ,> msg_count_pad7 [31:0] $end
$var integer 32 -> msg_count_pad8 [31:0] $end
$var integer 32 .> msg_count_pad9 [31:0] $end
$var integer 32 /> slow_0_delay [31:0] $end
$var integer 32 0> slow_1_delay [31:0] $end
$var integer 32 1> slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area1_io_pad[14] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 U" ANALOG_EN $end
$var wire 1 {" ANALOG_POL $end
$var wire 1 C# ANALOG_SEL $end
$var wire 3 2> DM [2:0] $end
$var wire 1 }$ ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 E% HLD_H_N $end
$var wire 1 k% HLD_OVR $end
$var wire 1 3& IB_MODE_SEL $end
$var wire 1 Y& INP_DIS $end
$var wire 1 !' OE_N $end
$var wire 1 G' OUT $end
$var wire 1 /" PAD $end
$var wire 1 '" PAD_A_ESD_0_H $end
$var wire 1 3> PAD_A_ESD_1_H $end
$var wire 1 4> PAD_A_NOESD_H $end
$var wire 1 m' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 5( VTRIP_SEL $end
$var wire 1 !0 TIE_LO_ESD $end
$var wire 1 5> TIE_HI_ESD $end
$var wire 1 6> IN_H $end
$var wire 1 G0 IN $end
$var wire 1 !0 ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 7> event_error_vswitch5 $end
$var event 1 8> event_error_vswitch4 $end
$var event 1 9> event_error_vswitch3 $end
$var event 1 :> event_error_vswitch2 $end
$var event 1 ;> event_error_vswitch1 $end
$var event 1 <> event_error_vddio_q2 $end
$var event 1 => event_error_vddio_q1 $end
$var event 1 >> event_error_vdda_vddioq_vswitch2 $end
$var event 1 ?> event_error_vdda3 $end
$var event 1 @> event_error_vdda2 $end
$var event 1 A> event_error_vdda $end
$var event 1 B> event_error_supply_good $end
$var event 1 C> event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 U" ANALOG_EN $end
$var wire 1 {" ANALOG_POL $end
$var wire 1 C# ANALOG_SEL $end
$var wire 3 D> DM [2:0] $end
$var wire 1 }$ ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 E% HLD_H_N $end
$var wire 1 k% HLD_OVR $end
$var wire 1 3& IB_MODE_SEL $end
$var wire 1 Y& INP_DIS $end
$var wire 1 !' OE_N $end
$var wire 1 G' OUT $end
$var wire 1 /" PAD $end
$var wire 1 '" PAD_A_ESD_0_H $end
$var wire 1 3> PAD_A_ESD_1_H $end
$var wire 1 4> PAD_A_NOESD_H $end
$var wire 1 m' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 5( VTRIP_SEL $end
$var wire 3 E> dm_buf [2:0] $end
$var wire 1 F> error_enable_vddio $end
$var wire 1 G> error_supply_good $end
$var wire 1 H> error_vdda $end
$var wire 1 I> error_vdda2 $end
$var wire 1 J> error_vdda3 $end
$var wire 1 K> error_vdda_vddioq_vswitch2 $end
$var wire 1 L> error_vddio_q1 $end
$var wire 1 M> error_vddio_q2 $end
$var wire 1 N> error_vswitch1 $end
$var wire 1 O> error_vswitch2 $end
$var wire 1 P> error_vswitch3 $end
$var wire 1 Q> error_vswitch4 $end
$var wire 1 R> error_vswitch5 $end
$var wire 1 S> functional_mode_amux $end
$var wire 1 T> hld_h_n_buf $end
$var wire 1 U> hld_ovr_buf $end
$var wire 1 V> ib_mode_sel_buf $end
$var wire 1 W> inp_dis_buf $end
$var wire 1 X> invalid_controls_amux $end
$var wire 1 Y> oe_n_buf $end
$var wire 1 Z> out_buf $end
$var wire 1 [> pad_tristate $end
$var wire 1 \> pwr_good_active_mode $end
$var wire 1 ]> pwr_good_active_mode_vdda $end
$var wire 1 ^> pwr_good_amux $end
$var wire 1 _> pwr_good_analog_en_vdda $end
$var wire 1 `> pwr_good_analog_en_vddio_q $end
$var wire 1 a> pwr_good_analog_en_vswitch $end
$var wire 1 b> pwr_good_hold_mode $end
$var wire 1 c> pwr_good_hold_mode_vdda $end
$var wire 1 d> pwr_good_hold_ovr_mode $end
$var wire 1 e> pwr_good_inpbuff_hv $end
$var wire 1 f> pwr_good_inpbuff_lv $end
$var wire 1 g> pwr_good_output_driver $end
$var wire 1 h> slow_buf $end
$var wire 1 i> vtrip_sel_buf $end
$var wire 1 j> x_on_analog_en_vdda $end
$var wire 1 k> x_on_analog_en_vddio_q $end
$var wire 1 l> x_on_analog_en_vswitch $end
$var wire 1 m> x_on_in_hv $end
$var wire 1 n> x_on_in_lv $end
$var wire 1 o> x_on_pad $end
$var wire 1 p> zero_on_analog_en_vdda $end
$var wire 1 q> zero_on_analog_en_vddio_q $end
$var wire 1 r> zero_on_analog_en_vswitch $end
$var wire 1 s> pwr_good_amux_vccd $end
$var wire 1 t> enable_pad_vssio_q $end
$var wire 1 u> enable_pad_vddio_q $end
$var wire 1 v> enable_pad_amuxbus_b $end
$var wire 1 w> enable_pad_amuxbus_a $end
$var wire 1 x> disable_inp_buff_lv $end
$var wire 1 y> disable_inp_buff $end
$var wire 3 z> amux_select [2:0] $end
$var wire 1 !0 TIE_LO_ESD $end
$var wire 1 5> TIE_HI_ESD $end
$var wire 1 6> IN_H $end
$var wire 1 G0 IN $end
$var wire 1 !0 ENABLE_INP_H $end
$var reg 1 {> analog_en_final $end
$var reg 1 |> analog_en_vdda $end
$var reg 1 }> analog_en_vddio_q $end
$var reg 1 ~> analog_en_vswitch $end
$var reg 1 !? dis_err_msgs $end
$var reg 3 "? dm_final [2:0] $end
$var reg 1 #? hld_ovr_final $end
$var reg 1 $? ib_mode_sel_final $end
$var reg 1 %? inp_dis_final $end
$var reg 1 &? notifier_dm $end
$var reg 1 '? notifier_enable_h $end
$var reg 1 (? notifier_hld_ovr $end
$var reg 1 )? notifier_ib_mode_sel $end
$var reg 1 *? notifier_inp_dis $end
$var reg 1 +? notifier_oe_n $end
$var reg 1 ,? notifier_out $end
$var reg 1 -? notifier_slow $end
$var reg 1 .? notifier_vtrip_sel $end
$var reg 1 /? oe_n_final $end
$var reg 1 0? out_final $end
$var reg 1 1? slow_final $end
$var reg 1 2? vtrip_sel_final $end
$var integer 32 3? msg_count_pad [31:0] $end
$var integer 32 4? msg_count_pad1 [31:0] $end
$var integer 32 5? msg_count_pad10 [31:0] $end
$var integer 32 6? msg_count_pad11 [31:0] $end
$var integer 32 7? msg_count_pad12 [31:0] $end
$var integer 32 8? msg_count_pad2 [31:0] $end
$var integer 32 9? msg_count_pad3 [31:0] $end
$var integer 32 :? msg_count_pad4 [31:0] $end
$var integer 32 ;? msg_count_pad5 [31:0] $end
$var integer 32 <? msg_count_pad6 [31:0] $end
$var integer 32 =? msg_count_pad7 [31:0] $end
$var integer 32 >? msg_count_pad8 [31:0] $end
$var integer 32 ?? msg_count_pad9 [31:0] $end
$var integer 32 @? slow_0_delay [31:0] $end
$var integer 32 A? slow_1_delay [31:0] $end
$var integer 32 B? slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area1_io_pad[15] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 V" ANALOG_EN $end
$var wire 1 |" ANALOG_POL $end
$var wire 1 D# ANALOG_SEL $end
$var wire 3 C? DM [2:0] $end
$var wire 1 ~$ ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 F% HLD_H_N $end
$var wire 1 l% HLD_OVR $end
$var wire 1 4& IB_MODE_SEL $end
$var wire 1 Z& INP_DIS $end
$var wire 1 "' OE_N $end
$var wire 1 H' OUT $end
$var wire 1 0" PAD $end
$var wire 1 (" PAD_A_ESD_0_H $end
$var wire 1 D? PAD_A_ESD_1_H $end
$var wire 1 E? PAD_A_NOESD_H $end
$var wire 1 n' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 6( VTRIP_SEL $end
$var wire 1 ~/ TIE_LO_ESD $end
$var wire 1 F? TIE_HI_ESD $end
$var wire 1 G? IN_H $end
$var wire 1 F0 IN $end
$var wire 1 ~/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 H? event_error_vswitch5 $end
$var event 1 I? event_error_vswitch4 $end
$var event 1 J? event_error_vswitch3 $end
$var event 1 K? event_error_vswitch2 $end
$var event 1 L? event_error_vswitch1 $end
$var event 1 M? event_error_vddio_q2 $end
$var event 1 N? event_error_vddio_q1 $end
$var event 1 O? event_error_vdda_vddioq_vswitch2 $end
$var event 1 P? event_error_vdda3 $end
$var event 1 Q? event_error_vdda2 $end
$var event 1 R? event_error_vdda $end
$var event 1 S? event_error_supply_good $end
$var event 1 T? event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 V" ANALOG_EN $end
$var wire 1 |" ANALOG_POL $end
$var wire 1 D# ANALOG_SEL $end
$var wire 3 U? DM [2:0] $end
$var wire 1 ~$ ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 F% HLD_H_N $end
$var wire 1 l% HLD_OVR $end
$var wire 1 4& IB_MODE_SEL $end
$var wire 1 Z& INP_DIS $end
$var wire 1 "' OE_N $end
$var wire 1 H' OUT $end
$var wire 1 0" PAD $end
$var wire 1 (" PAD_A_ESD_0_H $end
$var wire 1 D? PAD_A_ESD_1_H $end
$var wire 1 E? PAD_A_NOESD_H $end
$var wire 1 n' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 6( VTRIP_SEL $end
$var wire 3 V? dm_buf [2:0] $end
$var wire 1 W? error_enable_vddio $end
$var wire 1 X? error_supply_good $end
$var wire 1 Y? error_vdda $end
$var wire 1 Z? error_vdda2 $end
$var wire 1 [? error_vdda3 $end
$var wire 1 \? error_vdda_vddioq_vswitch2 $end
$var wire 1 ]? error_vddio_q1 $end
$var wire 1 ^? error_vddio_q2 $end
$var wire 1 _? error_vswitch1 $end
$var wire 1 `? error_vswitch2 $end
$var wire 1 a? error_vswitch3 $end
$var wire 1 b? error_vswitch4 $end
$var wire 1 c? error_vswitch5 $end
$var wire 1 d? functional_mode_amux $end
$var wire 1 e? hld_h_n_buf $end
$var wire 1 f? hld_ovr_buf $end
$var wire 1 g? ib_mode_sel_buf $end
$var wire 1 h? inp_dis_buf $end
$var wire 1 i? invalid_controls_amux $end
$var wire 1 j? oe_n_buf $end
$var wire 1 k? out_buf $end
$var wire 1 l? pad_tristate $end
$var wire 1 m? pwr_good_active_mode $end
$var wire 1 n? pwr_good_active_mode_vdda $end
$var wire 1 o? pwr_good_amux $end
$var wire 1 p? pwr_good_analog_en_vdda $end
$var wire 1 q? pwr_good_analog_en_vddio_q $end
$var wire 1 r? pwr_good_analog_en_vswitch $end
$var wire 1 s? pwr_good_hold_mode $end
$var wire 1 t? pwr_good_hold_mode_vdda $end
$var wire 1 u? pwr_good_hold_ovr_mode $end
$var wire 1 v? pwr_good_inpbuff_hv $end
$var wire 1 w? pwr_good_inpbuff_lv $end
$var wire 1 x? pwr_good_output_driver $end
$var wire 1 y? slow_buf $end
$var wire 1 z? vtrip_sel_buf $end
$var wire 1 {? x_on_analog_en_vdda $end
$var wire 1 |? x_on_analog_en_vddio_q $end
$var wire 1 }? x_on_analog_en_vswitch $end
$var wire 1 ~? x_on_in_hv $end
$var wire 1 !@ x_on_in_lv $end
$var wire 1 "@ x_on_pad $end
$var wire 1 #@ zero_on_analog_en_vdda $end
$var wire 1 $@ zero_on_analog_en_vddio_q $end
$var wire 1 %@ zero_on_analog_en_vswitch $end
$var wire 1 &@ pwr_good_amux_vccd $end
$var wire 1 '@ enable_pad_vssio_q $end
$var wire 1 (@ enable_pad_vddio_q $end
$var wire 1 )@ enable_pad_amuxbus_b $end
$var wire 1 *@ enable_pad_amuxbus_a $end
$var wire 1 +@ disable_inp_buff_lv $end
$var wire 1 ,@ disable_inp_buff $end
$var wire 3 -@ amux_select [2:0] $end
$var wire 1 ~/ TIE_LO_ESD $end
$var wire 1 F? TIE_HI_ESD $end
$var wire 1 G? IN_H $end
$var wire 1 F0 IN $end
$var wire 1 ~/ ENABLE_INP_H $end
$var reg 1 .@ analog_en_final $end
$var reg 1 /@ analog_en_vdda $end
$var reg 1 0@ analog_en_vddio_q $end
$var reg 1 1@ analog_en_vswitch $end
$var reg 1 2@ dis_err_msgs $end
$var reg 3 3@ dm_final [2:0] $end
$var reg 1 4@ hld_ovr_final $end
$var reg 1 5@ ib_mode_sel_final $end
$var reg 1 6@ inp_dis_final $end
$var reg 1 7@ notifier_dm $end
$var reg 1 8@ notifier_enable_h $end
$var reg 1 9@ notifier_hld_ovr $end
$var reg 1 :@ notifier_ib_mode_sel $end
$var reg 1 ;@ notifier_inp_dis $end
$var reg 1 <@ notifier_oe_n $end
$var reg 1 =@ notifier_out $end
$var reg 1 >@ notifier_slow $end
$var reg 1 ?@ notifier_vtrip_sel $end
$var reg 1 @@ oe_n_final $end
$var reg 1 A@ out_final $end
$var reg 1 B@ slow_final $end
$var reg 1 C@ vtrip_sel_final $end
$var integer 32 D@ msg_count_pad [31:0] $end
$var integer 32 E@ msg_count_pad1 [31:0] $end
$var integer 32 F@ msg_count_pad10 [31:0] $end
$var integer 32 G@ msg_count_pad11 [31:0] $end
$var integer 32 H@ msg_count_pad12 [31:0] $end
$var integer 32 I@ msg_count_pad2 [31:0] $end
$var integer 32 J@ msg_count_pad3 [31:0] $end
$var integer 32 K@ msg_count_pad4 [31:0] $end
$var integer 32 L@ msg_count_pad5 [31:0] $end
$var integer 32 M@ msg_count_pad6 [31:0] $end
$var integer 32 N@ msg_count_pad7 [31:0] $end
$var integer 32 O@ msg_count_pad8 [31:0] $end
$var integer 32 P@ msg_count_pad9 [31:0] $end
$var integer 32 Q@ slow_0_delay [31:0] $end
$var integer 32 R@ slow_1_delay [31:0] $end
$var integer 32 S@ slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area1_io_pad[16] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 W" ANALOG_EN $end
$var wire 1 }" ANALOG_POL $end
$var wire 1 E# ANALOG_SEL $end
$var wire 3 T@ DM [2:0] $end
$var wire 1 !% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 G% HLD_H_N $end
$var wire 1 m% HLD_OVR $end
$var wire 1 5& IB_MODE_SEL $end
$var wire 1 [& INP_DIS $end
$var wire 1 #' OE_N $end
$var wire 1 I' OUT $end
$var wire 1 1" PAD $end
$var wire 1 )" PAD_A_ESD_0_H $end
$var wire 1 U@ PAD_A_ESD_1_H $end
$var wire 1 V@ PAD_A_NOESD_H $end
$var wire 1 o' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 7( VTRIP_SEL $end
$var wire 1 }/ TIE_LO_ESD $end
$var wire 1 W@ TIE_HI_ESD $end
$var wire 1 X@ IN_H $end
$var wire 1 E0 IN $end
$var wire 1 }/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 Y@ event_error_vswitch5 $end
$var event 1 Z@ event_error_vswitch4 $end
$var event 1 [@ event_error_vswitch3 $end
$var event 1 \@ event_error_vswitch2 $end
$var event 1 ]@ event_error_vswitch1 $end
$var event 1 ^@ event_error_vddio_q2 $end
$var event 1 _@ event_error_vddio_q1 $end
$var event 1 `@ event_error_vdda_vddioq_vswitch2 $end
$var event 1 a@ event_error_vdda3 $end
$var event 1 b@ event_error_vdda2 $end
$var event 1 c@ event_error_vdda $end
$var event 1 d@ event_error_supply_good $end
$var event 1 e@ event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 W" ANALOG_EN $end
$var wire 1 }" ANALOG_POL $end
$var wire 1 E# ANALOG_SEL $end
$var wire 3 f@ DM [2:0] $end
$var wire 1 !% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 G% HLD_H_N $end
$var wire 1 m% HLD_OVR $end
$var wire 1 5& IB_MODE_SEL $end
$var wire 1 [& INP_DIS $end
$var wire 1 #' OE_N $end
$var wire 1 I' OUT $end
$var wire 1 1" PAD $end
$var wire 1 )" PAD_A_ESD_0_H $end
$var wire 1 U@ PAD_A_ESD_1_H $end
$var wire 1 V@ PAD_A_NOESD_H $end
$var wire 1 o' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 7( VTRIP_SEL $end
$var wire 3 g@ dm_buf [2:0] $end
$var wire 1 h@ error_enable_vddio $end
$var wire 1 i@ error_supply_good $end
$var wire 1 j@ error_vdda $end
$var wire 1 k@ error_vdda2 $end
$var wire 1 l@ error_vdda3 $end
$var wire 1 m@ error_vdda_vddioq_vswitch2 $end
$var wire 1 n@ error_vddio_q1 $end
$var wire 1 o@ error_vddio_q2 $end
$var wire 1 p@ error_vswitch1 $end
$var wire 1 q@ error_vswitch2 $end
$var wire 1 r@ error_vswitch3 $end
$var wire 1 s@ error_vswitch4 $end
$var wire 1 t@ error_vswitch5 $end
$var wire 1 u@ functional_mode_amux $end
$var wire 1 v@ hld_h_n_buf $end
$var wire 1 w@ hld_ovr_buf $end
$var wire 1 x@ ib_mode_sel_buf $end
$var wire 1 y@ inp_dis_buf $end
$var wire 1 z@ invalid_controls_amux $end
$var wire 1 {@ oe_n_buf $end
$var wire 1 |@ out_buf $end
$var wire 1 }@ pad_tristate $end
$var wire 1 ~@ pwr_good_active_mode $end
$var wire 1 !A pwr_good_active_mode_vdda $end
$var wire 1 "A pwr_good_amux $end
$var wire 1 #A pwr_good_analog_en_vdda $end
$var wire 1 $A pwr_good_analog_en_vddio_q $end
$var wire 1 %A pwr_good_analog_en_vswitch $end
$var wire 1 &A pwr_good_hold_mode $end
$var wire 1 'A pwr_good_hold_mode_vdda $end
$var wire 1 (A pwr_good_hold_ovr_mode $end
$var wire 1 )A pwr_good_inpbuff_hv $end
$var wire 1 *A pwr_good_inpbuff_lv $end
$var wire 1 +A pwr_good_output_driver $end
$var wire 1 ,A slow_buf $end
$var wire 1 -A vtrip_sel_buf $end
$var wire 1 .A x_on_analog_en_vdda $end
$var wire 1 /A x_on_analog_en_vddio_q $end
$var wire 1 0A x_on_analog_en_vswitch $end
$var wire 1 1A x_on_in_hv $end
$var wire 1 2A x_on_in_lv $end
$var wire 1 3A x_on_pad $end
$var wire 1 4A zero_on_analog_en_vdda $end
$var wire 1 5A zero_on_analog_en_vddio_q $end
$var wire 1 6A zero_on_analog_en_vswitch $end
$var wire 1 7A pwr_good_amux_vccd $end
$var wire 1 8A enable_pad_vssio_q $end
$var wire 1 9A enable_pad_vddio_q $end
$var wire 1 :A enable_pad_amuxbus_b $end
$var wire 1 ;A enable_pad_amuxbus_a $end
$var wire 1 <A disable_inp_buff_lv $end
$var wire 1 =A disable_inp_buff $end
$var wire 3 >A amux_select [2:0] $end
$var wire 1 }/ TIE_LO_ESD $end
$var wire 1 W@ TIE_HI_ESD $end
$var wire 1 X@ IN_H $end
$var wire 1 E0 IN $end
$var wire 1 }/ ENABLE_INP_H $end
$var reg 1 ?A analog_en_final $end
$var reg 1 @A analog_en_vdda $end
$var reg 1 AA analog_en_vddio_q $end
$var reg 1 BA analog_en_vswitch $end
$var reg 1 CA dis_err_msgs $end
$var reg 3 DA dm_final [2:0] $end
$var reg 1 EA hld_ovr_final $end
$var reg 1 FA ib_mode_sel_final $end
$var reg 1 GA inp_dis_final $end
$var reg 1 HA notifier_dm $end
$var reg 1 IA notifier_enable_h $end
$var reg 1 JA notifier_hld_ovr $end
$var reg 1 KA notifier_ib_mode_sel $end
$var reg 1 LA notifier_inp_dis $end
$var reg 1 MA notifier_oe_n $end
$var reg 1 NA notifier_out $end
$var reg 1 OA notifier_slow $end
$var reg 1 PA notifier_vtrip_sel $end
$var reg 1 QA oe_n_final $end
$var reg 1 RA out_final $end
$var reg 1 SA slow_final $end
$var reg 1 TA vtrip_sel_final $end
$var integer 32 UA msg_count_pad [31:0] $end
$var integer 32 VA msg_count_pad1 [31:0] $end
$var integer 32 WA msg_count_pad10 [31:0] $end
$var integer 32 XA msg_count_pad11 [31:0] $end
$var integer 32 YA msg_count_pad12 [31:0] $end
$var integer 32 ZA msg_count_pad2 [31:0] $end
$var integer 32 [A msg_count_pad3 [31:0] $end
$var integer 32 \A msg_count_pad4 [31:0] $end
$var integer 32 ]A msg_count_pad5 [31:0] $end
$var integer 32 ^A msg_count_pad6 [31:0] $end
$var integer 32 _A msg_count_pad7 [31:0] $end
$var integer 32 `A msg_count_pad8 [31:0] $end
$var integer 32 aA msg_count_pad9 [31:0] $end
$var integer 32 bA slow_0_delay [31:0] $end
$var integer 32 cA slow_1_delay [31:0] $end
$var integer 32 dA slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area1_io_pad[17] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 X" ANALOG_EN $end
$var wire 1 ~" ANALOG_POL $end
$var wire 1 F# ANALOG_SEL $end
$var wire 3 eA DM [2:0] $end
$var wire 1 "% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 H% HLD_H_N $end
$var wire 1 n% HLD_OVR $end
$var wire 1 6& IB_MODE_SEL $end
$var wire 1 \& INP_DIS $end
$var wire 1 $' OE_N $end
$var wire 1 J' OUT $end
$var wire 1 2" PAD $end
$var wire 1 j PAD_A_ESD_0_H $end
$var wire 1 fA PAD_A_ESD_1_H $end
$var wire 1 gA PAD_A_NOESD_H $end
$var wire 1 p' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 8( VTRIP_SEL $end
$var wire 1 |/ TIE_LO_ESD $end
$var wire 1 hA TIE_HI_ESD $end
$var wire 1 iA IN_H $end
$var wire 1 D0 IN $end
$var wire 1 |/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 jA event_error_vswitch5 $end
$var event 1 kA event_error_vswitch4 $end
$var event 1 lA event_error_vswitch3 $end
$var event 1 mA event_error_vswitch2 $end
$var event 1 nA event_error_vswitch1 $end
$var event 1 oA event_error_vddio_q2 $end
$var event 1 pA event_error_vddio_q1 $end
$var event 1 qA event_error_vdda_vddioq_vswitch2 $end
$var event 1 rA event_error_vdda3 $end
$var event 1 sA event_error_vdda2 $end
$var event 1 tA event_error_vdda $end
$var event 1 uA event_error_supply_good $end
$var event 1 vA event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 X" ANALOG_EN $end
$var wire 1 ~" ANALOG_POL $end
$var wire 1 F# ANALOG_SEL $end
$var wire 3 wA DM [2:0] $end
$var wire 1 "% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 H% HLD_H_N $end
$var wire 1 n% HLD_OVR $end
$var wire 1 6& IB_MODE_SEL $end
$var wire 1 \& INP_DIS $end
$var wire 1 $' OE_N $end
$var wire 1 J' OUT $end
$var wire 1 2" PAD $end
$var wire 1 j PAD_A_ESD_0_H $end
$var wire 1 fA PAD_A_ESD_1_H $end
$var wire 1 gA PAD_A_NOESD_H $end
$var wire 1 p' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 8( VTRIP_SEL $end
$var wire 3 xA dm_buf [2:0] $end
$var wire 1 yA error_enable_vddio $end
$var wire 1 zA error_supply_good $end
$var wire 1 {A error_vdda $end
$var wire 1 |A error_vdda2 $end
$var wire 1 }A error_vdda3 $end
$var wire 1 ~A error_vdda_vddioq_vswitch2 $end
$var wire 1 !B error_vddio_q1 $end
$var wire 1 "B error_vddio_q2 $end
$var wire 1 #B error_vswitch1 $end
$var wire 1 $B error_vswitch2 $end
$var wire 1 %B error_vswitch3 $end
$var wire 1 &B error_vswitch4 $end
$var wire 1 'B error_vswitch5 $end
$var wire 1 (B functional_mode_amux $end
$var wire 1 )B hld_h_n_buf $end
$var wire 1 *B hld_ovr_buf $end
$var wire 1 +B ib_mode_sel_buf $end
$var wire 1 ,B inp_dis_buf $end
$var wire 1 -B invalid_controls_amux $end
$var wire 1 .B oe_n_buf $end
$var wire 1 /B out_buf $end
$var wire 1 0B pad_tristate $end
$var wire 1 1B pwr_good_active_mode $end
$var wire 1 2B pwr_good_active_mode_vdda $end
$var wire 1 3B pwr_good_amux $end
$var wire 1 4B pwr_good_analog_en_vdda $end
$var wire 1 5B pwr_good_analog_en_vddio_q $end
$var wire 1 6B pwr_good_analog_en_vswitch $end
$var wire 1 7B pwr_good_hold_mode $end
$var wire 1 8B pwr_good_hold_mode_vdda $end
$var wire 1 9B pwr_good_hold_ovr_mode $end
$var wire 1 :B pwr_good_inpbuff_hv $end
$var wire 1 ;B pwr_good_inpbuff_lv $end
$var wire 1 <B pwr_good_output_driver $end
$var wire 1 =B slow_buf $end
$var wire 1 >B vtrip_sel_buf $end
$var wire 1 ?B x_on_analog_en_vdda $end
$var wire 1 @B x_on_analog_en_vddio_q $end
$var wire 1 AB x_on_analog_en_vswitch $end
$var wire 1 BB x_on_in_hv $end
$var wire 1 CB x_on_in_lv $end
$var wire 1 DB x_on_pad $end
$var wire 1 EB zero_on_analog_en_vdda $end
$var wire 1 FB zero_on_analog_en_vddio_q $end
$var wire 1 GB zero_on_analog_en_vswitch $end
$var wire 1 HB pwr_good_amux_vccd $end
$var wire 1 IB enable_pad_vssio_q $end
$var wire 1 JB enable_pad_vddio_q $end
$var wire 1 KB enable_pad_amuxbus_b $end
$var wire 1 LB enable_pad_amuxbus_a $end
$var wire 1 MB disable_inp_buff_lv $end
$var wire 1 NB disable_inp_buff $end
$var wire 3 OB amux_select [2:0] $end
$var wire 1 |/ TIE_LO_ESD $end
$var wire 1 hA TIE_HI_ESD $end
$var wire 1 iA IN_H $end
$var wire 1 D0 IN $end
$var wire 1 |/ ENABLE_INP_H $end
$var reg 1 PB analog_en_final $end
$var reg 1 QB analog_en_vdda $end
$var reg 1 RB analog_en_vddio_q $end
$var reg 1 SB analog_en_vswitch $end
$var reg 1 TB dis_err_msgs $end
$var reg 3 UB dm_final [2:0] $end
$var reg 1 VB hld_ovr_final $end
$var reg 1 WB ib_mode_sel_final $end
$var reg 1 XB inp_dis_final $end
$var reg 1 YB notifier_dm $end
$var reg 1 ZB notifier_enable_h $end
$var reg 1 [B notifier_hld_ovr $end
$var reg 1 \B notifier_ib_mode_sel $end
$var reg 1 ]B notifier_inp_dis $end
$var reg 1 ^B notifier_oe_n $end
$var reg 1 _B notifier_out $end
$var reg 1 `B notifier_slow $end
$var reg 1 aB notifier_vtrip_sel $end
$var reg 1 bB oe_n_final $end
$var reg 1 cB out_final $end
$var reg 1 dB slow_final $end
$var reg 1 eB vtrip_sel_final $end
$var integer 32 fB msg_count_pad [31:0] $end
$var integer 32 gB msg_count_pad1 [31:0] $end
$var integer 32 hB msg_count_pad10 [31:0] $end
$var integer 32 iB msg_count_pad11 [31:0] $end
$var integer 32 jB msg_count_pad12 [31:0] $end
$var integer 32 kB msg_count_pad2 [31:0] $end
$var integer 32 lB msg_count_pad3 [31:0] $end
$var integer 32 mB msg_count_pad4 [31:0] $end
$var integer 32 nB msg_count_pad5 [31:0] $end
$var integer 32 oB msg_count_pad6 [31:0] $end
$var integer 32 pB msg_count_pad7 [31:0] $end
$var integer 32 qB msg_count_pad8 [31:0] $end
$var integer 32 rB msg_count_pad9 [31:0] $end
$var integer 32 sB slow_0_delay [31:0] $end
$var integer 32 tB slow_1_delay [31:0] $end
$var integer 32 uB slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area1_io_pad[1] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 [" ANALOG_EN $end
$var wire 1 ## ANALOG_POL $end
$var wire 1 I# ANALOG_SEL $end
$var wire 3 vB DM [2:0] $end
$var wire 1 %% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 K% HLD_H_N $end
$var wire 1 q% HLD_OVR $end
$var wire 1 9& IB_MODE_SEL $end
$var wire 1 _& INP_DIS $end
$var wire 1 '' OE_N $end
$var wire 1 M' OUT $end
$var wire 1 5" PAD $end
$var wire 1 2. PAD_A_ESD_0_H $end
$var wire 1 wB PAD_A_ESD_1_H $end
$var wire 1 xB PAD_A_NOESD_H $end
$var wire 1 s' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 ;( VTRIP_SEL $end
$var wire 1 y/ TIE_LO_ESD $end
$var wire 1 yB TIE_HI_ESD $end
$var wire 1 zB IN_H $end
$var wire 1 A0 IN $end
$var wire 1 y/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 {B event_error_vswitch5 $end
$var event 1 |B event_error_vswitch4 $end
$var event 1 }B event_error_vswitch3 $end
$var event 1 ~B event_error_vswitch2 $end
$var event 1 !C event_error_vswitch1 $end
$var event 1 "C event_error_vddio_q2 $end
$var event 1 #C event_error_vddio_q1 $end
$var event 1 $C event_error_vdda_vddioq_vswitch2 $end
$var event 1 %C event_error_vdda3 $end
$var event 1 &C event_error_vdda2 $end
$var event 1 'C event_error_vdda $end
$var event 1 (C event_error_supply_good $end
$var event 1 )C event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 [" ANALOG_EN $end
$var wire 1 ## ANALOG_POL $end
$var wire 1 I# ANALOG_SEL $end
$var wire 3 *C DM [2:0] $end
$var wire 1 %% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 K% HLD_H_N $end
$var wire 1 q% HLD_OVR $end
$var wire 1 9& IB_MODE_SEL $end
$var wire 1 _& INP_DIS $end
$var wire 1 '' OE_N $end
$var wire 1 M' OUT $end
$var wire 1 5" PAD $end
$var wire 1 2. PAD_A_ESD_0_H $end
$var wire 1 wB PAD_A_ESD_1_H $end
$var wire 1 xB PAD_A_NOESD_H $end
$var wire 1 s' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 ;( VTRIP_SEL $end
$var wire 3 +C dm_buf [2:0] $end
$var wire 1 ,C error_enable_vddio $end
$var wire 1 -C error_supply_good $end
$var wire 1 .C error_vdda $end
$var wire 1 /C error_vdda2 $end
$var wire 1 0C error_vdda3 $end
$var wire 1 1C error_vdda_vddioq_vswitch2 $end
$var wire 1 2C error_vddio_q1 $end
$var wire 1 3C error_vddio_q2 $end
$var wire 1 4C error_vswitch1 $end
$var wire 1 5C error_vswitch2 $end
$var wire 1 6C error_vswitch3 $end
$var wire 1 7C error_vswitch4 $end
$var wire 1 8C error_vswitch5 $end
$var wire 1 9C functional_mode_amux $end
$var wire 1 :C hld_h_n_buf $end
$var wire 1 ;C hld_ovr_buf $end
$var wire 1 <C ib_mode_sel_buf $end
$var wire 1 =C inp_dis_buf $end
$var wire 1 >C invalid_controls_amux $end
$var wire 1 ?C oe_n_buf $end
$var wire 1 @C out_buf $end
$var wire 1 AC pad_tristate $end
$var wire 1 BC pwr_good_active_mode $end
$var wire 1 CC pwr_good_active_mode_vdda $end
$var wire 1 DC pwr_good_amux $end
$var wire 1 EC pwr_good_analog_en_vdda $end
$var wire 1 FC pwr_good_analog_en_vddio_q $end
$var wire 1 GC pwr_good_analog_en_vswitch $end
$var wire 1 HC pwr_good_hold_mode $end
$var wire 1 IC pwr_good_hold_mode_vdda $end
$var wire 1 JC pwr_good_hold_ovr_mode $end
$var wire 1 KC pwr_good_inpbuff_hv $end
$var wire 1 LC pwr_good_inpbuff_lv $end
$var wire 1 MC pwr_good_output_driver $end
$var wire 1 NC slow_buf $end
$var wire 1 OC vtrip_sel_buf $end
$var wire 1 PC x_on_analog_en_vdda $end
$var wire 1 QC x_on_analog_en_vddio_q $end
$var wire 1 RC x_on_analog_en_vswitch $end
$var wire 1 SC x_on_in_hv $end
$var wire 1 TC x_on_in_lv $end
$var wire 1 UC x_on_pad $end
$var wire 1 VC zero_on_analog_en_vdda $end
$var wire 1 WC zero_on_analog_en_vddio_q $end
$var wire 1 XC zero_on_analog_en_vswitch $end
$var wire 1 YC pwr_good_amux_vccd $end
$var wire 1 ZC enable_pad_vssio_q $end
$var wire 1 [C enable_pad_vddio_q $end
$var wire 1 \C enable_pad_amuxbus_b $end
$var wire 1 ]C enable_pad_amuxbus_a $end
$var wire 1 ^C disable_inp_buff_lv $end
$var wire 1 _C disable_inp_buff $end
$var wire 3 `C amux_select [2:0] $end
$var wire 1 y/ TIE_LO_ESD $end
$var wire 1 yB TIE_HI_ESD $end
$var wire 1 zB IN_H $end
$var wire 1 A0 IN $end
$var wire 1 y/ ENABLE_INP_H $end
$var reg 1 aC analog_en_final $end
$var reg 1 bC analog_en_vdda $end
$var reg 1 cC analog_en_vddio_q $end
$var reg 1 dC analog_en_vswitch $end
$var reg 1 eC dis_err_msgs $end
$var reg 3 fC dm_final [2:0] $end
$var reg 1 gC hld_ovr_final $end
$var reg 1 hC ib_mode_sel_final $end
$var reg 1 iC inp_dis_final $end
$var reg 1 jC notifier_dm $end
$var reg 1 kC notifier_enable_h $end
$var reg 1 lC notifier_hld_ovr $end
$var reg 1 mC notifier_ib_mode_sel $end
$var reg 1 nC notifier_inp_dis $end
$var reg 1 oC notifier_oe_n $end
$var reg 1 pC notifier_out $end
$var reg 1 qC notifier_slow $end
$var reg 1 rC notifier_vtrip_sel $end
$var reg 1 sC oe_n_final $end
$var reg 1 tC out_final $end
$var reg 1 uC slow_final $end
$var reg 1 vC vtrip_sel_final $end
$var integer 32 wC msg_count_pad [31:0] $end
$var integer 32 xC msg_count_pad1 [31:0] $end
$var integer 32 yC msg_count_pad10 [31:0] $end
$var integer 32 zC msg_count_pad11 [31:0] $end
$var integer 32 {C msg_count_pad12 [31:0] $end
$var integer 32 |C msg_count_pad2 [31:0] $end
$var integer 32 }C msg_count_pad3 [31:0] $end
$var integer 32 ~C msg_count_pad4 [31:0] $end
$var integer 32 !D msg_count_pad5 [31:0] $end
$var integer 32 "D msg_count_pad6 [31:0] $end
$var integer 32 #D msg_count_pad7 [31:0] $end
$var integer 32 $D msg_count_pad8 [31:0] $end
$var integer 32 %D msg_count_pad9 [31:0] $end
$var integer 32 &D slow_0_delay [31:0] $end
$var integer 32 'D slow_1_delay [31:0] $end
$var integer 32 (D slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area1_io_pad[2] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 f" ANALOG_EN $end
$var wire 1 .# ANALOG_POL $end
$var wire 1 T# ANALOG_SEL $end
$var wire 3 )D DM [2:0] $end
$var wire 1 0% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 V% HLD_H_N $end
$var wire 1 |% HLD_OVR $end
$var wire 1 D& IB_MODE_SEL $end
$var wire 1 j& INP_DIS $end
$var wire 1 2' OE_N $end
$var wire 1 X' OUT $end
$var wire 1 @" PAD $end
$var wire 1 3. PAD_A_ESD_0_H $end
$var wire 1 *D PAD_A_ESD_1_H $end
$var wire 1 +D PAD_A_NOESD_H $end
$var wire 1 ~' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 F( VTRIP_SEL $end
$var wire 1 n/ TIE_LO_ESD $end
$var wire 1 ,D TIE_HI_ESD $end
$var wire 1 -D IN_H $end
$var wire 1 60 IN $end
$var wire 1 n/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 .D event_error_vswitch5 $end
$var event 1 /D event_error_vswitch4 $end
$var event 1 0D event_error_vswitch3 $end
$var event 1 1D event_error_vswitch2 $end
$var event 1 2D event_error_vswitch1 $end
$var event 1 3D event_error_vddio_q2 $end
$var event 1 4D event_error_vddio_q1 $end
$var event 1 5D event_error_vdda_vddioq_vswitch2 $end
$var event 1 6D event_error_vdda3 $end
$var event 1 7D event_error_vdda2 $end
$var event 1 8D event_error_vdda $end
$var event 1 9D event_error_supply_good $end
$var event 1 :D event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 f" ANALOG_EN $end
$var wire 1 .# ANALOG_POL $end
$var wire 1 T# ANALOG_SEL $end
$var wire 3 ;D DM [2:0] $end
$var wire 1 0% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 V% HLD_H_N $end
$var wire 1 |% HLD_OVR $end
$var wire 1 D& IB_MODE_SEL $end
$var wire 1 j& INP_DIS $end
$var wire 1 2' OE_N $end
$var wire 1 X' OUT $end
$var wire 1 @" PAD $end
$var wire 1 3. PAD_A_ESD_0_H $end
$var wire 1 *D PAD_A_ESD_1_H $end
$var wire 1 +D PAD_A_NOESD_H $end
$var wire 1 ~' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 F( VTRIP_SEL $end
$var wire 3 <D dm_buf [2:0] $end
$var wire 1 =D error_enable_vddio $end
$var wire 1 >D error_supply_good $end
$var wire 1 ?D error_vdda $end
$var wire 1 @D error_vdda2 $end
$var wire 1 AD error_vdda3 $end
$var wire 1 BD error_vdda_vddioq_vswitch2 $end
$var wire 1 CD error_vddio_q1 $end
$var wire 1 DD error_vddio_q2 $end
$var wire 1 ED error_vswitch1 $end
$var wire 1 FD error_vswitch2 $end
$var wire 1 GD error_vswitch3 $end
$var wire 1 HD error_vswitch4 $end
$var wire 1 ID error_vswitch5 $end
$var wire 1 JD functional_mode_amux $end
$var wire 1 KD hld_h_n_buf $end
$var wire 1 LD hld_ovr_buf $end
$var wire 1 MD ib_mode_sel_buf $end
$var wire 1 ND inp_dis_buf $end
$var wire 1 OD invalid_controls_amux $end
$var wire 1 PD oe_n_buf $end
$var wire 1 QD out_buf $end
$var wire 1 RD pad_tristate $end
$var wire 1 SD pwr_good_active_mode $end
$var wire 1 TD pwr_good_active_mode_vdda $end
$var wire 1 UD pwr_good_amux $end
$var wire 1 VD pwr_good_analog_en_vdda $end
$var wire 1 WD pwr_good_analog_en_vddio_q $end
$var wire 1 XD pwr_good_analog_en_vswitch $end
$var wire 1 YD pwr_good_hold_mode $end
$var wire 1 ZD pwr_good_hold_mode_vdda $end
$var wire 1 [D pwr_good_hold_ovr_mode $end
$var wire 1 \D pwr_good_inpbuff_hv $end
$var wire 1 ]D pwr_good_inpbuff_lv $end
$var wire 1 ^D pwr_good_output_driver $end
$var wire 1 _D slow_buf $end
$var wire 1 `D vtrip_sel_buf $end
$var wire 1 aD x_on_analog_en_vdda $end
$var wire 1 bD x_on_analog_en_vddio_q $end
$var wire 1 cD x_on_analog_en_vswitch $end
$var wire 1 dD x_on_in_hv $end
$var wire 1 eD x_on_in_lv $end
$var wire 1 fD x_on_pad $end
$var wire 1 gD zero_on_analog_en_vdda $end
$var wire 1 hD zero_on_analog_en_vddio_q $end
$var wire 1 iD zero_on_analog_en_vswitch $end
$var wire 1 jD pwr_good_amux_vccd $end
$var wire 1 kD enable_pad_vssio_q $end
$var wire 1 lD enable_pad_vddio_q $end
$var wire 1 mD enable_pad_amuxbus_b $end
$var wire 1 nD enable_pad_amuxbus_a $end
$var wire 1 oD disable_inp_buff_lv $end
$var wire 1 pD disable_inp_buff $end
$var wire 3 qD amux_select [2:0] $end
$var wire 1 n/ TIE_LO_ESD $end
$var wire 1 ,D TIE_HI_ESD $end
$var wire 1 -D IN_H $end
$var wire 1 60 IN $end
$var wire 1 n/ ENABLE_INP_H $end
$var reg 1 rD analog_en_final $end
$var reg 1 sD analog_en_vdda $end
$var reg 1 tD analog_en_vddio_q $end
$var reg 1 uD analog_en_vswitch $end
$var reg 1 vD dis_err_msgs $end
$var reg 3 wD dm_final [2:0] $end
$var reg 1 xD hld_ovr_final $end
$var reg 1 yD ib_mode_sel_final $end
$var reg 1 zD inp_dis_final $end
$var reg 1 {D notifier_dm $end
$var reg 1 |D notifier_enable_h $end
$var reg 1 }D notifier_hld_ovr $end
$var reg 1 ~D notifier_ib_mode_sel $end
$var reg 1 !E notifier_inp_dis $end
$var reg 1 "E notifier_oe_n $end
$var reg 1 #E notifier_out $end
$var reg 1 $E notifier_slow $end
$var reg 1 %E notifier_vtrip_sel $end
$var reg 1 &E oe_n_final $end
$var reg 1 'E out_final $end
$var reg 1 (E slow_final $end
$var reg 1 )E vtrip_sel_final $end
$var integer 32 *E msg_count_pad [31:0] $end
$var integer 32 +E msg_count_pad1 [31:0] $end
$var integer 32 ,E msg_count_pad10 [31:0] $end
$var integer 32 -E msg_count_pad11 [31:0] $end
$var integer 32 .E msg_count_pad12 [31:0] $end
$var integer 32 /E msg_count_pad2 [31:0] $end
$var integer 32 0E msg_count_pad3 [31:0] $end
$var integer 32 1E msg_count_pad4 [31:0] $end
$var integer 32 2E msg_count_pad5 [31:0] $end
$var integer 32 3E msg_count_pad6 [31:0] $end
$var integer 32 4E msg_count_pad7 [31:0] $end
$var integer 32 5E msg_count_pad8 [31:0] $end
$var integer 32 6E msg_count_pad9 [31:0] $end
$var integer 32 7E slow_0_delay [31:0] $end
$var integer 32 8E slow_1_delay [31:0] $end
$var integer 32 9E slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area1_io_pad[3] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 o" ANALOG_EN $end
$var wire 1 7# ANALOG_POL $end
$var wire 1 ]# ANALOG_SEL $end
$var wire 3 :E DM [2:0] $end
$var wire 1 9% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 _% HLD_H_N $end
$var wire 1 '& HLD_OVR $end
$var wire 1 M& IB_MODE_SEL $end
$var wire 1 s& INP_DIS $end
$var wire 1 ;' OE_N $end
$var wire 1 a' OUT $end
$var wire 1 I" PAD $end
$var wire 1 4. PAD_A_ESD_0_H $end
$var wire 1 ;E PAD_A_ESD_1_H $end
$var wire 1 <E PAD_A_NOESD_H $end
$var wire 1 )( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 O( VTRIP_SEL $end
$var wire 1 e/ TIE_LO_ESD $end
$var wire 1 =E TIE_HI_ESD $end
$var wire 1 >E IN_H $end
$var wire 1 -0 IN $end
$var wire 1 e/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 ?E event_error_vswitch5 $end
$var event 1 @E event_error_vswitch4 $end
$var event 1 AE event_error_vswitch3 $end
$var event 1 BE event_error_vswitch2 $end
$var event 1 CE event_error_vswitch1 $end
$var event 1 DE event_error_vddio_q2 $end
$var event 1 EE event_error_vddio_q1 $end
$var event 1 FE event_error_vdda_vddioq_vswitch2 $end
$var event 1 GE event_error_vdda3 $end
$var event 1 HE event_error_vdda2 $end
$var event 1 IE event_error_vdda $end
$var event 1 JE event_error_supply_good $end
$var event 1 KE event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 o" ANALOG_EN $end
$var wire 1 7# ANALOG_POL $end
$var wire 1 ]# ANALOG_SEL $end
$var wire 3 LE DM [2:0] $end
$var wire 1 9% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 _% HLD_H_N $end
$var wire 1 '& HLD_OVR $end
$var wire 1 M& IB_MODE_SEL $end
$var wire 1 s& INP_DIS $end
$var wire 1 ;' OE_N $end
$var wire 1 a' OUT $end
$var wire 1 I" PAD $end
$var wire 1 4. PAD_A_ESD_0_H $end
$var wire 1 ;E PAD_A_ESD_1_H $end
$var wire 1 <E PAD_A_NOESD_H $end
$var wire 1 )( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 O( VTRIP_SEL $end
$var wire 3 ME dm_buf [2:0] $end
$var wire 1 NE error_enable_vddio $end
$var wire 1 OE error_supply_good $end
$var wire 1 PE error_vdda $end
$var wire 1 QE error_vdda2 $end
$var wire 1 RE error_vdda3 $end
$var wire 1 SE error_vdda_vddioq_vswitch2 $end
$var wire 1 TE error_vddio_q1 $end
$var wire 1 UE error_vddio_q2 $end
$var wire 1 VE error_vswitch1 $end
$var wire 1 WE error_vswitch2 $end
$var wire 1 XE error_vswitch3 $end
$var wire 1 YE error_vswitch4 $end
$var wire 1 ZE error_vswitch5 $end
$var wire 1 [E functional_mode_amux $end
$var wire 1 \E hld_h_n_buf $end
$var wire 1 ]E hld_ovr_buf $end
$var wire 1 ^E ib_mode_sel_buf $end
$var wire 1 _E inp_dis_buf $end
$var wire 1 `E invalid_controls_amux $end
$var wire 1 aE oe_n_buf $end
$var wire 1 bE out_buf $end
$var wire 1 cE pad_tristate $end
$var wire 1 dE pwr_good_active_mode $end
$var wire 1 eE pwr_good_active_mode_vdda $end
$var wire 1 fE pwr_good_amux $end
$var wire 1 gE pwr_good_analog_en_vdda $end
$var wire 1 hE pwr_good_analog_en_vddio_q $end
$var wire 1 iE pwr_good_analog_en_vswitch $end
$var wire 1 jE pwr_good_hold_mode $end
$var wire 1 kE pwr_good_hold_mode_vdda $end
$var wire 1 lE pwr_good_hold_ovr_mode $end
$var wire 1 mE pwr_good_inpbuff_hv $end
$var wire 1 nE pwr_good_inpbuff_lv $end
$var wire 1 oE pwr_good_output_driver $end
$var wire 1 pE slow_buf $end
$var wire 1 qE vtrip_sel_buf $end
$var wire 1 rE x_on_analog_en_vdda $end
$var wire 1 sE x_on_analog_en_vddio_q $end
$var wire 1 tE x_on_analog_en_vswitch $end
$var wire 1 uE x_on_in_hv $end
$var wire 1 vE x_on_in_lv $end
$var wire 1 wE x_on_pad $end
$var wire 1 xE zero_on_analog_en_vdda $end
$var wire 1 yE zero_on_analog_en_vddio_q $end
$var wire 1 zE zero_on_analog_en_vswitch $end
$var wire 1 {E pwr_good_amux_vccd $end
$var wire 1 |E enable_pad_vssio_q $end
$var wire 1 }E enable_pad_vddio_q $end
$var wire 1 ~E enable_pad_amuxbus_b $end
$var wire 1 !F enable_pad_amuxbus_a $end
$var wire 1 "F disable_inp_buff_lv $end
$var wire 1 #F disable_inp_buff $end
$var wire 3 $F amux_select [2:0] $end
$var wire 1 e/ TIE_LO_ESD $end
$var wire 1 =E TIE_HI_ESD $end
$var wire 1 >E IN_H $end
$var wire 1 -0 IN $end
$var wire 1 e/ ENABLE_INP_H $end
$var reg 1 %F analog_en_final $end
$var reg 1 &F analog_en_vdda $end
$var reg 1 'F analog_en_vddio_q $end
$var reg 1 (F analog_en_vswitch $end
$var reg 1 )F dis_err_msgs $end
$var reg 3 *F dm_final [2:0] $end
$var reg 1 +F hld_ovr_final $end
$var reg 1 ,F ib_mode_sel_final $end
$var reg 1 -F inp_dis_final $end
$var reg 1 .F notifier_dm $end
$var reg 1 /F notifier_enable_h $end
$var reg 1 0F notifier_hld_ovr $end
$var reg 1 1F notifier_ib_mode_sel $end
$var reg 1 2F notifier_inp_dis $end
$var reg 1 3F notifier_oe_n $end
$var reg 1 4F notifier_out $end
$var reg 1 5F notifier_slow $end
$var reg 1 6F notifier_vtrip_sel $end
$var reg 1 7F oe_n_final $end
$var reg 1 8F out_final $end
$var reg 1 9F slow_final $end
$var reg 1 :F vtrip_sel_final $end
$var integer 32 ;F msg_count_pad [31:0] $end
$var integer 32 <F msg_count_pad1 [31:0] $end
$var integer 32 =F msg_count_pad10 [31:0] $end
$var integer 32 >F msg_count_pad11 [31:0] $end
$var integer 32 ?F msg_count_pad12 [31:0] $end
$var integer 32 @F msg_count_pad2 [31:0] $end
$var integer 32 AF msg_count_pad3 [31:0] $end
$var integer 32 BF msg_count_pad4 [31:0] $end
$var integer 32 CF msg_count_pad5 [31:0] $end
$var integer 32 DF msg_count_pad6 [31:0] $end
$var integer 32 EF msg_count_pad7 [31:0] $end
$var integer 32 FF msg_count_pad8 [31:0] $end
$var integer 32 GF msg_count_pad9 [31:0] $end
$var integer 32 HF slow_0_delay [31:0] $end
$var integer 32 IF slow_1_delay [31:0] $end
$var integer 32 JF slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area1_io_pad[4] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 p" ANALOG_EN $end
$var wire 1 8# ANALOG_POL $end
$var wire 1 ^# ANALOG_SEL $end
$var wire 3 KF DM [2:0] $end
$var wire 1 :% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 `% HLD_H_N $end
$var wire 1 (& HLD_OVR $end
$var wire 1 N& IB_MODE_SEL $end
$var wire 1 t& INP_DIS $end
$var wire 1 <' OE_N $end
$var wire 1 b' OUT $end
$var wire 1 J" PAD $end
$var wire 1 5. PAD_A_ESD_0_H $end
$var wire 1 LF PAD_A_ESD_1_H $end
$var wire 1 MF PAD_A_NOESD_H $end
$var wire 1 *( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 P( VTRIP_SEL $end
$var wire 1 d/ TIE_LO_ESD $end
$var wire 1 NF TIE_HI_ESD $end
$var wire 1 OF IN_H $end
$var wire 1 ,0 IN $end
$var wire 1 d/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 PF event_error_vswitch5 $end
$var event 1 QF event_error_vswitch4 $end
$var event 1 RF event_error_vswitch3 $end
$var event 1 SF event_error_vswitch2 $end
$var event 1 TF event_error_vswitch1 $end
$var event 1 UF event_error_vddio_q2 $end
$var event 1 VF event_error_vddio_q1 $end
$var event 1 WF event_error_vdda_vddioq_vswitch2 $end
$var event 1 XF event_error_vdda3 $end
$var event 1 YF event_error_vdda2 $end
$var event 1 ZF event_error_vdda $end
$var event 1 [F event_error_supply_good $end
$var event 1 \F event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 p" ANALOG_EN $end
$var wire 1 8# ANALOG_POL $end
$var wire 1 ^# ANALOG_SEL $end
$var wire 3 ]F DM [2:0] $end
$var wire 1 :% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 `% HLD_H_N $end
$var wire 1 (& HLD_OVR $end
$var wire 1 N& IB_MODE_SEL $end
$var wire 1 t& INP_DIS $end
$var wire 1 <' OE_N $end
$var wire 1 b' OUT $end
$var wire 1 J" PAD $end
$var wire 1 5. PAD_A_ESD_0_H $end
$var wire 1 LF PAD_A_ESD_1_H $end
$var wire 1 MF PAD_A_NOESD_H $end
$var wire 1 *( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 P( VTRIP_SEL $end
$var wire 3 ^F dm_buf [2:0] $end
$var wire 1 _F error_enable_vddio $end
$var wire 1 `F error_supply_good $end
$var wire 1 aF error_vdda $end
$var wire 1 bF error_vdda2 $end
$var wire 1 cF error_vdda3 $end
$var wire 1 dF error_vdda_vddioq_vswitch2 $end
$var wire 1 eF error_vddio_q1 $end
$var wire 1 fF error_vddio_q2 $end
$var wire 1 gF error_vswitch1 $end
$var wire 1 hF error_vswitch2 $end
$var wire 1 iF error_vswitch3 $end
$var wire 1 jF error_vswitch4 $end
$var wire 1 kF error_vswitch5 $end
$var wire 1 lF functional_mode_amux $end
$var wire 1 mF hld_h_n_buf $end
$var wire 1 nF hld_ovr_buf $end
$var wire 1 oF ib_mode_sel_buf $end
$var wire 1 pF inp_dis_buf $end
$var wire 1 qF invalid_controls_amux $end
$var wire 1 rF oe_n_buf $end
$var wire 1 sF out_buf $end
$var wire 1 tF pad_tristate $end
$var wire 1 uF pwr_good_active_mode $end
$var wire 1 vF pwr_good_active_mode_vdda $end
$var wire 1 wF pwr_good_amux $end
$var wire 1 xF pwr_good_analog_en_vdda $end
$var wire 1 yF pwr_good_analog_en_vddio_q $end
$var wire 1 zF pwr_good_analog_en_vswitch $end
$var wire 1 {F pwr_good_hold_mode $end
$var wire 1 |F pwr_good_hold_mode_vdda $end
$var wire 1 }F pwr_good_hold_ovr_mode $end
$var wire 1 ~F pwr_good_inpbuff_hv $end
$var wire 1 !G pwr_good_inpbuff_lv $end
$var wire 1 "G pwr_good_output_driver $end
$var wire 1 #G slow_buf $end
$var wire 1 $G vtrip_sel_buf $end
$var wire 1 %G x_on_analog_en_vdda $end
$var wire 1 &G x_on_analog_en_vddio_q $end
$var wire 1 'G x_on_analog_en_vswitch $end
$var wire 1 (G x_on_in_hv $end
$var wire 1 )G x_on_in_lv $end
$var wire 1 *G x_on_pad $end
$var wire 1 +G zero_on_analog_en_vdda $end
$var wire 1 ,G zero_on_analog_en_vddio_q $end
$var wire 1 -G zero_on_analog_en_vswitch $end
$var wire 1 .G pwr_good_amux_vccd $end
$var wire 1 /G enable_pad_vssio_q $end
$var wire 1 0G enable_pad_vddio_q $end
$var wire 1 1G enable_pad_amuxbus_b $end
$var wire 1 2G enable_pad_amuxbus_a $end
$var wire 1 3G disable_inp_buff_lv $end
$var wire 1 4G disable_inp_buff $end
$var wire 3 5G amux_select [2:0] $end
$var wire 1 d/ TIE_LO_ESD $end
$var wire 1 NF TIE_HI_ESD $end
$var wire 1 OF IN_H $end
$var wire 1 ,0 IN $end
$var wire 1 d/ ENABLE_INP_H $end
$var reg 1 6G analog_en_final $end
$var reg 1 7G analog_en_vdda $end
$var reg 1 8G analog_en_vddio_q $end
$var reg 1 9G analog_en_vswitch $end
$var reg 1 :G dis_err_msgs $end
$var reg 3 ;G dm_final [2:0] $end
$var reg 1 <G hld_ovr_final $end
$var reg 1 =G ib_mode_sel_final $end
$var reg 1 >G inp_dis_final $end
$var reg 1 ?G notifier_dm $end
$var reg 1 @G notifier_enable_h $end
$var reg 1 AG notifier_hld_ovr $end
$var reg 1 BG notifier_ib_mode_sel $end
$var reg 1 CG notifier_inp_dis $end
$var reg 1 DG notifier_oe_n $end
$var reg 1 EG notifier_out $end
$var reg 1 FG notifier_slow $end
$var reg 1 GG notifier_vtrip_sel $end
$var reg 1 HG oe_n_final $end
$var reg 1 IG out_final $end
$var reg 1 JG slow_final $end
$var reg 1 KG vtrip_sel_final $end
$var integer 32 LG msg_count_pad [31:0] $end
$var integer 32 MG msg_count_pad1 [31:0] $end
$var integer 32 NG msg_count_pad10 [31:0] $end
$var integer 32 OG msg_count_pad11 [31:0] $end
$var integer 32 PG msg_count_pad12 [31:0] $end
$var integer 32 QG msg_count_pad2 [31:0] $end
$var integer 32 RG msg_count_pad3 [31:0] $end
$var integer 32 SG msg_count_pad4 [31:0] $end
$var integer 32 TG msg_count_pad5 [31:0] $end
$var integer 32 UG msg_count_pad6 [31:0] $end
$var integer 32 VG msg_count_pad7 [31:0] $end
$var integer 32 WG msg_count_pad8 [31:0] $end
$var integer 32 XG msg_count_pad9 [31:0] $end
$var integer 32 YG slow_0_delay [31:0] $end
$var integer 32 ZG slow_1_delay [31:0] $end
$var integer 32 [G slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area1_io_pad[5] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 q" ANALOG_EN $end
$var wire 1 9# ANALOG_POL $end
$var wire 1 _# ANALOG_SEL $end
$var wire 3 \G DM [2:0] $end
$var wire 1 ;% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 a% HLD_H_N $end
$var wire 1 )& HLD_OVR $end
$var wire 1 O& IB_MODE_SEL $end
$var wire 1 u& INP_DIS $end
$var wire 1 =' OE_N $end
$var wire 1 c' OUT $end
$var wire 1 K" PAD $end
$var wire 1 6. PAD_A_ESD_0_H $end
$var wire 1 ]G PAD_A_ESD_1_H $end
$var wire 1 ^G PAD_A_NOESD_H $end
$var wire 1 +( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 Q( VTRIP_SEL $end
$var wire 1 c/ TIE_LO_ESD $end
$var wire 1 _G TIE_HI_ESD $end
$var wire 1 `G IN_H $end
$var wire 1 +0 IN $end
$var wire 1 c/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 aG event_error_vswitch5 $end
$var event 1 bG event_error_vswitch4 $end
$var event 1 cG event_error_vswitch3 $end
$var event 1 dG event_error_vswitch2 $end
$var event 1 eG event_error_vswitch1 $end
$var event 1 fG event_error_vddio_q2 $end
$var event 1 gG event_error_vddio_q1 $end
$var event 1 hG event_error_vdda_vddioq_vswitch2 $end
$var event 1 iG event_error_vdda3 $end
$var event 1 jG event_error_vdda2 $end
$var event 1 kG event_error_vdda $end
$var event 1 lG event_error_supply_good $end
$var event 1 mG event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 q" ANALOG_EN $end
$var wire 1 9# ANALOG_POL $end
$var wire 1 _# ANALOG_SEL $end
$var wire 3 nG DM [2:0] $end
$var wire 1 ;% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 a% HLD_H_N $end
$var wire 1 )& HLD_OVR $end
$var wire 1 O& IB_MODE_SEL $end
$var wire 1 u& INP_DIS $end
$var wire 1 =' OE_N $end
$var wire 1 c' OUT $end
$var wire 1 K" PAD $end
$var wire 1 6. PAD_A_ESD_0_H $end
$var wire 1 ]G PAD_A_ESD_1_H $end
$var wire 1 ^G PAD_A_NOESD_H $end
$var wire 1 +( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 Q( VTRIP_SEL $end
$var wire 3 oG dm_buf [2:0] $end
$var wire 1 pG error_enable_vddio $end
$var wire 1 qG error_supply_good $end
$var wire 1 rG error_vdda $end
$var wire 1 sG error_vdda2 $end
$var wire 1 tG error_vdda3 $end
$var wire 1 uG error_vdda_vddioq_vswitch2 $end
$var wire 1 vG error_vddio_q1 $end
$var wire 1 wG error_vddio_q2 $end
$var wire 1 xG error_vswitch1 $end
$var wire 1 yG error_vswitch2 $end
$var wire 1 zG error_vswitch3 $end
$var wire 1 {G error_vswitch4 $end
$var wire 1 |G error_vswitch5 $end
$var wire 1 }G functional_mode_amux $end
$var wire 1 ~G hld_h_n_buf $end
$var wire 1 !H hld_ovr_buf $end
$var wire 1 "H ib_mode_sel_buf $end
$var wire 1 #H inp_dis_buf $end
$var wire 1 $H invalid_controls_amux $end
$var wire 1 %H oe_n_buf $end
$var wire 1 &H out_buf $end
$var wire 1 'H pad_tristate $end
$var wire 1 (H pwr_good_active_mode $end
$var wire 1 )H pwr_good_active_mode_vdda $end
$var wire 1 *H pwr_good_amux $end
$var wire 1 +H pwr_good_analog_en_vdda $end
$var wire 1 ,H pwr_good_analog_en_vddio_q $end
$var wire 1 -H pwr_good_analog_en_vswitch $end
$var wire 1 .H pwr_good_hold_mode $end
$var wire 1 /H pwr_good_hold_mode_vdda $end
$var wire 1 0H pwr_good_hold_ovr_mode $end
$var wire 1 1H pwr_good_inpbuff_hv $end
$var wire 1 2H pwr_good_inpbuff_lv $end
$var wire 1 3H pwr_good_output_driver $end
$var wire 1 4H slow_buf $end
$var wire 1 5H vtrip_sel_buf $end
$var wire 1 6H x_on_analog_en_vdda $end
$var wire 1 7H x_on_analog_en_vddio_q $end
$var wire 1 8H x_on_analog_en_vswitch $end
$var wire 1 9H x_on_in_hv $end
$var wire 1 :H x_on_in_lv $end
$var wire 1 ;H x_on_pad $end
$var wire 1 <H zero_on_analog_en_vdda $end
$var wire 1 =H zero_on_analog_en_vddio_q $end
$var wire 1 >H zero_on_analog_en_vswitch $end
$var wire 1 ?H pwr_good_amux_vccd $end
$var wire 1 @H enable_pad_vssio_q $end
$var wire 1 AH enable_pad_vddio_q $end
$var wire 1 BH enable_pad_amuxbus_b $end
$var wire 1 CH enable_pad_amuxbus_a $end
$var wire 1 DH disable_inp_buff_lv $end
$var wire 1 EH disable_inp_buff $end
$var wire 3 FH amux_select [2:0] $end
$var wire 1 c/ TIE_LO_ESD $end
$var wire 1 _G TIE_HI_ESD $end
$var wire 1 `G IN_H $end
$var wire 1 +0 IN $end
$var wire 1 c/ ENABLE_INP_H $end
$var reg 1 GH analog_en_final $end
$var reg 1 HH analog_en_vdda $end
$var reg 1 IH analog_en_vddio_q $end
$var reg 1 JH analog_en_vswitch $end
$var reg 1 KH dis_err_msgs $end
$var reg 3 LH dm_final [2:0] $end
$var reg 1 MH hld_ovr_final $end
$var reg 1 NH ib_mode_sel_final $end
$var reg 1 OH inp_dis_final $end
$var reg 1 PH notifier_dm $end
$var reg 1 QH notifier_enable_h $end
$var reg 1 RH notifier_hld_ovr $end
$var reg 1 SH notifier_ib_mode_sel $end
$var reg 1 TH notifier_inp_dis $end
$var reg 1 UH notifier_oe_n $end
$var reg 1 VH notifier_out $end
$var reg 1 WH notifier_slow $end
$var reg 1 XH notifier_vtrip_sel $end
$var reg 1 YH oe_n_final $end
$var reg 1 ZH out_final $end
$var reg 1 [H slow_final $end
$var reg 1 \H vtrip_sel_final $end
$var integer 32 ]H msg_count_pad [31:0] $end
$var integer 32 ^H msg_count_pad1 [31:0] $end
$var integer 32 _H msg_count_pad10 [31:0] $end
$var integer 32 `H msg_count_pad11 [31:0] $end
$var integer 32 aH msg_count_pad12 [31:0] $end
$var integer 32 bH msg_count_pad2 [31:0] $end
$var integer 32 cH msg_count_pad3 [31:0] $end
$var integer 32 dH msg_count_pad4 [31:0] $end
$var integer 32 eH msg_count_pad5 [31:0] $end
$var integer 32 fH msg_count_pad6 [31:0] $end
$var integer 32 gH msg_count_pad7 [31:0] $end
$var integer 32 hH msg_count_pad8 [31:0] $end
$var integer 32 iH msg_count_pad9 [31:0] $end
$var integer 32 jH slow_0_delay [31:0] $end
$var integer 32 kH slow_1_delay [31:0] $end
$var integer 32 lH slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area1_io_pad[6] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 r" ANALOG_EN $end
$var wire 1 :# ANALOG_POL $end
$var wire 1 `# ANALOG_SEL $end
$var wire 3 mH DM [2:0] $end
$var wire 1 <% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 b% HLD_H_N $end
$var wire 1 *& HLD_OVR $end
$var wire 1 P& IB_MODE_SEL $end
$var wire 1 v& INP_DIS $end
$var wire 1 >' OE_N $end
$var wire 1 d' OUT $end
$var wire 1 L" PAD $end
$var wire 1 7. PAD_A_ESD_0_H $end
$var wire 1 nH PAD_A_ESD_1_H $end
$var wire 1 oH PAD_A_NOESD_H $end
$var wire 1 ,( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 R( VTRIP_SEL $end
$var wire 1 b/ TIE_LO_ESD $end
$var wire 1 pH TIE_HI_ESD $end
$var wire 1 qH IN_H $end
$var wire 1 *0 IN $end
$var wire 1 b/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 rH event_error_vswitch5 $end
$var event 1 sH event_error_vswitch4 $end
$var event 1 tH event_error_vswitch3 $end
$var event 1 uH event_error_vswitch2 $end
$var event 1 vH event_error_vswitch1 $end
$var event 1 wH event_error_vddio_q2 $end
$var event 1 xH event_error_vddio_q1 $end
$var event 1 yH event_error_vdda_vddioq_vswitch2 $end
$var event 1 zH event_error_vdda3 $end
$var event 1 {H event_error_vdda2 $end
$var event 1 |H event_error_vdda $end
$var event 1 }H event_error_supply_good $end
$var event 1 ~H event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 r" ANALOG_EN $end
$var wire 1 :# ANALOG_POL $end
$var wire 1 `# ANALOG_SEL $end
$var wire 3 !I DM [2:0] $end
$var wire 1 <% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 b% HLD_H_N $end
$var wire 1 *& HLD_OVR $end
$var wire 1 P& IB_MODE_SEL $end
$var wire 1 v& INP_DIS $end
$var wire 1 >' OE_N $end
$var wire 1 d' OUT $end
$var wire 1 L" PAD $end
$var wire 1 7. PAD_A_ESD_0_H $end
$var wire 1 nH PAD_A_ESD_1_H $end
$var wire 1 oH PAD_A_NOESD_H $end
$var wire 1 ,( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 R( VTRIP_SEL $end
$var wire 3 "I dm_buf [2:0] $end
$var wire 1 #I error_enable_vddio $end
$var wire 1 $I error_supply_good $end
$var wire 1 %I error_vdda $end
$var wire 1 &I error_vdda2 $end
$var wire 1 'I error_vdda3 $end
$var wire 1 (I error_vdda_vddioq_vswitch2 $end
$var wire 1 )I error_vddio_q1 $end
$var wire 1 *I error_vddio_q2 $end
$var wire 1 +I error_vswitch1 $end
$var wire 1 ,I error_vswitch2 $end
$var wire 1 -I error_vswitch3 $end
$var wire 1 .I error_vswitch4 $end
$var wire 1 /I error_vswitch5 $end
$var wire 1 0I functional_mode_amux $end
$var wire 1 1I hld_h_n_buf $end
$var wire 1 2I hld_ovr_buf $end
$var wire 1 3I ib_mode_sel_buf $end
$var wire 1 4I inp_dis_buf $end
$var wire 1 5I invalid_controls_amux $end
$var wire 1 6I oe_n_buf $end
$var wire 1 7I out_buf $end
$var wire 1 8I pad_tristate $end
$var wire 1 9I pwr_good_active_mode $end
$var wire 1 :I pwr_good_active_mode_vdda $end
$var wire 1 ;I pwr_good_amux $end
$var wire 1 <I pwr_good_analog_en_vdda $end
$var wire 1 =I pwr_good_analog_en_vddio_q $end
$var wire 1 >I pwr_good_analog_en_vswitch $end
$var wire 1 ?I pwr_good_hold_mode $end
$var wire 1 @I pwr_good_hold_mode_vdda $end
$var wire 1 AI pwr_good_hold_ovr_mode $end
$var wire 1 BI pwr_good_inpbuff_hv $end
$var wire 1 CI pwr_good_inpbuff_lv $end
$var wire 1 DI pwr_good_output_driver $end
$var wire 1 EI slow_buf $end
$var wire 1 FI vtrip_sel_buf $end
$var wire 1 GI x_on_analog_en_vdda $end
$var wire 1 HI x_on_analog_en_vddio_q $end
$var wire 1 II x_on_analog_en_vswitch $end
$var wire 1 JI x_on_in_hv $end
$var wire 1 KI x_on_in_lv $end
$var wire 1 LI x_on_pad $end
$var wire 1 MI zero_on_analog_en_vdda $end
$var wire 1 NI zero_on_analog_en_vddio_q $end
$var wire 1 OI zero_on_analog_en_vswitch $end
$var wire 1 PI pwr_good_amux_vccd $end
$var wire 1 QI enable_pad_vssio_q $end
$var wire 1 RI enable_pad_vddio_q $end
$var wire 1 SI enable_pad_amuxbus_b $end
$var wire 1 TI enable_pad_amuxbus_a $end
$var wire 1 UI disable_inp_buff_lv $end
$var wire 1 VI disable_inp_buff $end
$var wire 3 WI amux_select [2:0] $end
$var wire 1 b/ TIE_LO_ESD $end
$var wire 1 pH TIE_HI_ESD $end
$var wire 1 qH IN_H $end
$var wire 1 *0 IN $end
$var wire 1 b/ ENABLE_INP_H $end
$var reg 1 XI analog_en_final $end
$var reg 1 YI analog_en_vdda $end
$var reg 1 ZI analog_en_vddio_q $end
$var reg 1 [I analog_en_vswitch $end
$var reg 1 \I dis_err_msgs $end
$var reg 3 ]I dm_final [2:0] $end
$var reg 1 ^I hld_ovr_final $end
$var reg 1 _I ib_mode_sel_final $end
$var reg 1 `I inp_dis_final $end
$var reg 1 aI notifier_dm $end
$var reg 1 bI notifier_enable_h $end
$var reg 1 cI notifier_hld_ovr $end
$var reg 1 dI notifier_ib_mode_sel $end
$var reg 1 eI notifier_inp_dis $end
$var reg 1 fI notifier_oe_n $end
$var reg 1 gI notifier_out $end
$var reg 1 hI notifier_slow $end
$var reg 1 iI notifier_vtrip_sel $end
$var reg 1 jI oe_n_final $end
$var reg 1 kI out_final $end
$var reg 1 lI slow_final $end
$var reg 1 mI vtrip_sel_final $end
$var integer 32 nI msg_count_pad [31:0] $end
$var integer 32 oI msg_count_pad1 [31:0] $end
$var integer 32 pI msg_count_pad10 [31:0] $end
$var integer 32 qI msg_count_pad11 [31:0] $end
$var integer 32 rI msg_count_pad12 [31:0] $end
$var integer 32 sI msg_count_pad2 [31:0] $end
$var integer 32 tI msg_count_pad3 [31:0] $end
$var integer 32 uI msg_count_pad4 [31:0] $end
$var integer 32 vI msg_count_pad5 [31:0] $end
$var integer 32 wI msg_count_pad6 [31:0] $end
$var integer 32 xI msg_count_pad7 [31:0] $end
$var integer 32 yI msg_count_pad8 [31:0] $end
$var integer 32 zI msg_count_pad9 [31:0] $end
$var integer 32 {I slow_0_delay [31:0] $end
$var integer 32 |I slow_1_delay [31:0] $end
$var integer 32 }I slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area1_io_pad[7] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 s" ANALOG_EN $end
$var wire 1 ;# ANALOG_POL $end
$var wire 1 a# ANALOG_SEL $end
$var wire 3 ~I DM [2:0] $end
$var wire 1 =% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 c% HLD_H_N $end
$var wire 1 +& HLD_OVR $end
$var wire 1 Q& IB_MODE_SEL $end
$var wire 1 w& INP_DIS $end
$var wire 1 ?' OE_N $end
$var wire 1 e' OUT $end
$var wire 1 M" PAD $end
$var wire 1 i PAD_A_ESD_0_H $end
$var wire 1 !J PAD_A_ESD_1_H $end
$var wire 1 "J PAD_A_NOESD_H $end
$var wire 1 -( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 S( VTRIP_SEL $end
$var wire 1 a/ TIE_LO_ESD $end
$var wire 1 #J TIE_HI_ESD $end
$var wire 1 $J IN_H $end
$var wire 1 )0 IN $end
$var wire 1 a/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 %J event_error_vswitch5 $end
$var event 1 &J event_error_vswitch4 $end
$var event 1 'J event_error_vswitch3 $end
$var event 1 (J event_error_vswitch2 $end
$var event 1 )J event_error_vswitch1 $end
$var event 1 *J event_error_vddio_q2 $end
$var event 1 +J event_error_vddio_q1 $end
$var event 1 ,J event_error_vdda_vddioq_vswitch2 $end
$var event 1 -J event_error_vdda3 $end
$var event 1 .J event_error_vdda2 $end
$var event 1 /J event_error_vdda $end
$var event 1 0J event_error_supply_good $end
$var event 1 1J event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 s" ANALOG_EN $end
$var wire 1 ;# ANALOG_POL $end
$var wire 1 a# ANALOG_SEL $end
$var wire 3 2J DM [2:0] $end
$var wire 1 =% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 c% HLD_H_N $end
$var wire 1 +& HLD_OVR $end
$var wire 1 Q& IB_MODE_SEL $end
$var wire 1 w& INP_DIS $end
$var wire 1 ?' OE_N $end
$var wire 1 e' OUT $end
$var wire 1 M" PAD $end
$var wire 1 i PAD_A_ESD_0_H $end
$var wire 1 !J PAD_A_ESD_1_H $end
$var wire 1 "J PAD_A_NOESD_H $end
$var wire 1 -( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 S( VTRIP_SEL $end
$var wire 3 3J dm_buf [2:0] $end
$var wire 1 4J error_enable_vddio $end
$var wire 1 5J error_supply_good $end
$var wire 1 6J error_vdda $end
$var wire 1 7J error_vdda2 $end
$var wire 1 8J error_vdda3 $end
$var wire 1 9J error_vdda_vddioq_vswitch2 $end
$var wire 1 :J error_vddio_q1 $end
$var wire 1 ;J error_vddio_q2 $end
$var wire 1 <J error_vswitch1 $end
$var wire 1 =J error_vswitch2 $end
$var wire 1 >J error_vswitch3 $end
$var wire 1 ?J error_vswitch4 $end
$var wire 1 @J error_vswitch5 $end
$var wire 1 AJ functional_mode_amux $end
$var wire 1 BJ hld_h_n_buf $end
$var wire 1 CJ hld_ovr_buf $end
$var wire 1 DJ ib_mode_sel_buf $end
$var wire 1 EJ inp_dis_buf $end
$var wire 1 FJ invalid_controls_amux $end
$var wire 1 GJ oe_n_buf $end
$var wire 1 HJ out_buf $end
$var wire 1 IJ pad_tristate $end
$var wire 1 JJ pwr_good_active_mode $end
$var wire 1 KJ pwr_good_active_mode_vdda $end
$var wire 1 LJ pwr_good_amux $end
$var wire 1 MJ pwr_good_analog_en_vdda $end
$var wire 1 NJ pwr_good_analog_en_vddio_q $end
$var wire 1 OJ pwr_good_analog_en_vswitch $end
$var wire 1 PJ pwr_good_hold_mode $end
$var wire 1 QJ pwr_good_hold_mode_vdda $end
$var wire 1 RJ pwr_good_hold_ovr_mode $end
$var wire 1 SJ pwr_good_inpbuff_hv $end
$var wire 1 TJ pwr_good_inpbuff_lv $end
$var wire 1 UJ pwr_good_output_driver $end
$var wire 1 VJ slow_buf $end
$var wire 1 WJ vtrip_sel_buf $end
$var wire 1 XJ x_on_analog_en_vdda $end
$var wire 1 YJ x_on_analog_en_vddio_q $end
$var wire 1 ZJ x_on_analog_en_vswitch $end
$var wire 1 [J x_on_in_hv $end
$var wire 1 \J x_on_in_lv $end
$var wire 1 ]J x_on_pad $end
$var wire 1 ^J zero_on_analog_en_vdda $end
$var wire 1 _J zero_on_analog_en_vddio_q $end
$var wire 1 `J zero_on_analog_en_vswitch $end
$var wire 1 aJ pwr_good_amux_vccd $end
$var wire 1 bJ enable_pad_vssio_q $end
$var wire 1 cJ enable_pad_vddio_q $end
$var wire 1 dJ enable_pad_amuxbus_b $end
$var wire 1 eJ enable_pad_amuxbus_a $end
$var wire 1 fJ disable_inp_buff_lv $end
$var wire 1 gJ disable_inp_buff $end
$var wire 3 hJ amux_select [2:0] $end
$var wire 1 a/ TIE_LO_ESD $end
$var wire 1 #J TIE_HI_ESD $end
$var wire 1 $J IN_H $end
$var wire 1 )0 IN $end
$var wire 1 a/ ENABLE_INP_H $end
$var reg 1 iJ analog_en_final $end
$var reg 1 jJ analog_en_vdda $end
$var reg 1 kJ analog_en_vddio_q $end
$var reg 1 lJ analog_en_vswitch $end
$var reg 1 mJ dis_err_msgs $end
$var reg 3 nJ dm_final [2:0] $end
$var reg 1 oJ hld_ovr_final $end
$var reg 1 pJ ib_mode_sel_final $end
$var reg 1 qJ inp_dis_final $end
$var reg 1 rJ notifier_dm $end
$var reg 1 sJ notifier_enable_h $end
$var reg 1 tJ notifier_hld_ovr $end
$var reg 1 uJ notifier_ib_mode_sel $end
$var reg 1 vJ notifier_inp_dis $end
$var reg 1 wJ notifier_oe_n $end
$var reg 1 xJ notifier_out $end
$var reg 1 yJ notifier_slow $end
$var reg 1 zJ notifier_vtrip_sel $end
$var reg 1 {J oe_n_final $end
$var reg 1 |J out_final $end
$var reg 1 }J slow_final $end
$var reg 1 ~J vtrip_sel_final $end
$var integer 32 !K msg_count_pad [31:0] $end
$var integer 32 "K msg_count_pad1 [31:0] $end
$var integer 32 #K msg_count_pad10 [31:0] $end
$var integer 32 $K msg_count_pad11 [31:0] $end
$var integer 32 %K msg_count_pad12 [31:0] $end
$var integer 32 &K msg_count_pad2 [31:0] $end
$var integer 32 'K msg_count_pad3 [31:0] $end
$var integer 32 (K msg_count_pad4 [31:0] $end
$var integer 32 )K msg_count_pad5 [31:0] $end
$var integer 32 *K msg_count_pad6 [31:0] $end
$var integer 32 +K msg_count_pad7 [31:0] $end
$var integer 32 ,K msg_count_pad8 [31:0] $end
$var integer 32 -K msg_count_pad9 [31:0] $end
$var integer 32 .K slow_0_delay [31:0] $end
$var integer 32 /K slow_1_delay [31:0] $end
$var integer 32 0K slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area1_io_pad[8] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 t" ANALOG_EN $end
$var wire 1 <# ANALOG_POL $end
$var wire 1 b# ANALOG_SEL $end
$var wire 3 1K DM [2:0] $end
$var wire 1 >% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 d% HLD_H_N $end
$var wire 1 ,& HLD_OVR $end
$var wire 1 R& IB_MODE_SEL $end
$var wire 1 x& INP_DIS $end
$var wire 1 @' OE_N $end
$var wire 1 f' OUT $end
$var wire 1 N" PAD $end
$var wire 1 t PAD_A_ESD_0_H $end
$var wire 1 2K PAD_A_ESD_1_H $end
$var wire 1 3K PAD_A_NOESD_H $end
$var wire 1 .( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 T( VTRIP_SEL $end
$var wire 1 `/ TIE_LO_ESD $end
$var wire 1 4K TIE_HI_ESD $end
$var wire 1 5K IN_H $end
$var wire 1 (0 IN $end
$var wire 1 `/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 6K event_error_vswitch5 $end
$var event 1 7K event_error_vswitch4 $end
$var event 1 8K event_error_vswitch3 $end
$var event 1 9K event_error_vswitch2 $end
$var event 1 :K event_error_vswitch1 $end
$var event 1 ;K event_error_vddio_q2 $end
$var event 1 <K event_error_vddio_q1 $end
$var event 1 =K event_error_vdda_vddioq_vswitch2 $end
$var event 1 >K event_error_vdda3 $end
$var event 1 ?K event_error_vdda2 $end
$var event 1 @K event_error_vdda $end
$var event 1 AK event_error_supply_good $end
$var event 1 BK event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 t" ANALOG_EN $end
$var wire 1 <# ANALOG_POL $end
$var wire 1 b# ANALOG_SEL $end
$var wire 3 CK DM [2:0] $end
$var wire 1 >% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 d% HLD_H_N $end
$var wire 1 ,& HLD_OVR $end
$var wire 1 R& IB_MODE_SEL $end
$var wire 1 x& INP_DIS $end
$var wire 1 @' OE_N $end
$var wire 1 f' OUT $end
$var wire 1 N" PAD $end
$var wire 1 t PAD_A_ESD_0_H $end
$var wire 1 2K PAD_A_ESD_1_H $end
$var wire 1 3K PAD_A_NOESD_H $end
$var wire 1 .( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 T( VTRIP_SEL $end
$var wire 3 DK dm_buf [2:0] $end
$var wire 1 EK error_enable_vddio $end
$var wire 1 FK error_supply_good $end
$var wire 1 GK error_vdda $end
$var wire 1 HK error_vdda2 $end
$var wire 1 IK error_vdda3 $end
$var wire 1 JK error_vdda_vddioq_vswitch2 $end
$var wire 1 KK error_vddio_q1 $end
$var wire 1 LK error_vddio_q2 $end
$var wire 1 MK error_vswitch1 $end
$var wire 1 NK error_vswitch2 $end
$var wire 1 OK error_vswitch3 $end
$var wire 1 PK error_vswitch4 $end
$var wire 1 QK error_vswitch5 $end
$var wire 1 RK functional_mode_amux $end
$var wire 1 SK hld_h_n_buf $end
$var wire 1 TK hld_ovr_buf $end
$var wire 1 UK ib_mode_sel_buf $end
$var wire 1 VK inp_dis_buf $end
$var wire 1 WK invalid_controls_amux $end
$var wire 1 XK oe_n_buf $end
$var wire 1 YK out_buf $end
$var wire 1 ZK pad_tristate $end
$var wire 1 [K pwr_good_active_mode $end
$var wire 1 \K pwr_good_active_mode_vdda $end
$var wire 1 ]K pwr_good_amux $end
$var wire 1 ^K pwr_good_analog_en_vdda $end
$var wire 1 _K pwr_good_analog_en_vddio_q $end
$var wire 1 `K pwr_good_analog_en_vswitch $end
$var wire 1 aK pwr_good_hold_mode $end
$var wire 1 bK pwr_good_hold_mode_vdda $end
$var wire 1 cK pwr_good_hold_ovr_mode $end
$var wire 1 dK pwr_good_inpbuff_hv $end
$var wire 1 eK pwr_good_inpbuff_lv $end
$var wire 1 fK pwr_good_output_driver $end
$var wire 1 gK slow_buf $end
$var wire 1 hK vtrip_sel_buf $end
$var wire 1 iK x_on_analog_en_vdda $end
$var wire 1 jK x_on_analog_en_vddio_q $end
$var wire 1 kK x_on_analog_en_vswitch $end
$var wire 1 lK x_on_in_hv $end
$var wire 1 mK x_on_in_lv $end
$var wire 1 nK x_on_pad $end
$var wire 1 oK zero_on_analog_en_vdda $end
$var wire 1 pK zero_on_analog_en_vddio_q $end
$var wire 1 qK zero_on_analog_en_vswitch $end
$var wire 1 rK pwr_good_amux_vccd $end
$var wire 1 sK enable_pad_vssio_q $end
$var wire 1 tK enable_pad_vddio_q $end
$var wire 1 uK enable_pad_amuxbus_b $end
$var wire 1 vK enable_pad_amuxbus_a $end
$var wire 1 wK disable_inp_buff_lv $end
$var wire 1 xK disable_inp_buff $end
$var wire 3 yK amux_select [2:0] $end
$var wire 1 `/ TIE_LO_ESD $end
$var wire 1 4K TIE_HI_ESD $end
$var wire 1 5K IN_H $end
$var wire 1 (0 IN $end
$var wire 1 `/ ENABLE_INP_H $end
$var reg 1 zK analog_en_final $end
$var reg 1 {K analog_en_vdda $end
$var reg 1 |K analog_en_vddio_q $end
$var reg 1 }K analog_en_vswitch $end
$var reg 1 ~K dis_err_msgs $end
$var reg 3 !L dm_final [2:0] $end
$var reg 1 "L hld_ovr_final $end
$var reg 1 #L ib_mode_sel_final $end
$var reg 1 $L inp_dis_final $end
$var reg 1 %L notifier_dm $end
$var reg 1 &L notifier_enable_h $end
$var reg 1 'L notifier_hld_ovr $end
$var reg 1 (L notifier_ib_mode_sel $end
$var reg 1 )L notifier_inp_dis $end
$var reg 1 *L notifier_oe_n $end
$var reg 1 +L notifier_out $end
$var reg 1 ,L notifier_slow $end
$var reg 1 -L notifier_vtrip_sel $end
$var reg 1 .L oe_n_final $end
$var reg 1 /L out_final $end
$var reg 1 0L slow_final $end
$var reg 1 1L vtrip_sel_final $end
$var integer 32 2L msg_count_pad [31:0] $end
$var integer 32 3L msg_count_pad1 [31:0] $end
$var integer 32 4L msg_count_pad10 [31:0] $end
$var integer 32 5L msg_count_pad11 [31:0] $end
$var integer 32 6L msg_count_pad12 [31:0] $end
$var integer 32 7L msg_count_pad2 [31:0] $end
$var integer 32 8L msg_count_pad3 [31:0] $end
$var integer 32 9L msg_count_pad4 [31:0] $end
$var integer 32 :L msg_count_pad5 [31:0] $end
$var integer 32 ;L msg_count_pad6 [31:0] $end
$var integer 32 <L msg_count_pad7 [31:0] $end
$var integer 32 =L msg_count_pad8 [31:0] $end
$var integer 32 >L msg_count_pad9 [31:0] $end
$var integer 32 ?L slow_0_delay [31:0] $end
$var integer 32 @L slow_1_delay [31:0] $end
$var integer 32 AL slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area1_io_pad[9] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 u" ANALOG_EN $end
$var wire 1 =# ANALOG_POL $end
$var wire 1 c# ANALOG_SEL $end
$var wire 3 BL DM [2:0] $end
$var wire 1 ?% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 e% HLD_H_N $end
$var wire 1 -& HLD_OVR $end
$var wire 1 S& IB_MODE_SEL $end
$var wire 1 y& INP_DIS $end
$var wire 1 A' OE_N $end
$var wire 1 g' OUT $end
$var wire 1 O" PAD $end
$var wire 1 !" PAD_A_ESD_0_H $end
$var wire 1 CL PAD_A_ESD_1_H $end
$var wire 1 DL PAD_A_NOESD_H $end
$var wire 1 /( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 U( VTRIP_SEL $end
$var wire 1 _/ TIE_LO_ESD $end
$var wire 1 EL TIE_HI_ESD $end
$var wire 1 FL IN_H $end
$var wire 1 '0 IN $end
$var wire 1 _/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 GL event_error_vswitch5 $end
$var event 1 HL event_error_vswitch4 $end
$var event 1 IL event_error_vswitch3 $end
$var event 1 JL event_error_vswitch2 $end
$var event 1 KL event_error_vswitch1 $end
$var event 1 LL event_error_vddio_q2 $end
$var event 1 ML event_error_vddio_q1 $end
$var event 1 NL event_error_vdda_vddioq_vswitch2 $end
$var event 1 OL event_error_vdda3 $end
$var event 1 PL event_error_vdda2 $end
$var event 1 QL event_error_vdda $end
$var event 1 RL event_error_supply_good $end
$var event 1 SL event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 u" ANALOG_EN $end
$var wire 1 =# ANALOG_POL $end
$var wire 1 c# ANALOG_SEL $end
$var wire 3 TL DM [2:0] $end
$var wire 1 ?% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 e% HLD_H_N $end
$var wire 1 -& HLD_OVR $end
$var wire 1 S& IB_MODE_SEL $end
$var wire 1 y& INP_DIS $end
$var wire 1 A' OE_N $end
$var wire 1 g' OUT $end
$var wire 1 O" PAD $end
$var wire 1 !" PAD_A_ESD_0_H $end
$var wire 1 CL PAD_A_ESD_1_H $end
$var wire 1 DL PAD_A_NOESD_H $end
$var wire 1 /( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 U( VTRIP_SEL $end
$var wire 3 UL dm_buf [2:0] $end
$var wire 1 VL error_enable_vddio $end
$var wire 1 WL error_supply_good $end
$var wire 1 XL error_vdda $end
$var wire 1 YL error_vdda2 $end
$var wire 1 ZL error_vdda3 $end
$var wire 1 [L error_vdda_vddioq_vswitch2 $end
$var wire 1 \L error_vddio_q1 $end
$var wire 1 ]L error_vddio_q2 $end
$var wire 1 ^L error_vswitch1 $end
$var wire 1 _L error_vswitch2 $end
$var wire 1 `L error_vswitch3 $end
$var wire 1 aL error_vswitch4 $end
$var wire 1 bL error_vswitch5 $end
$var wire 1 cL functional_mode_amux $end
$var wire 1 dL hld_h_n_buf $end
$var wire 1 eL hld_ovr_buf $end
$var wire 1 fL ib_mode_sel_buf $end
$var wire 1 gL inp_dis_buf $end
$var wire 1 hL invalid_controls_amux $end
$var wire 1 iL oe_n_buf $end
$var wire 1 jL out_buf $end
$var wire 1 kL pad_tristate $end
$var wire 1 lL pwr_good_active_mode $end
$var wire 1 mL pwr_good_active_mode_vdda $end
$var wire 1 nL pwr_good_amux $end
$var wire 1 oL pwr_good_analog_en_vdda $end
$var wire 1 pL pwr_good_analog_en_vddio_q $end
$var wire 1 qL pwr_good_analog_en_vswitch $end
$var wire 1 rL pwr_good_hold_mode $end
$var wire 1 sL pwr_good_hold_mode_vdda $end
$var wire 1 tL pwr_good_hold_ovr_mode $end
$var wire 1 uL pwr_good_inpbuff_hv $end
$var wire 1 vL pwr_good_inpbuff_lv $end
$var wire 1 wL pwr_good_output_driver $end
$var wire 1 xL slow_buf $end
$var wire 1 yL vtrip_sel_buf $end
$var wire 1 zL x_on_analog_en_vdda $end
$var wire 1 {L x_on_analog_en_vddio_q $end
$var wire 1 |L x_on_analog_en_vswitch $end
$var wire 1 }L x_on_in_hv $end
$var wire 1 ~L x_on_in_lv $end
$var wire 1 !M x_on_pad $end
$var wire 1 "M zero_on_analog_en_vdda $end
$var wire 1 #M zero_on_analog_en_vddio_q $end
$var wire 1 $M zero_on_analog_en_vswitch $end
$var wire 1 %M pwr_good_amux_vccd $end
$var wire 1 &M enable_pad_vssio_q $end
$var wire 1 'M enable_pad_vddio_q $end
$var wire 1 (M enable_pad_amuxbus_b $end
$var wire 1 )M enable_pad_amuxbus_a $end
$var wire 1 *M disable_inp_buff_lv $end
$var wire 1 +M disable_inp_buff $end
$var wire 3 ,M amux_select [2:0] $end
$var wire 1 _/ TIE_LO_ESD $end
$var wire 1 EL TIE_HI_ESD $end
$var wire 1 FL IN_H $end
$var wire 1 '0 IN $end
$var wire 1 _/ ENABLE_INP_H $end
$var reg 1 -M analog_en_final $end
$var reg 1 .M analog_en_vdda $end
$var reg 1 /M analog_en_vddio_q $end
$var reg 1 0M analog_en_vswitch $end
$var reg 1 1M dis_err_msgs $end
$var reg 3 2M dm_final [2:0] $end
$var reg 1 3M hld_ovr_final $end
$var reg 1 4M ib_mode_sel_final $end
$var reg 1 5M inp_dis_final $end
$var reg 1 6M notifier_dm $end
$var reg 1 7M notifier_enable_h $end
$var reg 1 8M notifier_hld_ovr $end
$var reg 1 9M notifier_ib_mode_sel $end
$var reg 1 :M notifier_inp_dis $end
$var reg 1 ;M notifier_oe_n $end
$var reg 1 <M notifier_out $end
$var reg 1 =M notifier_slow $end
$var reg 1 >M notifier_vtrip_sel $end
$var reg 1 ?M oe_n_final $end
$var reg 1 @M out_final $end
$var reg 1 AM slow_final $end
$var reg 1 BM vtrip_sel_final $end
$var integer 32 CM msg_count_pad [31:0] $end
$var integer 32 DM msg_count_pad1 [31:0] $end
$var integer 32 EM msg_count_pad10 [31:0] $end
$var integer 32 FM msg_count_pad11 [31:0] $end
$var integer 32 GM msg_count_pad12 [31:0] $end
$var integer 32 HM msg_count_pad2 [31:0] $end
$var integer 32 IM msg_count_pad3 [31:0] $end
$var integer 32 JM msg_count_pad4 [31:0] $end
$var integer 32 KM msg_count_pad5 [31:0] $end
$var integer 32 LM msg_count_pad6 [31:0] $end
$var integer 32 MM msg_count_pad7 [31:0] $end
$var integer 32 NM msg_count_pad8 [31:0] $end
$var integer 32 OM msg_count_pad9 [31:0] $end
$var integer 32 PM slow_0_delay [31:0] $end
$var integer 32 QM slow_1_delay [31:0] $end
$var integer 32 RM slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area2_io_pad[0] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 Y" ANALOG_EN $end
$var wire 1 !# ANALOG_POL $end
$var wire 1 G# ANALOG_SEL $end
$var wire 3 SM DM [2:0] $end
$var wire 1 #% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 I% HLD_H_N $end
$var wire 1 o% HLD_OVR $end
$var wire 1 7& IB_MODE_SEL $end
$var wire 1 ]& INP_DIS $end
$var wire 1 %' OE_N $end
$var wire 1 K' OUT $end
$var wire 1 3" PAD $end
$var wire 1 k PAD_A_ESD_0_H $end
$var wire 1 TM PAD_A_ESD_1_H $end
$var wire 1 UM PAD_A_NOESD_H $end
$var wire 1 q' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 9( VTRIP_SEL $end
$var wire 1 {/ TIE_LO_ESD $end
$var wire 1 VM TIE_HI_ESD $end
$var wire 1 WM IN_H $end
$var wire 1 C0 IN $end
$var wire 1 {/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 XM event_error_vswitch5 $end
$var event 1 YM event_error_vswitch4 $end
$var event 1 ZM event_error_vswitch3 $end
$var event 1 [M event_error_vswitch2 $end
$var event 1 \M event_error_vswitch1 $end
$var event 1 ]M event_error_vddio_q2 $end
$var event 1 ^M event_error_vddio_q1 $end
$var event 1 _M event_error_vdda_vddioq_vswitch2 $end
$var event 1 `M event_error_vdda3 $end
$var event 1 aM event_error_vdda2 $end
$var event 1 bM event_error_vdda $end
$var event 1 cM event_error_supply_good $end
$var event 1 dM event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 Y" ANALOG_EN $end
$var wire 1 !# ANALOG_POL $end
$var wire 1 G# ANALOG_SEL $end
$var wire 3 eM DM [2:0] $end
$var wire 1 #% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 I% HLD_H_N $end
$var wire 1 o% HLD_OVR $end
$var wire 1 7& IB_MODE_SEL $end
$var wire 1 ]& INP_DIS $end
$var wire 1 %' OE_N $end
$var wire 1 K' OUT $end
$var wire 1 3" PAD $end
$var wire 1 k PAD_A_ESD_0_H $end
$var wire 1 TM PAD_A_ESD_1_H $end
$var wire 1 UM PAD_A_NOESD_H $end
$var wire 1 q' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 9( VTRIP_SEL $end
$var wire 3 fM dm_buf [2:0] $end
$var wire 1 gM error_enable_vddio $end
$var wire 1 hM error_supply_good $end
$var wire 1 iM error_vdda $end
$var wire 1 jM error_vdda2 $end
$var wire 1 kM error_vdda3 $end
$var wire 1 lM error_vdda_vddioq_vswitch2 $end
$var wire 1 mM error_vddio_q1 $end
$var wire 1 nM error_vddio_q2 $end
$var wire 1 oM error_vswitch1 $end
$var wire 1 pM error_vswitch2 $end
$var wire 1 qM error_vswitch3 $end
$var wire 1 rM error_vswitch4 $end
$var wire 1 sM error_vswitch5 $end
$var wire 1 tM functional_mode_amux $end
$var wire 1 uM hld_h_n_buf $end
$var wire 1 vM hld_ovr_buf $end
$var wire 1 wM ib_mode_sel_buf $end
$var wire 1 xM inp_dis_buf $end
$var wire 1 yM invalid_controls_amux $end
$var wire 1 zM oe_n_buf $end
$var wire 1 {M out_buf $end
$var wire 1 |M pad_tristate $end
$var wire 1 }M pwr_good_active_mode $end
$var wire 1 ~M pwr_good_active_mode_vdda $end
$var wire 1 !N pwr_good_amux $end
$var wire 1 "N pwr_good_analog_en_vdda $end
$var wire 1 #N pwr_good_analog_en_vddio_q $end
$var wire 1 $N pwr_good_analog_en_vswitch $end
$var wire 1 %N pwr_good_hold_mode $end
$var wire 1 &N pwr_good_hold_mode_vdda $end
$var wire 1 'N pwr_good_hold_ovr_mode $end
$var wire 1 (N pwr_good_inpbuff_hv $end
$var wire 1 )N pwr_good_inpbuff_lv $end
$var wire 1 *N pwr_good_output_driver $end
$var wire 1 +N slow_buf $end
$var wire 1 ,N vtrip_sel_buf $end
$var wire 1 -N x_on_analog_en_vdda $end
$var wire 1 .N x_on_analog_en_vddio_q $end
$var wire 1 /N x_on_analog_en_vswitch $end
$var wire 1 0N x_on_in_hv $end
$var wire 1 1N x_on_in_lv $end
$var wire 1 2N x_on_pad $end
$var wire 1 3N zero_on_analog_en_vdda $end
$var wire 1 4N zero_on_analog_en_vddio_q $end
$var wire 1 5N zero_on_analog_en_vswitch $end
$var wire 1 6N pwr_good_amux_vccd $end
$var wire 1 7N enable_pad_vssio_q $end
$var wire 1 8N enable_pad_vddio_q $end
$var wire 1 9N enable_pad_amuxbus_b $end
$var wire 1 :N enable_pad_amuxbus_a $end
$var wire 1 ;N disable_inp_buff_lv $end
$var wire 1 <N disable_inp_buff $end
$var wire 3 =N amux_select [2:0] $end
$var wire 1 {/ TIE_LO_ESD $end
$var wire 1 VM TIE_HI_ESD $end
$var wire 1 WM IN_H $end
$var wire 1 C0 IN $end
$var wire 1 {/ ENABLE_INP_H $end
$var reg 1 >N analog_en_final $end
$var reg 1 ?N analog_en_vdda $end
$var reg 1 @N analog_en_vddio_q $end
$var reg 1 AN analog_en_vswitch $end
$var reg 1 BN dis_err_msgs $end
$var reg 3 CN dm_final [2:0] $end
$var reg 1 DN hld_ovr_final $end
$var reg 1 EN ib_mode_sel_final $end
$var reg 1 FN inp_dis_final $end
$var reg 1 GN notifier_dm $end
$var reg 1 HN notifier_enable_h $end
$var reg 1 IN notifier_hld_ovr $end
$var reg 1 JN notifier_ib_mode_sel $end
$var reg 1 KN notifier_inp_dis $end
$var reg 1 LN notifier_oe_n $end
$var reg 1 MN notifier_out $end
$var reg 1 NN notifier_slow $end
$var reg 1 ON notifier_vtrip_sel $end
$var reg 1 PN oe_n_final $end
$var reg 1 QN out_final $end
$var reg 1 RN slow_final $end
$var reg 1 SN vtrip_sel_final $end
$var integer 32 TN msg_count_pad [31:0] $end
$var integer 32 UN msg_count_pad1 [31:0] $end
$var integer 32 VN msg_count_pad10 [31:0] $end
$var integer 32 WN msg_count_pad11 [31:0] $end
$var integer 32 XN msg_count_pad12 [31:0] $end
$var integer 32 YN msg_count_pad2 [31:0] $end
$var integer 32 ZN msg_count_pad3 [31:0] $end
$var integer 32 [N msg_count_pad4 [31:0] $end
$var integer 32 \N msg_count_pad5 [31:0] $end
$var integer 32 ]N msg_count_pad6 [31:0] $end
$var integer 32 ^N msg_count_pad7 [31:0] $end
$var integer 32 _N msg_count_pad8 [31:0] $end
$var integer 32 `N msg_count_pad9 [31:0] $end
$var integer 32 aN slow_0_delay [31:0] $end
$var integer 32 bN slow_1_delay [31:0] $end
$var integer 32 cN slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area2_io_pad[10] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 d" ANALOG_EN $end
$var wire 1 ,# ANALOG_POL $end
$var wire 1 R# ANALOG_SEL $end
$var wire 3 dN DM [2:0] $end
$var wire 1 .% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 T% HLD_H_N $end
$var wire 1 z% HLD_OVR $end
$var wire 1 B& IB_MODE_SEL $end
$var wire 1 h& INP_DIS $end
$var wire 1 0' OE_N $end
$var wire 1 V' OUT $end
$var wire 1 >" PAD $end
$var wire 1 v PAD_A_ESD_0_H $end
$var wire 1 eN PAD_A_ESD_1_H $end
$var wire 1 fN PAD_A_NOESD_H $end
$var wire 1 |' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 D( VTRIP_SEL $end
$var wire 1 p/ TIE_LO_ESD $end
$var wire 1 gN TIE_HI_ESD $end
$var wire 1 hN IN_H $end
$var wire 1 80 IN $end
$var wire 1 p/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 iN event_error_vswitch5 $end
$var event 1 jN event_error_vswitch4 $end
$var event 1 kN event_error_vswitch3 $end
$var event 1 lN event_error_vswitch2 $end
$var event 1 mN event_error_vswitch1 $end
$var event 1 nN event_error_vddio_q2 $end
$var event 1 oN event_error_vddio_q1 $end
$var event 1 pN event_error_vdda_vddioq_vswitch2 $end
$var event 1 qN event_error_vdda3 $end
$var event 1 rN event_error_vdda2 $end
$var event 1 sN event_error_vdda $end
$var event 1 tN event_error_supply_good $end
$var event 1 uN event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 d" ANALOG_EN $end
$var wire 1 ,# ANALOG_POL $end
$var wire 1 R# ANALOG_SEL $end
$var wire 3 vN DM [2:0] $end
$var wire 1 .% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 T% HLD_H_N $end
$var wire 1 z% HLD_OVR $end
$var wire 1 B& IB_MODE_SEL $end
$var wire 1 h& INP_DIS $end
$var wire 1 0' OE_N $end
$var wire 1 V' OUT $end
$var wire 1 >" PAD $end
$var wire 1 v PAD_A_ESD_0_H $end
$var wire 1 eN PAD_A_ESD_1_H $end
$var wire 1 fN PAD_A_NOESD_H $end
$var wire 1 |' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 D( VTRIP_SEL $end
$var wire 3 wN dm_buf [2:0] $end
$var wire 1 xN error_enable_vddio $end
$var wire 1 yN error_supply_good $end
$var wire 1 zN error_vdda $end
$var wire 1 {N error_vdda2 $end
$var wire 1 |N error_vdda3 $end
$var wire 1 }N error_vdda_vddioq_vswitch2 $end
$var wire 1 ~N error_vddio_q1 $end
$var wire 1 !O error_vddio_q2 $end
$var wire 1 "O error_vswitch1 $end
$var wire 1 #O error_vswitch2 $end
$var wire 1 $O error_vswitch3 $end
$var wire 1 %O error_vswitch4 $end
$var wire 1 &O error_vswitch5 $end
$var wire 1 'O functional_mode_amux $end
$var wire 1 (O hld_h_n_buf $end
$var wire 1 )O hld_ovr_buf $end
$var wire 1 *O ib_mode_sel_buf $end
$var wire 1 +O inp_dis_buf $end
$var wire 1 ,O invalid_controls_amux $end
$var wire 1 -O oe_n_buf $end
$var wire 1 .O out_buf $end
$var wire 1 /O pad_tristate $end
$var wire 1 0O pwr_good_active_mode $end
$var wire 1 1O pwr_good_active_mode_vdda $end
$var wire 1 2O pwr_good_amux $end
$var wire 1 3O pwr_good_analog_en_vdda $end
$var wire 1 4O pwr_good_analog_en_vddio_q $end
$var wire 1 5O pwr_good_analog_en_vswitch $end
$var wire 1 6O pwr_good_hold_mode $end
$var wire 1 7O pwr_good_hold_mode_vdda $end
$var wire 1 8O pwr_good_hold_ovr_mode $end
$var wire 1 9O pwr_good_inpbuff_hv $end
$var wire 1 :O pwr_good_inpbuff_lv $end
$var wire 1 ;O pwr_good_output_driver $end
$var wire 1 <O slow_buf $end
$var wire 1 =O vtrip_sel_buf $end
$var wire 1 >O x_on_analog_en_vdda $end
$var wire 1 ?O x_on_analog_en_vddio_q $end
$var wire 1 @O x_on_analog_en_vswitch $end
$var wire 1 AO x_on_in_hv $end
$var wire 1 BO x_on_in_lv $end
$var wire 1 CO x_on_pad $end
$var wire 1 DO zero_on_analog_en_vdda $end
$var wire 1 EO zero_on_analog_en_vddio_q $end
$var wire 1 FO zero_on_analog_en_vswitch $end
$var wire 1 GO pwr_good_amux_vccd $end
$var wire 1 HO enable_pad_vssio_q $end
$var wire 1 IO enable_pad_vddio_q $end
$var wire 1 JO enable_pad_amuxbus_b $end
$var wire 1 KO enable_pad_amuxbus_a $end
$var wire 1 LO disable_inp_buff_lv $end
$var wire 1 MO disable_inp_buff $end
$var wire 3 NO amux_select [2:0] $end
$var wire 1 p/ TIE_LO_ESD $end
$var wire 1 gN TIE_HI_ESD $end
$var wire 1 hN IN_H $end
$var wire 1 80 IN $end
$var wire 1 p/ ENABLE_INP_H $end
$var reg 1 OO analog_en_final $end
$var reg 1 PO analog_en_vdda $end
$var reg 1 QO analog_en_vddio_q $end
$var reg 1 RO analog_en_vswitch $end
$var reg 1 SO dis_err_msgs $end
$var reg 3 TO dm_final [2:0] $end
$var reg 1 UO hld_ovr_final $end
$var reg 1 VO ib_mode_sel_final $end
$var reg 1 WO inp_dis_final $end
$var reg 1 XO notifier_dm $end
$var reg 1 YO notifier_enable_h $end
$var reg 1 ZO notifier_hld_ovr $end
$var reg 1 [O notifier_ib_mode_sel $end
$var reg 1 \O notifier_inp_dis $end
$var reg 1 ]O notifier_oe_n $end
$var reg 1 ^O notifier_out $end
$var reg 1 _O notifier_slow $end
$var reg 1 `O notifier_vtrip_sel $end
$var reg 1 aO oe_n_final $end
$var reg 1 bO out_final $end
$var reg 1 cO slow_final $end
$var reg 1 dO vtrip_sel_final $end
$var integer 32 eO msg_count_pad [31:0] $end
$var integer 32 fO msg_count_pad1 [31:0] $end
$var integer 32 gO msg_count_pad10 [31:0] $end
$var integer 32 hO msg_count_pad11 [31:0] $end
$var integer 32 iO msg_count_pad12 [31:0] $end
$var integer 32 jO msg_count_pad2 [31:0] $end
$var integer 32 kO msg_count_pad3 [31:0] $end
$var integer 32 lO msg_count_pad4 [31:0] $end
$var integer 32 mO msg_count_pad5 [31:0] $end
$var integer 32 nO msg_count_pad6 [31:0] $end
$var integer 32 oO msg_count_pad7 [31:0] $end
$var integer 32 pO msg_count_pad8 [31:0] $end
$var integer 32 qO msg_count_pad9 [31:0] $end
$var integer 32 rO slow_0_delay [31:0] $end
$var integer 32 sO slow_1_delay [31:0] $end
$var integer 32 tO slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area2_io_pad[11] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 e" ANALOG_EN $end
$var wire 1 -# ANALOG_POL $end
$var wire 1 S# ANALOG_SEL $end
$var wire 3 uO DM [2:0] $end
$var wire 1 /% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 U% HLD_H_N $end
$var wire 1 {% HLD_OVR $end
$var wire 1 C& IB_MODE_SEL $end
$var wire 1 i& INP_DIS $end
$var wire 1 1' OE_N $end
$var wire 1 W' OUT $end
$var wire 1 ?" PAD $end
$var wire 1 w PAD_A_ESD_0_H $end
$var wire 1 vO PAD_A_ESD_1_H $end
$var wire 1 wO PAD_A_NOESD_H $end
$var wire 1 }' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 E( VTRIP_SEL $end
$var wire 1 o/ TIE_LO_ESD $end
$var wire 1 xO TIE_HI_ESD $end
$var wire 1 yO IN_H $end
$var wire 1 70 IN $end
$var wire 1 o/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 zO event_error_vswitch5 $end
$var event 1 {O event_error_vswitch4 $end
$var event 1 |O event_error_vswitch3 $end
$var event 1 }O event_error_vswitch2 $end
$var event 1 ~O event_error_vswitch1 $end
$var event 1 !P event_error_vddio_q2 $end
$var event 1 "P event_error_vddio_q1 $end
$var event 1 #P event_error_vdda_vddioq_vswitch2 $end
$var event 1 $P event_error_vdda3 $end
$var event 1 %P event_error_vdda2 $end
$var event 1 &P event_error_vdda $end
$var event 1 'P event_error_supply_good $end
$var event 1 (P event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 e" ANALOG_EN $end
$var wire 1 -# ANALOG_POL $end
$var wire 1 S# ANALOG_SEL $end
$var wire 3 )P DM [2:0] $end
$var wire 1 /% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 U% HLD_H_N $end
$var wire 1 {% HLD_OVR $end
$var wire 1 C& IB_MODE_SEL $end
$var wire 1 i& INP_DIS $end
$var wire 1 1' OE_N $end
$var wire 1 W' OUT $end
$var wire 1 ?" PAD $end
$var wire 1 w PAD_A_ESD_0_H $end
$var wire 1 vO PAD_A_ESD_1_H $end
$var wire 1 wO PAD_A_NOESD_H $end
$var wire 1 }' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 E( VTRIP_SEL $end
$var wire 3 *P dm_buf [2:0] $end
$var wire 1 +P error_enable_vddio $end
$var wire 1 ,P error_supply_good $end
$var wire 1 -P error_vdda $end
$var wire 1 .P error_vdda2 $end
$var wire 1 /P error_vdda3 $end
$var wire 1 0P error_vdda_vddioq_vswitch2 $end
$var wire 1 1P error_vddio_q1 $end
$var wire 1 2P error_vddio_q2 $end
$var wire 1 3P error_vswitch1 $end
$var wire 1 4P error_vswitch2 $end
$var wire 1 5P error_vswitch3 $end
$var wire 1 6P error_vswitch4 $end
$var wire 1 7P error_vswitch5 $end
$var wire 1 8P functional_mode_amux $end
$var wire 1 9P hld_h_n_buf $end
$var wire 1 :P hld_ovr_buf $end
$var wire 1 ;P ib_mode_sel_buf $end
$var wire 1 <P inp_dis_buf $end
$var wire 1 =P invalid_controls_amux $end
$var wire 1 >P oe_n_buf $end
$var wire 1 ?P out_buf $end
$var wire 1 @P pad_tristate $end
$var wire 1 AP pwr_good_active_mode $end
$var wire 1 BP pwr_good_active_mode_vdda $end
$var wire 1 CP pwr_good_amux $end
$var wire 1 DP pwr_good_analog_en_vdda $end
$var wire 1 EP pwr_good_analog_en_vddio_q $end
$var wire 1 FP pwr_good_analog_en_vswitch $end
$var wire 1 GP pwr_good_hold_mode $end
$var wire 1 HP pwr_good_hold_mode_vdda $end
$var wire 1 IP pwr_good_hold_ovr_mode $end
$var wire 1 JP pwr_good_inpbuff_hv $end
$var wire 1 KP pwr_good_inpbuff_lv $end
$var wire 1 LP pwr_good_output_driver $end
$var wire 1 MP slow_buf $end
$var wire 1 NP vtrip_sel_buf $end
$var wire 1 OP x_on_analog_en_vdda $end
$var wire 1 PP x_on_analog_en_vddio_q $end
$var wire 1 QP x_on_analog_en_vswitch $end
$var wire 1 RP x_on_in_hv $end
$var wire 1 SP x_on_in_lv $end
$var wire 1 TP x_on_pad $end
$var wire 1 UP zero_on_analog_en_vdda $end
$var wire 1 VP zero_on_analog_en_vddio_q $end
$var wire 1 WP zero_on_analog_en_vswitch $end
$var wire 1 XP pwr_good_amux_vccd $end
$var wire 1 YP enable_pad_vssio_q $end
$var wire 1 ZP enable_pad_vddio_q $end
$var wire 1 [P enable_pad_amuxbus_b $end
$var wire 1 \P enable_pad_amuxbus_a $end
$var wire 1 ]P disable_inp_buff_lv $end
$var wire 1 ^P disable_inp_buff $end
$var wire 3 _P amux_select [2:0] $end
$var wire 1 o/ TIE_LO_ESD $end
$var wire 1 xO TIE_HI_ESD $end
$var wire 1 yO IN_H $end
$var wire 1 70 IN $end
$var wire 1 o/ ENABLE_INP_H $end
$var reg 1 `P analog_en_final $end
$var reg 1 aP analog_en_vdda $end
$var reg 1 bP analog_en_vddio_q $end
$var reg 1 cP analog_en_vswitch $end
$var reg 1 dP dis_err_msgs $end
$var reg 3 eP dm_final [2:0] $end
$var reg 1 fP hld_ovr_final $end
$var reg 1 gP ib_mode_sel_final $end
$var reg 1 hP inp_dis_final $end
$var reg 1 iP notifier_dm $end
$var reg 1 jP notifier_enable_h $end
$var reg 1 kP notifier_hld_ovr $end
$var reg 1 lP notifier_ib_mode_sel $end
$var reg 1 mP notifier_inp_dis $end
$var reg 1 nP notifier_oe_n $end
$var reg 1 oP notifier_out $end
$var reg 1 pP notifier_slow $end
$var reg 1 qP notifier_vtrip_sel $end
$var reg 1 rP oe_n_final $end
$var reg 1 sP out_final $end
$var reg 1 tP slow_final $end
$var reg 1 uP vtrip_sel_final $end
$var integer 32 vP msg_count_pad [31:0] $end
$var integer 32 wP msg_count_pad1 [31:0] $end
$var integer 32 xP msg_count_pad10 [31:0] $end
$var integer 32 yP msg_count_pad11 [31:0] $end
$var integer 32 zP msg_count_pad12 [31:0] $end
$var integer 32 {P msg_count_pad2 [31:0] $end
$var integer 32 |P msg_count_pad3 [31:0] $end
$var integer 32 }P msg_count_pad4 [31:0] $end
$var integer 32 ~P msg_count_pad5 [31:0] $end
$var integer 32 !Q msg_count_pad6 [31:0] $end
$var integer 32 "Q msg_count_pad7 [31:0] $end
$var integer 32 #Q msg_count_pad8 [31:0] $end
$var integer 32 $Q msg_count_pad9 [31:0] $end
$var integer 32 %Q slow_0_delay [31:0] $end
$var integer 32 &Q slow_1_delay [31:0] $end
$var integer 32 'Q slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area2_io_pad[12] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 g" ANALOG_EN $end
$var wire 1 /# ANALOG_POL $end
$var wire 1 U# ANALOG_SEL $end
$var wire 3 (Q DM [2:0] $end
$var wire 1 1% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 W% HLD_H_N $end
$var wire 1 }% HLD_OVR $end
$var wire 1 E& IB_MODE_SEL $end
$var wire 1 k& INP_DIS $end
$var wire 1 3' OE_N $end
$var wire 1 Y' OUT $end
$var wire 1 A" PAD $end
$var wire 1 x PAD_A_ESD_0_H $end
$var wire 1 )Q PAD_A_ESD_1_H $end
$var wire 1 *Q PAD_A_NOESD_H $end
$var wire 1 !( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 G( VTRIP_SEL $end
$var wire 1 m/ TIE_LO_ESD $end
$var wire 1 +Q TIE_HI_ESD $end
$var wire 1 ,Q IN_H $end
$var wire 1 50 IN $end
$var wire 1 m/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 -Q event_error_vswitch5 $end
$var event 1 .Q event_error_vswitch4 $end
$var event 1 /Q event_error_vswitch3 $end
$var event 1 0Q event_error_vswitch2 $end
$var event 1 1Q event_error_vswitch1 $end
$var event 1 2Q event_error_vddio_q2 $end
$var event 1 3Q event_error_vddio_q1 $end
$var event 1 4Q event_error_vdda_vddioq_vswitch2 $end
$var event 1 5Q event_error_vdda3 $end
$var event 1 6Q event_error_vdda2 $end
$var event 1 7Q event_error_vdda $end
$var event 1 8Q event_error_supply_good $end
$var event 1 9Q event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 g" ANALOG_EN $end
$var wire 1 /# ANALOG_POL $end
$var wire 1 U# ANALOG_SEL $end
$var wire 3 :Q DM [2:0] $end
$var wire 1 1% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 W% HLD_H_N $end
$var wire 1 }% HLD_OVR $end
$var wire 1 E& IB_MODE_SEL $end
$var wire 1 k& INP_DIS $end
$var wire 1 3' OE_N $end
$var wire 1 Y' OUT $end
$var wire 1 A" PAD $end
$var wire 1 x PAD_A_ESD_0_H $end
$var wire 1 )Q PAD_A_ESD_1_H $end
$var wire 1 *Q PAD_A_NOESD_H $end
$var wire 1 !( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 G( VTRIP_SEL $end
$var wire 3 ;Q dm_buf [2:0] $end
$var wire 1 <Q error_enable_vddio $end
$var wire 1 =Q error_supply_good $end
$var wire 1 >Q error_vdda $end
$var wire 1 ?Q error_vdda2 $end
$var wire 1 @Q error_vdda3 $end
$var wire 1 AQ error_vdda_vddioq_vswitch2 $end
$var wire 1 BQ error_vddio_q1 $end
$var wire 1 CQ error_vddio_q2 $end
$var wire 1 DQ error_vswitch1 $end
$var wire 1 EQ error_vswitch2 $end
$var wire 1 FQ error_vswitch3 $end
$var wire 1 GQ error_vswitch4 $end
$var wire 1 HQ error_vswitch5 $end
$var wire 1 IQ functional_mode_amux $end
$var wire 1 JQ hld_h_n_buf $end
$var wire 1 KQ hld_ovr_buf $end
$var wire 1 LQ ib_mode_sel_buf $end
$var wire 1 MQ inp_dis_buf $end
$var wire 1 NQ invalid_controls_amux $end
$var wire 1 OQ oe_n_buf $end
$var wire 1 PQ out_buf $end
$var wire 1 QQ pad_tristate $end
$var wire 1 RQ pwr_good_active_mode $end
$var wire 1 SQ pwr_good_active_mode_vdda $end
$var wire 1 TQ pwr_good_amux $end
$var wire 1 UQ pwr_good_analog_en_vdda $end
$var wire 1 VQ pwr_good_analog_en_vddio_q $end
$var wire 1 WQ pwr_good_analog_en_vswitch $end
$var wire 1 XQ pwr_good_hold_mode $end
$var wire 1 YQ pwr_good_hold_mode_vdda $end
$var wire 1 ZQ pwr_good_hold_ovr_mode $end
$var wire 1 [Q pwr_good_inpbuff_hv $end
$var wire 1 \Q pwr_good_inpbuff_lv $end
$var wire 1 ]Q pwr_good_output_driver $end
$var wire 1 ^Q slow_buf $end
$var wire 1 _Q vtrip_sel_buf $end
$var wire 1 `Q x_on_analog_en_vdda $end
$var wire 1 aQ x_on_analog_en_vddio_q $end
$var wire 1 bQ x_on_analog_en_vswitch $end
$var wire 1 cQ x_on_in_hv $end
$var wire 1 dQ x_on_in_lv $end
$var wire 1 eQ x_on_pad $end
$var wire 1 fQ zero_on_analog_en_vdda $end
$var wire 1 gQ zero_on_analog_en_vddio_q $end
$var wire 1 hQ zero_on_analog_en_vswitch $end
$var wire 1 iQ pwr_good_amux_vccd $end
$var wire 1 jQ enable_pad_vssio_q $end
$var wire 1 kQ enable_pad_vddio_q $end
$var wire 1 lQ enable_pad_amuxbus_b $end
$var wire 1 mQ enable_pad_amuxbus_a $end
$var wire 1 nQ disable_inp_buff_lv $end
$var wire 1 oQ disable_inp_buff $end
$var wire 3 pQ amux_select [2:0] $end
$var wire 1 m/ TIE_LO_ESD $end
$var wire 1 +Q TIE_HI_ESD $end
$var wire 1 ,Q IN_H $end
$var wire 1 50 IN $end
$var wire 1 m/ ENABLE_INP_H $end
$var reg 1 qQ analog_en_final $end
$var reg 1 rQ analog_en_vdda $end
$var reg 1 sQ analog_en_vddio_q $end
$var reg 1 tQ analog_en_vswitch $end
$var reg 1 uQ dis_err_msgs $end
$var reg 3 vQ dm_final [2:0] $end
$var reg 1 wQ hld_ovr_final $end
$var reg 1 xQ ib_mode_sel_final $end
$var reg 1 yQ inp_dis_final $end
$var reg 1 zQ notifier_dm $end
$var reg 1 {Q notifier_enable_h $end
$var reg 1 |Q notifier_hld_ovr $end
$var reg 1 }Q notifier_ib_mode_sel $end
$var reg 1 ~Q notifier_inp_dis $end
$var reg 1 !R notifier_oe_n $end
$var reg 1 "R notifier_out $end
$var reg 1 #R notifier_slow $end
$var reg 1 $R notifier_vtrip_sel $end
$var reg 1 %R oe_n_final $end
$var reg 1 &R out_final $end
$var reg 1 'R slow_final $end
$var reg 1 (R vtrip_sel_final $end
$var integer 32 )R msg_count_pad [31:0] $end
$var integer 32 *R msg_count_pad1 [31:0] $end
$var integer 32 +R msg_count_pad10 [31:0] $end
$var integer 32 ,R msg_count_pad11 [31:0] $end
$var integer 32 -R msg_count_pad12 [31:0] $end
$var integer 32 .R msg_count_pad2 [31:0] $end
$var integer 32 /R msg_count_pad3 [31:0] $end
$var integer 32 0R msg_count_pad4 [31:0] $end
$var integer 32 1R msg_count_pad5 [31:0] $end
$var integer 32 2R msg_count_pad6 [31:0] $end
$var integer 32 3R msg_count_pad7 [31:0] $end
$var integer 32 4R msg_count_pad8 [31:0] $end
$var integer 32 5R msg_count_pad9 [31:0] $end
$var integer 32 6R slow_0_delay [31:0] $end
$var integer 32 7R slow_1_delay [31:0] $end
$var integer 32 8R slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area2_io_pad[13] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 h" ANALOG_EN $end
$var wire 1 0# ANALOG_POL $end
$var wire 1 V# ANALOG_SEL $end
$var wire 3 9R DM [2:0] $end
$var wire 1 2% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 X% HLD_H_N $end
$var wire 1 ~% HLD_OVR $end
$var wire 1 F& IB_MODE_SEL $end
$var wire 1 l& INP_DIS $end
$var wire 1 4' OE_N $end
$var wire 1 Z' OUT $end
$var wire 1 B" PAD $end
$var wire 1 y PAD_A_ESD_0_H $end
$var wire 1 :R PAD_A_ESD_1_H $end
$var wire 1 ;R PAD_A_NOESD_H $end
$var wire 1 "( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 H( VTRIP_SEL $end
$var wire 1 l/ TIE_LO_ESD $end
$var wire 1 <R TIE_HI_ESD $end
$var wire 1 =R IN_H $end
$var wire 1 40 IN $end
$var wire 1 l/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 >R event_error_vswitch5 $end
$var event 1 ?R event_error_vswitch4 $end
$var event 1 @R event_error_vswitch3 $end
$var event 1 AR event_error_vswitch2 $end
$var event 1 BR event_error_vswitch1 $end
$var event 1 CR event_error_vddio_q2 $end
$var event 1 DR event_error_vddio_q1 $end
$var event 1 ER event_error_vdda_vddioq_vswitch2 $end
$var event 1 FR event_error_vdda3 $end
$var event 1 GR event_error_vdda2 $end
$var event 1 HR event_error_vdda $end
$var event 1 IR event_error_supply_good $end
$var event 1 JR event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 h" ANALOG_EN $end
$var wire 1 0# ANALOG_POL $end
$var wire 1 V# ANALOG_SEL $end
$var wire 3 KR DM [2:0] $end
$var wire 1 2% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 X% HLD_H_N $end
$var wire 1 ~% HLD_OVR $end
$var wire 1 F& IB_MODE_SEL $end
$var wire 1 l& INP_DIS $end
$var wire 1 4' OE_N $end
$var wire 1 Z' OUT $end
$var wire 1 B" PAD $end
$var wire 1 y PAD_A_ESD_0_H $end
$var wire 1 :R PAD_A_ESD_1_H $end
$var wire 1 ;R PAD_A_NOESD_H $end
$var wire 1 "( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 H( VTRIP_SEL $end
$var wire 3 LR dm_buf [2:0] $end
$var wire 1 MR error_enable_vddio $end
$var wire 1 NR error_supply_good $end
$var wire 1 OR error_vdda $end
$var wire 1 PR error_vdda2 $end
$var wire 1 QR error_vdda3 $end
$var wire 1 RR error_vdda_vddioq_vswitch2 $end
$var wire 1 SR error_vddio_q1 $end
$var wire 1 TR error_vddio_q2 $end
$var wire 1 UR error_vswitch1 $end
$var wire 1 VR error_vswitch2 $end
$var wire 1 WR error_vswitch3 $end
$var wire 1 XR error_vswitch4 $end
$var wire 1 YR error_vswitch5 $end
$var wire 1 ZR functional_mode_amux $end
$var wire 1 [R hld_h_n_buf $end
$var wire 1 \R hld_ovr_buf $end
$var wire 1 ]R ib_mode_sel_buf $end
$var wire 1 ^R inp_dis_buf $end
$var wire 1 _R invalid_controls_amux $end
$var wire 1 `R oe_n_buf $end
$var wire 1 aR out_buf $end
$var wire 1 bR pad_tristate $end
$var wire 1 cR pwr_good_active_mode $end
$var wire 1 dR pwr_good_active_mode_vdda $end
$var wire 1 eR pwr_good_amux $end
$var wire 1 fR pwr_good_analog_en_vdda $end
$var wire 1 gR pwr_good_analog_en_vddio_q $end
$var wire 1 hR pwr_good_analog_en_vswitch $end
$var wire 1 iR pwr_good_hold_mode $end
$var wire 1 jR pwr_good_hold_mode_vdda $end
$var wire 1 kR pwr_good_hold_ovr_mode $end
$var wire 1 lR pwr_good_inpbuff_hv $end
$var wire 1 mR pwr_good_inpbuff_lv $end
$var wire 1 nR pwr_good_output_driver $end
$var wire 1 oR slow_buf $end
$var wire 1 pR vtrip_sel_buf $end
$var wire 1 qR x_on_analog_en_vdda $end
$var wire 1 rR x_on_analog_en_vddio_q $end
$var wire 1 sR x_on_analog_en_vswitch $end
$var wire 1 tR x_on_in_hv $end
$var wire 1 uR x_on_in_lv $end
$var wire 1 vR x_on_pad $end
$var wire 1 wR zero_on_analog_en_vdda $end
$var wire 1 xR zero_on_analog_en_vddio_q $end
$var wire 1 yR zero_on_analog_en_vswitch $end
$var wire 1 zR pwr_good_amux_vccd $end
$var wire 1 {R enable_pad_vssio_q $end
$var wire 1 |R enable_pad_vddio_q $end
$var wire 1 }R enable_pad_amuxbus_b $end
$var wire 1 ~R enable_pad_amuxbus_a $end
$var wire 1 !S disable_inp_buff_lv $end
$var wire 1 "S disable_inp_buff $end
$var wire 3 #S amux_select [2:0] $end
$var wire 1 l/ TIE_LO_ESD $end
$var wire 1 <R TIE_HI_ESD $end
$var wire 1 =R IN_H $end
$var wire 1 40 IN $end
$var wire 1 l/ ENABLE_INP_H $end
$var reg 1 $S analog_en_final $end
$var reg 1 %S analog_en_vdda $end
$var reg 1 &S analog_en_vddio_q $end
$var reg 1 'S analog_en_vswitch $end
$var reg 1 (S dis_err_msgs $end
$var reg 3 )S dm_final [2:0] $end
$var reg 1 *S hld_ovr_final $end
$var reg 1 +S ib_mode_sel_final $end
$var reg 1 ,S inp_dis_final $end
$var reg 1 -S notifier_dm $end
$var reg 1 .S notifier_enable_h $end
$var reg 1 /S notifier_hld_ovr $end
$var reg 1 0S notifier_ib_mode_sel $end
$var reg 1 1S notifier_inp_dis $end
$var reg 1 2S notifier_oe_n $end
$var reg 1 3S notifier_out $end
$var reg 1 4S notifier_slow $end
$var reg 1 5S notifier_vtrip_sel $end
$var reg 1 6S oe_n_final $end
$var reg 1 7S out_final $end
$var reg 1 8S slow_final $end
$var reg 1 9S vtrip_sel_final $end
$var integer 32 :S msg_count_pad [31:0] $end
$var integer 32 ;S msg_count_pad1 [31:0] $end
$var integer 32 <S msg_count_pad10 [31:0] $end
$var integer 32 =S msg_count_pad11 [31:0] $end
$var integer 32 >S msg_count_pad12 [31:0] $end
$var integer 32 ?S msg_count_pad2 [31:0] $end
$var integer 32 @S msg_count_pad3 [31:0] $end
$var integer 32 AS msg_count_pad4 [31:0] $end
$var integer 32 BS msg_count_pad5 [31:0] $end
$var integer 32 CS msg_count_pad6 [31:0] $end
$var integer 32 DS msg_count_pad7 [31:0] $end
$var integer 32 ES msg_count_pad8 [31:0] $end
$var integer 32 FS msg_count_pad9 [31:0] $end
$var integer 32 GS slow_0_delay [31:0] $end
$var integer 32 HS slow_1_delay [31:0] $end
$var integer 32 IS slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area2_io_pad[14] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 i" ANALOG_EN $end
$var wire 1 1# ANALOG_POL $end
$var wire 1 W# ANALOG_SEL $end
$var wire 3 JS DM [2:0] $end
$var wire 1 3% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 Y% HLD_H_N $end
$var wire 1 !& HLD_OVR $end
$var wire 1 G& IB_MODE_SEL $end
$var wire 1 m& INP_DIS $end
$var wire 1 5' OE_N $end
$var wire 1 [' OUT $end
$var wire 1 C" PAD $end
$var wire 1 z PAD_A_ESD_0_H $end
$var wire 1 KS PAD_A_ESD_1_H $end
$var wire 1 LS PAD_A_NOESD_H $end
$var wire 1 #( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 I( VTRIP_SEL $end
$var wire 1 k/ TIE_LO_ESD $end
$var wire 1 MS TIE_HI_ESD $end
$var wire 1 NS IN_H $end
$var wire 1 30 IN $end
$var wire 1 k/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 OS event_error_vswitch5 $end
$var event 1 PS event_error_vswitch4 $end
$var event 1 QS event_error_vswitch3 $end
$var event 1 RS event_error_vswitch2 $end
$var event 1 SS event_error_vswitch1 $end
$var event 1 TS event_error_vddio_q2 $end
$var event 1 US event_error_vddio_q1 $end
$var event 1 VS event_error_vdda_vddioq_vswitch2 $end
$var event 1 WS event_error_vdda3 $end
$var event 1 XS event_error_vdda2 $end
$var event 1 YS event_error_vdda $end
$var event 1 ZS event_error_supply_good $end
$var event 1 [S event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 i" ANALOG_EN $end
$var wire 1 1# ANALOG_POL $end
$var wire 1 W# ANALOG_SEL $end
$var wire 3 \S DM [2:0] $end
$var wire 1 3% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 Y% HLD_H_N $end
$var wire 1 !& HLD_OVR $end
$var wire 1 G& IB_MODE_SEL $end
$var wire 1 m& INP_DIS $end
$var wire 1 5' OE_N $end
$var wire 1 [' OUT $end
$var wire 1 C" PAD $end
$var wire 1 z PAD_A_ESD_0_H $end
$var wire 1 KS PAD_A_ESD_1_H $end
$var wire 1 LS PAD_A_NOESD_H $end
$var wire 1 #( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 I( VTRIP_SEL $end
$var wire 3 ]S dm_buf [2:0] $end
$var wire 1 ^S error_enable_vddio $end
$var wire 1 _S error_supply_good $end
$var wire 1 `S error_vdda $end
$var wire 1 aS error_vdda2 $end
$var wire 1 bS error_vdda3 $end
$var wire 1 cS error_vdda_vddioq_vswitch2 $end
$var wire 1 dS error_vddio_q1 $end
$var wire 1 eS error_vddio_q2 $end
$var wire 1 fS error_vswitch1 $end
$var wire 1 gS error_vswitch2 $end
$var wire 1 hS error_vswitch3 $end
$var wire 1 iS error_vswitch4 $end
$var wire 1 jS error_vswitch5 $end
$var wire 1 kS functional_mode_amux $end
$var wire 1 lS hld_h_n_buf $end
$var wire 1 mS hld_ovr_buf $end
$var wire 1 nS ib_mode_sel_buf $end
$var wire 1 oS inp_dis_buf $end
$var wire 1 pS invalid_controls_amux $end
$var wire 1 qS oe_n_buf $end
$var wire 1 rS out_buf $end
$var wire 1 sS pad_tristate $end
$var wire 1 tS pwr_good_active_mode $end
$var wire 1 uS pwr_good_active_mode_vdda $end
$var wire 1 vS pwr_good_amux $end
$var wire 1 wS pwr_good_analog_en_vdda $end
$var wire 1 xS pwr_good_analog_en_vddio_q $end
$var wire 1 yS pwr_good_analog_en_vswitch $end
$var wire 1 zS pwr_good_hold_mode $end
$var wire 1 {S pwr_good_hold_mode_vdda $end
$var wire 1 |S pwr_good_hold_ovr_mode $end
$var wire 1 }S pwr_good_inpbuff_hv $end
$var wire 1 ~S pwr_good_inpbuff_lv $end
$var wire 1 !T pwr_good_output_driver $end
$var wire 1 "T slow_buf $end
$var wire 1 #T vtrip_sel_buf $end
$var wire 1 $T x_on_analog_en_vdda $end
$var wire 1 %T x_on_analog_en_vddio_q $end
$var wire 1 &T x_on_analog_en_vswitch $end
$var wire 1 'T x_on_in_hv $end
$var wire 1 (T x_on_in_lv $end
$var wire 1 )T x_on_pad $end
$var wire 1 *T zero_on_analog_en_vdda $end
$var wire 1 +T zero_on_analog_en_vddio_q $end
$var wire 1 ,T zero_on_analog_en_vswitch $end
$var wire 1 -T pwr_good_amux_vccd $end
$var wire 1 .T enable_pad_vssio_q $end
$var wire 1 /T enable_pad_vddio_q $end
$var wire 1 0T enable_pad_amuxbus_b $end
$var wire 1 1T enable_pad_amuxbus_a $end
$var wire 1 2T disable_inp_buff_lv $end
$var wire 1 3T disable_inp_buff $end
$var wire 3 4T amux_select [2:0] $end
$var wire 1 k/ TIE_LO_ESD $end
$var wire 1 MS TIE_HI_ESD $end
$var wire 1 NS IN_H $end
$var wire 1 30 IN $end
$var wire 1 k/ ENABLE_INP_H $end
$var reg 1 5T analog_en_final $end
$var reg 1 6T analog_en_vdda $end
$var reg 1 7T analog_en_vddio_q $end
$var reg 1 8T analog_en_vswitch $end
$var reg 1 9T dis_err_msgs $end
$var reg 3 :T dm_final [2:0] $end
$var reg 1 ;T hld_ovr_final $end
$var reg 1 <T ib_mode_sel_final $end
$var reg 1 =T inp_dis_final $end
$var reg 1 >T notifier_dm $end
$var reg 1 ?T notifier_enable_h $end
$var reg 1 @T notifier_hld_ovr $end
$var reg 1 AT notifier_ib_mode_sel $end
$var reg 1 BT notifier_inp_dis $end
$var reg 1 CT notifier_oe_n $end
$var reg 1 DT notifier_out $end
$var reg 1 ET notifier_slow $end
$var reg 1 FT notifier_vtrip_sel $end
$var reg 1 GT oe_n_final $end
$var reg 1 HT out_final $end
$var reg 1 IT slow_final $end
$var reg 1 JT vtrip_sel_final $end
$var integer 32 KT msg_count_pad [31:0] $end
$var integer 32 LT msg_count_pad1 [31:0] $end
$var integer 32 MT msg_count_pad10 [31:0] $end
$var integer 32 NT msg_count_pad11 [31:0] $end
$var integer 32 OT msg_count_pad12 [31:0] $end
$var integer 32 PT msg_count_pad2 [31:0] $end
$var integer 32 QT msg_count_pad3 [31:0] $end
$var integer 32 RT msg_count_pad4 [31:0] $end
$var integer 32 ST msg_count_pad5 [31:0] $end
$var integer 32 TT msg_count_pad6 [31:0] $end
$var integer 32 UT msg_count_pad7 [31:0] $end
$var integer 32 VT msg_count_pad8 [31:0] $end
$var integer 32 WT msg_count_pad9 [31:0] $end
$var integer 32 XT slow_0_delay [31:0] $end
$var integer 32 YT slow_1_delay [31:0] $end
$var integer 32 ZT slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area2_io_pad[15] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 j" ANALOG_EN $end
$var wire 1 2# ANALOG_POL $end
$var wire 1 X# ANALOG_SEL $end
$var wire 3 [T DM [2:0] $end
$var wire 1 4% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 Z% HLD_H_N $end
$var wire 1 "& HLD_OVR $end
$var wire 1 H& IB_MODE_SEL $end
$var wire 1 n& INP_DIS $end
$var wire 1 6' OE_N $end
$var wire 1 \' OUT $end
$var wire 1 D" PAD $end
$var wire 1 { PAD_A_ESD_0_H $end
$var wire 1 \T PAD_A_ESD_1_H $end
$var wire 1 ]T PAD_A_NOESD_H $end
$var wire 1 $( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 J( VTRIP_SEL $end
$var wire 1 j/ TIE_LO_ESD $end
$var wire 1 ^T TIE_HI_ESD $end
$var wire 1 _T IN_H $end
$var wire 1 20 IN $end
$var wire 1 j/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 `T event_error_vswitch5 $end
$var event 1 aT event_error_vswitch4 $end
$var event 1 bT event_error_vswitch3 $end
$var event 1 cT event_error_vswitch2 $end
$var event 1 dT event_error_vswitch1 $end
$var event 1 eT event_error_vddio_q2 $end
$var event 1 fT event_error_vddio_q1 $end
$var event 1 gT event_error_vdda_vddioq_vswitch2 $end
$var event 1 hT event_error_vdda3 $end
$var event 1 iT event_error_vdda2 $end
$var event 1 jT event_error_vdda $end
$var event 1 kT event_error_supply_good $end
$var event 1 lT event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 j" ANALOG_EN $end
$var wire 1 2# ANALOG_POL $end
$var wire 1 X# ANALOG_SEL $end
$var wire 3 mT DM [2:0] $end
$var wire 1 4% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 Z% HLD_H_N $end
$var wire 1 "& HLD_OVR $end
$var wire 1 H& IB_MODE_SEL $end
$var wire 1 n& INP_DIS $end
$var wire 1 6' OE_N $end
$var wire 1 \' OUT $end
$var wire 1 D" PAD $end
$var wire 1 { PAD_A_ESD_0_H $end
$var wire 1 \T PAD_A_ESD_1_H $end
$var wire 1 ]T PAD_A_NOESD_H $end
$var wire 1 $( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 J( VTRIP_SEL $end
$var wire 3 nT dm_buf [2:0] $end
$var wire 1 oT error_enable_vddio $end
$var wire 1 pT error_supply_good $end
$var wire 1 qT error_vdda $end
$var wire 1 rT error_vdda2 $end
$var wire 1 sT error_vdda3 $end
$var wire 1 tT error_vdda_vddioq_vswitch2 $end
$var wire 1 uT error_vddio_q1 $end
$var wire 1 vT error_vddio_q2 $end
$var wire 1 wT error_vswitch1 $end
$var wire 1 xT error_vswitch2 $end
$var wire 1 yT error_vswitch3 $end
$var wire 1 zT error_vswitch4 $end
$var wire 1 {T error_vswitch5 $end
$var wire 1 |T functional_mode_amux $end
$var wire 1 }T hld_h_n_buf $end
$var wire 1 ~T hld_ovr_buf $end
$var wire 1 !U ib_mode_sel_buf $end
$var wire 1 "U inp_dis_buf $end
$var wire 1 #U invalid_controls_amux $end
$var wire 1 $U oe_n_buf $end
$var wire 1 %U out_buf $end
$var wire 1 &U pad_tristate $end
$var wire 1 'U pwr_good_active_mode $end
$var wire 1 (U pwr_good_active_mode_vdda $end
$var wire 1 )U pwr_good_amux $end
$var wire 1 *U pwr_good_analog_en_vdda $end
$var wire 1 +U pwr_good_analog_en_vddio_q $end
$var wire 1 ,U pwr_good_analog_en_vswitch $end
$var wire 1 -U pwr_good_hold_mode $end
$var wire 1 .U pwr_good_hold_mode_vdda $end
$var wire 1 /U pwr_good_hold_ovr_mode $end
$var wire 1 0U pwr_good_inpbuff_hv $end
$var wire 1 1U pwr_good_inpbuff_lv $end
$var wire 1 2U pwr_good_output_driver $end
$var wire 1 3U slow_buf $end
$var wire 1 4U vtrip_sel_buf $end
$var wire 1 5U x_on_analog_en_vdda $end
$var wire 1 6U x_on_analog_en_vddio_q $end
$var wire 1 7U x_on_analog_en_vswitch $end
$var wire 1 8U x_on_in_hv $end
$var wire 1 9U x_on_in_lv $end
$var wire 1 :U x_on_pad $end
$var wire 1 ;U zero_on_analog_en_vdda $end
$var wire 1 <U zero_on_analog_en_vddio_q $end
$var wire 1 =U zero_on_analog_en_vswitch $end
$var wire 1 >U pwr_good_amux_vccd $end
$var wire 1 ?U enable_pad_vssio_q $end
$var wire 1 @U enable_pad_vddio_q $end
$var wire 1 AU enable_pad_amuxbus_b $end
$var wire 1 BU enable_pad_amuxbus_a $end
$var wire 1 CU disable_inp_buff_lv $end
$var wire 1 DU disable_inp_buff $end
$var wire 3 EU amux_select [2:0] $end
$var wire 1 j/ TIE_LO_ESD $end
$var wire 1 ^T TIE_HI_ESD $end
$var wire 1 _T IN_H $end
$var wire 1 20 IN $end
$var wire 1 j/ ENABLE_INP_H $end
$var reg 1 FU analog_en_final $end
$var reg 1 GU analog_en_vdda $end
$var reg 1 HU analog_en_vddio_q $end
$var reg 1 IU analog_en_vswitch $end
$var reg 1 JU dis_err_msgs $end
$var reg 3 KU dm_final [2:0] $end
$var reg 1 LU hld_ovr_final $end
$var reg 1 MU ib_mode_sel_final $end
$var reg 1 NU inp_dis_final $end
$var reg 1 OU notifier_dm $end
$var reg 1 PU notifier_enable_h $end
$var reg 1 QU notifier_hld_ovr $end
$var reg 1 RU notifier_ib_mode_sel $end
$var reg 1 SU notifier_inp_dis $end
$var reg 1 TU notifier_oe_n $end
$var reg 1 UU notifier_out $end
$var reg 1 VU notifier_slow $end
$var reg 1 WU notifier_vtrip_sel $end
$var reg 1 XU oe_n_final $end
$var reg 1 YU out_final $end
$var reg 1 ZU slow_final $end
$var reg 1 [U vtrip_sel_final $end
$var integer 32 \U msg_count_pad [31:0] $end
$var integer 32 ]U msg_count_pad1 [31:0] $end
$var integer 32 ^U msg_count_pad10 [31:0] $end
$var integer 32 _U msg_count_pad11 [31:0] $end
$var integer 32 `U msg_count_pad12 [31:0] $end
$var integer 32 aU msg_count_pad2 [31:0] $end
$var integer 32 bU msg_count_pad3 [31:0] $end
$var integer 32 cU msg_count_pad4 [31:0] $end
$var integer 32 dU msg_count_pad5 [31:0] $end
$var integer 32 eU msg_count_pad6 [31:0] $end
$var integer 32 fU msg_count_pad7 [31:0] $end
$var integer 32 gU msg_count_pad8 [31:0] $end
$var integer 32 hU msg_count_pad9 [31:0] $end
$var integer 32 iU slow_0_delay [31:0] $end
$var integer 32 jU slow_1_delay [31:0] $end
$var integer 32 kU slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area2_io_pad[16] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 k" ANALOG_EN $end
$var wire 1 3# ANALOG_POL $end
$var wire 1 Y# ANALOG_SEL $end
$var wire 3 lU DM [2:0] $end
$var wire 1 5% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 [% HLD_H_N $end
$var wire 1 #& HLD_OVR $end
$var wire 1 I& IB_MODE_SEL $end
$var wire 1 o& INP_DIS $end
$var wire 1 7' OE_N $end
$var wire 1 ]' OUT $end
$var wire 1 E" PAD $end
$var wire 1 | PAD_A_ESD_0_H $end
$var wire 1 mU PAD_A_ESD_1_H $end
$var wire 1 nU PAD_A_NOESD_H $end
$var wire 1 %( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 K( VTRIP_SEL $end
$var wire 1 i/ TIE_LO_ESD $end
$var wire 1 oU TIE_HI_ESD $end
$var wire 1 pU IN_H $end
$var wire 1 10 IN $end
$var wire 1 i/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 qU event_error_vswitch5 $end
$var event 1 rU event_error_vswitch4 $end
$var event 1 sU event_error_vswitch3 $end
$var event 1 tU event_error_vswitch2 $end
$var event 1 uU event_error_vswitch1 $end
$var event 1 vU event_error_vddio_q2 $end
$var event 1 wU event_error_vddio_q1 $end
$var event 1 xU event_error_vdda_vddioq_vswitch2 $end
$var event 1 yU event_error_vdda3 $end
$var event 1 zU event_error_vdda2 $end
$var event 1 {U event_error_vdda $end
$var event 1 |U event_error_supply_good $end
$var event 1 }U event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 k" ANALOG_EN $end
$var wire 1 3# ANALOG_POL $end
$var wire 1 Y# ANALOG_SEL $end
$var wire 3 ~U DM [2:0] $end
$var wire 1 5% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 [% HLD_H_N $end
$var wire 1 #& HLD_OVR $end
$var wire 1 I& IB_MODE_SEL $end
$var wire 1 o& INP_DIS $end
$var wire 1 7' OE_N $end
$var wire 1 ]' OUT $end
$var wire 1 E" PAD $end
$var wire 1 | PAD_A_ESD_0_H $end
$var wire 1 mU PAD_A_ESD_1_H $end
$var wire 1 nU PAD_A_NOESD_H $end
$var wire 1 %( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 K( VTRIP_SEL $end
$var wire 3 !V dm_buf [2:0] $end
$var wire 1 "V error_enable_vddio $end
$var wire 1 #V error_supply_good $end
$var wire 1 $V error_vdda $end
$var wire 1 %V error_vdda2 $end
$var wire 1 &V error_vdda3 $end
$var wire 1 'V error_vdda_vddioq_vswitch2 $end
$var wire 1 (V error_vddio_q1 $end
$var wire 1 )V error_vddio_q2 $end
$var wire 1 *V error_vswitch1 $end
$var wire 1 +V error_vswitch2 $end
$var wire 1 ,V error_vswitch3 $end
$var wire 1 -V error_vswitch4 $end
$var wire 1 .V error_vswitch5 $end
$var wire 1 /V functional_mode_amux $end
$var wire 1 0V hld_h_n_buf $end
$var wire 1 1V hld_ovr_buf $end
$var wire 1 2V ib_mode_sel_buf $end
$var wire 1 3V inp_dis_buf $end
$var wire 1 4V invalid_controls_amux $end
$var wire 1 5V oe_n_buf $end
$var wire 1 6V out_buf $end
$var wire 1 7V pad_tristate $end
$var wire 1 8V pwr_good_active_mode $end
$var wire 1 9V pwr_good_active_mode_vdda $end
$var wire 1 :V pwr_good_amux $end
$var wire 1 ;V pwr_good_analog_en_vdda $end
$var wire 1 <V pwr_good_analog_en_vddio_q $end
$var wire 1 =V pwr_good_analog_en_vswitch $end
$var wire 1 >V pwr_good_hold_mode $end
$var wire 1 ?V pwr_good_hold_mode_vdda $end
$var wire 1 @V pwr_good_hold_ovr_mode $end
$var wire 1 AV pwr_good_inpbuff_hv $end
$var wire 1 BV pwr_good_inpbuff_lv $end
$var wire 1 CV pwr_good_output_driver $end
$var wire 1 DV slow_buf $end
$var wire 1 EV vtrip_sel_buf $end
$var wire 1 FV x_on_analog_en_vdda $end
$var wire 1 GV x_on_analog_en_vddio_q $end
$var wire 1 HV x_on_analog_en_vswitch $end
$var wire 1 IV x_on_in_hv $end
$var wire 1 JV x_on_in_lv $end
$var wire 1 KV x_on_pad $end
$var wire 1 LV zero_on_analog_en_vdda $end
$var wire 1 MV zero_on_analog_en_vddio_q $end
$var wire 1 NV zero_on_analog_en_vswitch $end
$var wire 1 OV pwr_good_amux_vccd $end
$var wire 1 PV enable_pad_vssio_q $end
$var wire 1 QV enable_pad_vddio_q $end
$var wire 1 RV enable_pad_amuxbus_b $end
$var wire 1 SV enable_pad_amuxbus_a $end
$var wire 1 TV disable_inp_buff_lv $end
$var wire 1 UV disable_inp_buff $end
$var wire 3 VV amux_select [2:0] $end
$var wire 1 i/ TIE_LO_ESD $end
$var wire 1 oU TIE_HI_ESD $end
$var wire 1 pU IN_H $end
$var wire 1 10 IN $end
$var wire 1 i/ ENABLE_INP_H $end
$var reg 1 WV analog_en_final $end
$var reg 1 XV analog_en_vdda $end
$var reg 1 YV analog_en_vddio_q $end
$var reg 1 ZV analog_en_vswitch $end
$var reg 1 [V dis_err_msgs $end
$var reg 3 \V dm_final [2:0] $end
$var reg 1 ]V hld_ovr_final $end
$var reg 1 ^V ib_mode_sel_final $end
$var reg 1 _V inp_dis_final $end
$var reg 1 `V notifier_dm $end
$var reg 1 aV notifier_enable_h $end
$var reg 1 bV notifier_hld_ovr $end
$var reg 1 cV notifier_ib_mode_sel $end
$var reg 1 dV notifier_inp_dis $end
$var reg 1 eV notifier_oe_n $end
$var reg 1 fV notifier_out $end
$var reg 1 gV notifier_slow $end
$var reg 1 hV notifier_vtrip_sel $end
$var reg 1 iV oe_n_final $end
$var reg 1 jV out_final $end
$var reg 1 kV slow_final $end
$var reg 1 lV vtrip_sel_final $end
$var integer 32 mV msg_count_pad [31:0] $end
$var integer 32 nV msg_count_pad1 [31:0] $end
$var integer 32 oV msg_count_pad10 [31:0] $end
$var integer 32 pV msg_count_pad11 [31:0] $end
$var integer 32 qV msg_count_pad12 [31:0] $end
$var integer 32 rV msg_count_pad2 [31:0] $end
$var integer 32 sV msg_count_pad3 [31:0] $end
$var integer 32 tV msg_count_pad4 [31:0] $end
$var integer 32 uV msg_count_pad5 [31:0] $end
$var integer 32 vV msg_count_pad6 [31:0] $end
$var integer 32 wV msg_count_pad7 [31:0] $end
$var integer 32 xV msg_count_pad8 [31:0] $end
$var integer 32 yV msg_count_pad9 [31:0] $end
$var integer 32 zV slow_0_delay [31:0] $end
$var integer 32 {V slow_1_delay [31:0] $end
$var integer 32 |V slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area2_io_pad[17] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 l" ANALOG_EN $end
$var wire 1 4# ANALOG_POL $end
$var wire 1 Z# ANALOG_SEL $end
$var wire 3 }V DM [2:0] $end
$var wire 1 6% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 \% HLD_H_N $end
$var wire 1 $& HLD_OVR $end
$var wire 1 J& IB_MODE_SEL $end
$var wire 1 p& INP_DIS $end
$var wire 1 8' OE_N $end
$var wire 1 ^' OUT $end
$var wire 1 F" PAD $end
$var wire 1 } PAD_A_ESD_0_H $end
$var wire 1 ~V PAD_A_ESD_1_H $end
$var wire 1 !W PAD_A_NOESD_H $end
$var wire 1 &( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 L( VTRIP_SEL $end
$var wire 1 h/ TIE_LO_ESD $end
$var wire 1 "W TIE_HI_ESD $end
$var wire 1 #W IN_H $end
$var wire 1 00 IN $end
$var wire 1 h/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 $W event_error_vswitch5 $end
$var event 1 %W event_error_vswitch4 $end
$var event 1 &W event_error_vswitch3 $end
$var event 1 'W event_error_vswitch2 $end
$var event 1 (W event_error_vswitch1 $end
$var event 1 )W event_error_vddio_q2 $end
$var event 1 *W event_error_vddio_q1 $end
$var event 1 +W event_error_vdda_vddioq_vswitch2 $end
$var event 1 ,W event_error_vdda3 $end
$var event 1 -W event_error_vdda2 $end
$var event 1 .W event_error_vdda $end
$var event 1 /W event_error_supply_good $end
$var event 1 0W event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 l" ANALOG_EN $end
$var wire 1 4# ANALOG_POL $end
$var wire 1 Z# ANALOG_SEL $end
$var wire 3 1W DM [2:0] $end
$var wire 1 6% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 \% HLD_H_N $end
$var wire 1 $& HLD_OVR $end
$var wire 1 J& IB_MODE_SEL $end
$var wire 1 p& INP_DIS $end
$var wire 1 8' OE_N $end
$var wire 1 ^' OUT $end
$var wire 1 F" PAD $end
$var wire 1 } PAD_A_ESD_0_H $end
$var wire 1 ~V PAD_A_ESD_1_H $end
$var wire 1 !W PAD_A_NOESD_H $end
$var wire 1 &( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 L( VTRIP_SEL $end
$var wire 3 2W dm_buf [2:0] $end
$var wire 1 3W error_enable_vddio $end
$var wire 1 4W error_supply_good $end
$var wire 1 5W error_vdda $end
$var wire 1 6W error_vdda2 $end
$var wire 1 7W error_vdda3 $end
$var wire 1 8W error_vdda_vddioq_vswitch2 $end
$var wire 1 9W error_vddio_q1 $end
$var wire 1 :W error_vddio_q2 $end
$var wire 1 ;W error_vswitch1 $end
$var wire 1 <W error_vswitch2 $end
$var wire 1 =W error_vswitch3 $end
$var wire 1 >W error_vswitch4 $end
$var wire 1 ?W error_vswitch5 $end
$var wire 1 @W functional_mode_amux $end
$var wire 1 AW hld_h_n_buf $end
$var wire 1 BW hld_ovr_buf $end
$var wire 1 CW ib_mode_sel_buf $end
$var wire 1 DW inp_dis_buf $end
$var wire 1 EW invalid_controls_amux $end
$var wire 1 FW oe_n_buf $end
$var wire 1 GW out_buf $end
$var wire 1 HW pad_tristate $end
$var wire 1 IW pwr_good_active_mode $end
$var wire 1 JW pwr_good_active_mode_vdda $end
$var wire 1 KW pwr_good_amux $end
$var wire 1 LW pwr_good_analog_en_vdda $end
$var wire 1 MW pwr_good_analog_en_vddio_q $end
$var wire 1 NW pwr_good_analog_en_vswitch $end
$var wire 1 OW pwr_good_hold_mode $end
$var wire 1 PW pwr_good_hold_mode_vdda $end
$var wire 1 QW pwr_good_hold_ovr_mode $end
$var wire 1 RW pwr_good_inpbuff_hv $end
$var wire 1 SW pwr_good_inpbuff_lv $end
$var wire 1 TW pwr_good_output_driver $end
$var wire 1 UW slow_buf $end
$var wire 1 VW vtrip_sel_buf $end
$var wire 1 WW x_on_analog_en_vdda $end
$var wire 1 XW x_on_analog_en_vddio_q $end
$var wire 1 YW x_on_analog_en_vswitch $end
$var wire 1 ZW x_on_in_hv $end
$var wire 1 [W x_on_in_lv $end
$var wire 1 \W x_on_pad $end
$var wire 1 ]W zero_on_analog_en_vdda $end
$var wire 1 ^W zero_on_analog_en_vddio_q $end
$var wire 1 _W zero_on_analog_en_vswitch $end
$var wire 1 `W pwr_good_amux_vccd $end
$var wire 1 aW enable_pad_vssio_q $end
$var wire 1 bW enable_pad_vddio_q $end
$var wire 1 cW enable_pad_amuxbus_b $end
$var wire 1 dW enable_pad_amuxbus_a $end
$var wire 1 eW disable_inp_buff_lv $end
$var wire 1 fW disable_inp_buff $end
$var wire 3 gW amux_select [2:0] $end
$var wire 1 h/ TIE_LO_ESD $end
$var wire 1 "W TIE_HI_ESD $end
$var wire 1 #W IN_H $end
$var wire 1 00 IN $end
$var wire 1 h/ ENABLE_INP_H $end
$var reg 1 hW analog_en_final $end
$var reg 1 iW analog_en_vdda $end
$var reg 1 jW analog_en_vddio_q $end
$var reg 1 kW analog_en_vswitch $end
$var reg 1 lW dis_err_msgs $end
$var reg 3 mW dm_final [2:0] $end
$var reg 1 nW hld_ovr_final $end
$var reg 1 oW ib_mode_sel_final $end
$var reg 1 pW inp_dis_final $end
$var reg 1 qW notifier_dm $end
$var reg 1 rW notifier_enable_h $end
$var reg 1 sW notifier_hld_ovr $end
$var reg 1 tW notifier_ib_mode_sel $end
$var reg 1 uW notifier_inp_dis $end
$var reg 1 vW notifier_oe_n $end
$var reg 1 wW notifier_out $end
$var reg 1 xW notifier_slow $end
$var reg 1 yW notifier_vtrip_sel $end
$var reg 1 zW oe_n_final $end
$var reg 1 {W out_final $end
$var reg 1 |W slow_final $end
$var reg 1 }W vtrip_sel_final $end
$var integer 32 ~W msg_count_pad [31:0] $end
$var integer 32 !X msg_count_pad1 [31:0] $end
$var integer 32 "X msg_count_pad10 [31:0] $end
$var integer 32 #X msg_count_pad11 [31:0] $end
$var integer 32 $X msg_count_pad12 [31:0] $end
$var integer 32 %X msg_count_pad2 [31:0] $end
$var integer 32 &X msg_count_pad3 [31:0] $end
$var integer 32 'X msg_count_pad4 [31:0] $end
$var integer 32 (X msg_count_pad5 [31:0] $end
$var integer 32 )X msg_count_pad6 [31:0] $end
$var integer 32 *X msg_count_pad7 [31:0] $end
$var integer 32 +X msg_count_pad8 [31:0] $end
$var integer 32 ,X msg_count_pad9 [31:0] $end
$var integer 32 -X slow_0_delay [31:0] $end
$var integer 32 .X slow_1_delay [31:0] $end
$var integer 32 /X slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area2_io_pad[18] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 m" ANALOG_EN $end
$var wire 1 5# ANALOG_POL $end
$var wire 1 [# ANALOG_SEL $end
$var wire 3 0X DM [2:0] $end
$var wire 1 7% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 ]% HLD_H_N $end
$var wire 1 %& HLD_OVR $end
$var wire 1 K& IB_MODE_SEL $end
$var wire 1 q& INP_DIS $end
$var wire 1 9' OE_N $end
$var wire 1 _' OUT $end
$var wire 1 G" PAD $end
$var wire 1 ~ PAD_A_ESD_0_H $end
$var wire 1 1X PAD_A_ESD_1_H $end
$var wire 1 2X PAD_A_NOESD_H $end
$var wire 1 '( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 M( VTRIP_SEL $end
$var wire 1 g/ TIE_LO_ESD $end
$var wire 1 3X TIE_HI_ESD $end
$var wire 1 4X IN_H $end
$var wire 1 /0 IN $end
$var wire 1 g/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 5X event_error_vswitch5 $end
$var event 1 6X event_error_vswitch4 $end
$var event 1 7X event_error_vswitch3 $end
$var event 1 8X event_error_vswitch2 $end
$var event 1 9X event_error_vswitch1 $end
$var event 1 :X event_error_vddio_q2 $end
$var event 1 ;X event_error_vddio_q1 $end
$var event 1 <X event_error_vdda_vddioq_vswitch2 $end
$var event 1 =X event_error_vdda3 $end
$var event 1 >X event_error_vdda2 $end
$var event 1 ?X event_error_vdda $end
$var event 1 @X event_error_supply_good $end
$var event 1 AX event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 m" ANALOG_EN $end
$var wire 1 5# ANALOG_POL $end
$var wire 1 [# ANALOG_SEL $end
$var wire 3 BX DM [2:0] $end
$var wire 1 7% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 ]% HLD_H_N $end
$var wire 1 %& HLD_OVR $end
$var wire 1 K& IB_MODE_SEL $end
$var wire 1 q& INP_DIS $end
$var wire 1 9' OE_N $end
$var wire 1 _' OUT $end
$var wire 1 G" PAD $end
$var wire 1 ~ PAD_A_ESD_0_H $end
$var wire 1 1X PAD_A_ESD_1_H $end
$var wire 1 2X PAD_A_NOESD_H $end
$var wire 1 '( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 M( VTRIP_SEL $end
$var wire 3 CX dm_buf [2:0] $end
$var wire 1 DX error_enable_vddio $end
$var wire 1 EX error_supply_good $end
$var wire 1 FX error_vdda $end
$var wire 1 GX error_vdda2 $end
$var wire 1 HX error_vdda3 $end
$var wire 1 IX error_vdda_vddioq_vswitch2 $end
$var wire 1 JX error_vddio_q1 $end
$var wire 1 KX error_vddio_q2 $end
$var wire 1 LX error_vswitch1 $end
$var wire 1 MX error_vswitch2 $end
$var wire 1 NX error_vswitch3 $end
$var wire 1 OX error_vswitch4 $end
$var wire 1 PX error_vswitch5 $end
$var wire 1 QX functional_mode_amux $end
$var wire 1 RX hld_h_n_buf $end
$var wire 1 SX hld_ovr_buf $end
$var wire 1 TX ib_mode_sel_buf $end
$var wire 1 UX inp_dis_buf $end
$var wire 1 VX invalid_controls_amux $end
$var wire 1 WX oe_n_buf $end
$var wire 1 XX out_buf $end
$var wire 1 YX pad_tristate $end
$var wire 1 ZX pwr_good_active_mode $end
$var wire 1 [X pwr_good_active_mode_vdda $end
$var wire 1 \X pwr_good_amux $end
$var wire 1 ]X pwr_good_analog_en_vdda $end
$var wire 1 ^X pwr_good_analog_en_vddio_q $end
$var wire 1 _X pwr_good_analog_en_vswitch $end
$var wire 1 `X pwr_good_hold_mode $end
$var wire 1 aX pwr_good_hold_mode_vdda $end
$var wire 1 bX pwr_good_hold_ovr_mode $end
$var wire 1 cX pwr_good_inpbuff_hv $end
$var wire 1 dX pwr_good_inpbuff_lv $end
$var wire 1 eX pwr_good_output_driver $end
$var wire 1 fX slow_buf $end
$var wire 1 gX vtrip_sel_buf $end
$var wire 1 hX x_on_analog_en_vdda $end
$var wire 1 iX x_on_analog_en_vddio_q $end
$var wire 1 jX x_on_analog_en_vswitch $end
$var wire 1 kX x_on_in_hv $end
$var wire 1 lX x_on_in_lv $end
$var wire 1 mX x_on_pad $end
$var wire 1 nX zero_on_analog_en_vdda $end
$var wire 1 oX zero_on_analog_en_vddio_q $end
$var wire 1 pX zero_on_analog_en_vswitch $end
$var wire 1 qX pwr_good_amux_vccd $end
$var wire 1 rX enable_pad_vssio_q $end
$var wire 1 sX enable_pad_vddio_q $end
$var wire 1 tX enable_pad_amuxbus_b $end
$var wire 1 uX enable_pad_amuxbus_a $end
$var wire 1 vX disable_inp_buff_lv $end
$var wire 1 wX disable_inp_buff $end
$var wire 3 xX amux_select [2:0] $end
$var wire 1 g/ TIE_LO_ESD $end
$var wire 1 3X TIE_HI_ESD $end
$var wire 1 4X IN_H $end
$var wire 1 /0 IN $end
$var wire 1 g/ ENABLE_INP_H $end
$var reg 1 yX analog_en_final $end
$var reg 1 zX analog_en_vdda $end
$var reg 1 {X analog_en_vddio_q $end
$var reg 1 |X analog_en_vswitch $end
$var reg 1 }X dis_err_msgs $end
$var reg 3 ~X dm_final [2:0] $end
$var reg 1 !Y hld_ovr_final $end
$var reg 1 "Y ib_mode_sel_final $end
$var reg 1 #Y inp_dis_final $end
$var reg 1 $Y notifier_dm $end
$var reg 1 %Y notifier_enable_h $end
$var reg 1 &Y notifier_hld_ovr $end
$var reg 1 'Y notifier_ib_mode_sel $end
$var reg 1 (Y notifier_inp_dis $end
$var reg 1 )Y notifier_oe_n $end
$var reg 1 *Y notifier_out $end
$var reg 1 +Y notifier_slow $end
$var reg 1 ,Y notifier_vtrip_sel $end
$var reg 1 -Y oe_n_final $end
$var reg 1 .Y out_final $end
$var reg 1 /Y slow_final $end
$var reg 1 0Y vtrip_sel_final $end
$var integer 32 1Y msg_count_pad [31:0] $end
$var integer 32 2Y msg_count_pad1 [31:0] $end
$var integer 32 3Y msg_count_pad10 [31:0] $end
$var integer 32 4Y msg_count_pad11 [31:0] $end
$var integer 32 5Y msg_count_pad12 [31:0] $end
$var integer 32 6Y msg_count_pad2 [31:0] $end
$var integer 32 7Y msg_count_pad3 [31:0] $end
$var integer 32 8Y msg_count_pad4 [31:0] $end
$var integer 32 9Y msg_count_pad5 [31:0] $end
$var integer 32 :Y msg_count_pad6 [31:0] $end
$var integer 32 ;Y msg_count_pad7 [31:0] $end
$var integer 32 <Y msg_count_pad8 [31:0] $end
$var integer 32 =Y msg_count_pad9 [31:0] $end
$var integer 32 >Y slow_0_delay [31:0] $end
$var integer 32 ?Y slow_1_delay [31:0] $end
$var integer 32 @Y slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area2_io_pad[19] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 n" ANALOG_EN $end
$var wire 1 6# ANALOG_POL $end
$var wire 1 \# ANALOG_SEL $end
$var wire 3 AY DM [2:0] $end
$var wire 1 8% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 ^% HLD_H_N $end
$var wire 1 && HLD_OVR $end
$var wire 1 L& IB_MODE_SEL $end
$var wire 1 r& INP_DIS $end
$var wire 1 :' OE_N $end
$var wire 1 `' OUT $end
$var wire 1 H" PAD $end
$var wire 1 "" PAD_A_ESD_0_H $end
$var wire 1 BY PAD_A_ESD_1_H $end
$var wire 1 CY PAD_A_NOESD_H $end
$var wire 1 (( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 N( VTRIP_SEL $end
$var wire 1 f/ TIE_LO_ESD $end
$var wire 1 DY TIE_HI_ESD $end
$var wire 1 EY IN_H $end
$var wire 1 .0 IN $end
$var wire 1 f/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 FY event_error_vswitch5 $end
$var event 1 GY event_error_vswitch4 $end
$var event 1 HY event_error_vswitch3 $end
$var event 1 IY event_error_vswitch2 $end
$var event 1 JY event_error_vswitch1 $end
$var event 1 KY event_error_vddio_q2 $end
$var event 1 LY event_error_vddio_q1 $end
$var event 1 MY event_error_vdda_vddioq_vswitch2 $end
$var event 1 NY event_error_vdda3 $end
$var event 1 OY event_error_vdda2 $end
$var event 1 PY event_error_vdda $end
$var event 1 QY event_error_supply_good $end
$var event 1 RY event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 n" ANALOG_EN $end
$var wire 1 6# ANALOG_POL $end
$var wire 1 \# ANALOG_SEL $end
$var wire 3 SY DM [2:0] $end
$var wire 1 8% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 ^% HLD_H_N $end
$var wire 1 && HLD_OVR $end
$var wire 1 L& IB_MODE_SEL $end
$var wire 1 r& INP_DIS $end
$var wire 1 :' OE_N $end
$var wire 1 `' OUT $end
$var wire 1 H" PAD $end
$var wire 1 "" PAD_A_ESD_0_H $end
$var wire 1 BY PAD_A_ESD_1_H $end
$var wire 1 CY PAD_A_NOESD_H $end
$var wire 1 (( SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 N( VTRIP_SEL $end
$var wire 3 TY dm_buf [2:0] $end
$var wire 1 UY error_enable_vddio $end
$var wire 1 VY error_supply_good $end
$var wire 1 WY error_vdda $end
$var wire 1 XY error_vdda2 $end
$var wire 1 YY error_vdda3 $end
$var wire 1 ZY error_vdda_vddioq_vswitch2 $end
$var wire 1 [Y error_vddio_q1 $end
$var wire 1 \Y error_vddio_q2 $end
$var wire 1 ]Y error_vswitch1 $end
$var wire 1 ^Y error_vswitch2 $end
$var wire 1 _Y error_vswitch3 $end
$var wire 1 `Y error_vswitch4 $end
$var wire 1 aY error_vswitch5 $end
$var wire 1 bY functional_mode_amux $end
$var wire 1 cY hld_h_n_buf $end
$var wire 1 dY hld_ovr_buf $end
$var wire 1 eY ib_mode_sel_buf $end
$var wire 1 fY inp_dis_buf $end
$var wire 1 gY invalid_controls_amux $end
$var wire 1 hY oe_n_buf $end
$var wire 1 iY out_buf $end
$var wire 1 jY pad_tristate $end
$var wire 1 kY pwr_good_active_mode $end
$var wire 1 lY pwr_good_active_mode_vdda $end
$var wire 1 mY pwr_good_amux $end
$var wire 1 nY pwr_good_analog_en_vdda $end
$var wire 1 oY pwr_good_analog_en_vddio_q $end
$var wire 1 pY pwr_good_analog_en_vswitch $end
$var wire 1 qY pwr_good_hold_mode $end
$var wire 1 rY pwr_good_hold_mode_vdda $end
$var wire 1 sY pwr_good_hold_ovr_mode $end
$var wire 1 tY pwr_good_inpbuff_hv $end
$var wire 1 uY pwr_good_inpbuff_lv $end
$var wire 1 vY pwr_good_output_driver $end
$var wire 1 wY slow_buf $end
$var wire 1 xY vtrip_sel_buf $end
$var wire 1 yY x_on_analog_en_vdda $end
$var wire 1 zY x_on_analog_en_vddio_q $end
$var wire 1 {Y x_on_analog_en_vswitch $end
$var wire 1 |Y x_on_in_hv $end
$var wire 1 }Y x_on_in_lv $end
$var wire 1 ~Y x_on_pad $end
$var wire 1 !Z zero_on_analog_en_vdda $end
$var wire 1 "Z zero_on_analog_en_vddio_q $end
$var wire 1 #Z zero_on_analog_en_vswitch $end
$var wire 1 $Z pwr_good_amux_vccd $end
$var wire 1 %Z enable_pad_vssio_q $end
$var wire 1 &Z enable_pad_vddio_q $end
$var wire 1 'Z enable_pad_amuxbus_b $end
$var wire 1 (Z enable_pad_amuxbus_a $end
$var wire 1 )Z disable_inp_buff_lv $end
$var wire 1 *Z disable_inp_buff $end
$var wire 3 +Z amux_select [2:0] $end
$var wire 1 f/ TIE_LO_ESD $end
$var wire 1 DY TIE_HI_ESD $end
$var wire 1 EY IN_H $end
$var wire 1 .0 IN $end
$var wire 1 f/ ENABLE_INP_H $end
$var reg 1 ,Z analog_en_final $end
$var reg 1 -Z analog_en_vdda $end
$var reg 1 .Z analog_en_vddio_q $end
$var reg 1 /Z analog_en_vswitch $end
$var reg 1 0Z dis_err_msgs $end
$var reg 3 1Z dm_final [2:0] $end
$var reg 1 2Z hld_ovr_final $end
$var reg 1 3Z ib_mode_sel_final $end
$var reg 1 4Z inp_dis_final $end
$var reg 1 5Z notifier_dm $end
$var reg 1 6Z notifier_enable_h $end
$var reg 1 7Z notifier_hld_ovr $end
$var reg 1 8Z notifier_ib_mode_sel $end
$var reg 1 9Z notifier_inp_dis $end
$var reg 1 :Z notifier_oe_n $end
$var reg 1 ;Z notifier_out $end
$var reg 1 <Z notifier_slow $end
$var reg 1 =Z notifier_vtrip_sel $end
$var reg 1 >Z oe_n_final $end
$var reg 1 ?Z out_final $end
$var reg 1 @Z slow_final $end
$var reg 1 AZ vtrip_sel_final $end
$var integer 32 BZ msg_count_pad [31:0] $end
$var integer 32 CZ msg_count_pad1 [31:0] $end
$var integer 32 DZ msg_count_pad10 [31:0] $end
$var integer 32 EZ msg_count_pad11 [31:0] $end
$var integer 32 FZ msg_count_pad12 [31:0] $end
$var integer 32 GZ msg_count_pad2 [31:0] $end
$var integer 32 HZ msg_count_pad3 [31:0] $end
$var integer 32 IZ msg_count_pad4 [31:0] $end
$var integer 32 JZ msg_count_pad5 [31:0] $end
$var integer 32 KZ msg_count_pad6 [31:0] $end
$var integer 32 LZ msg_count_pad7 [31:0] $end
$var integer 32 MZ msg_count_pad8 [31:0] $end
$var integer 32 NZ msg_count_pad9 [31:0] $end
$var integer 32 OZ slow_0_delay [31:0] $end
$var integer 32 PZ slow_1_delay [31:0] $end
$var integer 32 QZ slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area2_io_pad[1] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 Z" ANALOG_EN $end
$var wire 1 "# ANALOG_POL $end
$var wire 1 H# ANALOG_SEL $end
$var wire 3 RZ DM [2:0] $end
$var wire 1 $% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 J% HLD_H_N $end
$var wire 1 p% HLD_OVR $end
$var wire 1 8& IB_MODE_SEL $end
$var wire 1 ^& INP_DIS $end
$var wire 1 &' OE_N $end
$var wire 1 L' OUT $end
$var wire 1 4" PAD $end
$var wire 1 l PAD_A_ESD_0_H $end
$var wire 1 SZ PAD_A_ESD_1_H $end
$var wire 1 TZ PAD_A_NOESD_H $end
$var wire 1 r' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 :( VTRIP_SEL $end
$var wire 1 z/ TIE_LO_ESD $end
$var wire 1 UZ TIE_HI_ESD $end
$var wire 1 VZ IN_H $end
$var wire 1 B0 IN $end
$var wire 1 z/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 WZ event_error_vswitch5 $end
$var event 1 XZ event_error_vswitch4 $end
$var event 1 YZ event_error_vswitch3 $end
$var event 1 ZZ event_error_vswitch2 $end
$var event 1 [Z event_error_vswitch1 $end
$var event 1 \Z event_error_vddio_q2 $end
$var event 1 ]Z event_error_vddio_q1 $end
$var event 1 ^Z event_error_vdda_vddioq_vswitch2 $end
$var event 1 _Z event_error_vdda3 $end
$var event 1 `Z event_error_vdda2 $end
$var event 1 aZ event_error_vdda $end
$var event 1 bZ event_error_supply_good $end
$var event 1 cZ event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 Z" ANALOG_EN $end
$var wire 1 "# ANALOG_POL $end
$var wire 1 H# ANALOG_SEL $end
$var wire 3 dZ DM [2:0] $end
$var wire 1 $% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 J% HLD_H_N $end
$var wire 1 p% HLD_OVR $end
$var wire 1 8& IB_MODE_SEL $end
$var wire 1 ^& INP_DIS $end
$var wire 1 &' OE_N $end
$var wire 1 L' OUT $end
$var wire 1 4" PAD $end
$var wire 1 l PAD_A_ESD_0_H $end
$var wire 1 SZ PAD_A_ESD_1_H $end
$var wire 1 TZ PAD_A_NOESD_H $end
$var wire 1 r' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 :( VTRIP_SEL $end
$var wire 3 eZ dm_buf [2:0] $end
$var wire 1 fZ error_enable_vddio $end
$var wire 1 gZ error_supply_good $end
$var wire 1 hZ error_vdda $end
$var wire 1 iZ error_vdda2 $end
$var wire 1 jZ error_vdda3 $end
$var wire 1 kZ error_vdda_vddioq_vswitch2 $end
$var wire 1 lZ error_vddio_q1 $end
$var wire 1 mZ error_vddio_q2 $end
$var wire 1 nZ error_vswitch1 $end
$var wire 1 oZ error_vswitch2 $end
$var wire 1 pZ error_vswitch3 $end
$var wire 1 qZ error_vswitch4 $end
$var wire 1 rZ error_vswitch5 $end
$var wire 1 sZ functional_mode_amux $end
$var wire 1 tZ hld_h_n_buf $end
$var wire 1 uZ hld_ovr_buf $end
$var wire 1 vZ ib_mode_sel_buf $end
$var wire 1 wZ inp_dis_buf $end
$var wire 1 xZ invalid_controls_amux $end
$var wire 1 yZ oe_n_buf $end
$var wire 1 zZ out_buf $end
$var wire 1 {Z pad_tristate $end
$var wire 1 |Z pwr_good_active_mode $end
$var wire 1 }Z pwr_good_active_mode_vdda $end
$var wire 1 ~Z pwr_good_amux $end
$var wire 1 ![ pwr_good_analog_en_vdda $end
$var wire 1 "[ pwr_good_analog_en_vddio_q $end
$var wire 1 #[ pwr_good_analog_en_vswitch $end
$var wire 1 $[ pwr_good_hold_mode $end
$var wire 1 %[ pwr_good_hold_mode_vdda $end
$var wire 1 &[ pwr_good_hold_ovr_mode $end
$var wire 1 '[ pwr_good_inpbuff_hv $end
$var wire 1 ([ pwr_good_inpbuff_lv $end
$var wire 1 )[ pwr_good_output_driver $end
$var wire 1 *[ slow_buf $end
$var wire 1 +[ vtrip_sel_buf $end
$var wire 1 ,[ x_on_analog_en_vdda $end
$var wire 1 -[ x_on_analog_en_vddio_q $end
$var wire 1 .[ x_on_analog_en_vswitch $end
$var wire 1 /[ x_on_in_hv $end
$var wire 1 0[ x_on_in_lv $end
$var wire 1 1[ x_on_pad $end
$var wire 1 2[ zero_on_analog_en_vdda $end
$var wire 1 3[ zero_on_analog_en_vddio_q $end
$var wire 1 4[ zero_on_analog_en_vswitch $end
$var wire 1 5[ pwr_good_amux_vccd $end
$var wire 1 6[ enable_pad_vssio_q $end
$var wire 1 7[ enable_pad_vddio_q $end
$var wire 1 8[ enable_pad_amuxbus_b $end
$var wire 1 9[ enable_pad_amuxbus_a $end
$var wire 1 :[ disable_inp_buff_lv $end
$var wire 1 ;[ disable_inp_buff $end
$var wire 3 <[ amux_select [2:0] $end
$var wire 1 z/ TIE_LO_ESD $end
$var wire 1 UZ TIE_HI_ESD $end
$var wire 1 VZ IN_H $end
$var wire 1 B0 IN $end
$var wire 1 z/ ENABLE_INP_H $end
$var reg 1 =[ analog_en_final $end
$var reg 1 >[ analog_en_vdda $end
$var reg 1 ?[ analog_en_vddio_q $end
$var reg 1 @[ analog_en_vswitch $end
$var reg 1 A[ dis_err_msgs $end
$var reg 3 B[ dm_final [2:0] $end
$var reg 1 C[ hld_ovr_final $end
$var reg 1 D[ ib_mode_sel_final $end
$var reg 1 E[ inp_dis_final $end
$var reg 1 F[ notifier_dm $end
$var reg 1 G[ notifier_enable_h $end
$var reg 1 H[ notifier_hld_ovr $end
$var reg 1 I[ notifier_ib_mode_sel $end
$var reg 1 J[ notifier_inp_dis $end
$var reg 1 K[ notifier_oe_n $end
$var reg 1 L[ notifier_out $end
$var reg 1 M[ notifier_slow $end
$var reg 1 N[ notifier_vtrip_sel $end
$var reg 1 O[ oe_n_final $end
$var reg 1 P[ out_final $end
$var reg 1 Q[ slow_final $end
$var reg 1 R[ vtrip_sel_final $end
$var integer 32 S[ msg_count_pad [31:0] $end
$var integer 32 T[ msg_count_pad1 [31:0] $end
$var integer 32 U[ msg_count_pad10 [31:0] $end
$var integer 32 V[ msg_count_pad11 [31:0] $end
$var integer 32 W[ msg_count_pad12 [31:0] $end
$var integer 32 X[ msg_count_pad2 [31:0] $end
$var integer 32 Y[ msg_count_pad3 [31:0] $end
$var integer 32 Z[ msg_count_pad4 [31:0] $end
$var integer 32 [[ msg_count_pad5 [31:0] $end
$var integer 32 \[ msg_count_pad6 [31:0] $end
$var integer 32 ][ msg_count_pad7 [31:0] $end
$var integer 32 ^[ msg_count_pad8 [31:0] $end
$var integer 32 _[ msg_count_pad9 [31:0] $end
$var integer 32 `[ slow_0_delay [31:0] $end
$var integer 32 a[ slow_1_delay [31:0] $end
$var integer 32 b[ slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area2_io_pad[2] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 \" ANALOG_EN $end
$var wire 1 $# ANALOG_POL $end
$var wire 1 J# ANALOG_SEL $end
$var wire 3 c[ DM [2:0] $end
$var wire 1 &% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 L% HLD_H_N $end
$var wire 1 r% HLD_OVR $end
$var wire 1 :& IB_MODE_SEL $end
$var wire 1 `& INP_DIS $end
$var wire 1 (' OE_N $end
$var wire 1 N' OUT $end
$var wire 1 6" PAD $end
$var wire 1 m PAD_A_ESD_0_H $end
$var wire 1 d[ PAD_A_ESD_1_H $end
$var wire 1 e[ PAD_A_NOESD_H $end
$var wire 1 t' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 <( VTRIP_SEL $end
$var wire 1 x/ TIE_LO_ESD $end
$var wire 1 f[ TIE_HI_ESD $end
$var wire 1 g[ IN_H $end
$var wire 1 @0 IN $end
$var wire 1 x/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 h[ event_error_vswitch5 $end
$var event 1 i[ event_error_vswitch4 $end
$var event 1 j[ event_error_vswitch3 $end
$var event 1 k[ event_error_vswitch2 $end
$var event 1 l[ event_error_vswitch1 $end
$var event 1 m[ event_error_vddio_q2 $end
$var event 1 n[ event_error_vddio_q1 $end
$var event 1 o[ event_error_vdda_vddioq_vswitch2 $end
$var event 1 p[ event_error_vdda3 $end
$var event 1 q[ event_error_vdda2 $end
$var event 1 r[ event_error_vdda $end
$var event 1 s[ event_error_supply_good $end
$var event 1 t[ event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 \" ANALOG_EN $end
$var wire 1 $# ANALOG_POL $end
$var wire 1 J# ANALOG_SEL $end
$var wire 3 u[ DM [2:0] $end
$var wire 1 &% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 L% HLD_H_N $end
$var wire 1 r% HLD_OVR $end
$var wire 1 :& IB_MODE_SEL $end
$var wire 1 `& INP_DIS $end
$var wire 1 (' OE_N $end
$var wire 1 N' OUT $end
$var wire 1 6" PAD $end
$var wire 1 m PAD_A_ESD_0_H $end
$var wire 1 d[ PAD_A_ESD_1_H $end
$var wire 1 e[ PAD_A_NOESD_H $end
$var wire 1 t' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 <( VTRIP_SEL $end
$var wire 3 v[ dm_buf [2:0] $end
$var wire 1 w[ error_enable_vddio $end
$var wire 1 x[ error_supply_good $end
$var wire 1 y[ error_vdda $end
$var wire 1 z[ error_vdda2 $end
$var wire 1 {[ error_vdda3 $end
$var wire 1 |[ error_vdda_vddioq_vswitch2 $end
$var wire 1 }[ error_vddio_q1 $end
$var wire 1 ~[ error_vddio_q2 $end
$var wire 1 !\ error_vswitch1 $end
$var wire 1 "\ error_vswitch2 $end
$var wire 1 #\ error_vswitch3 $end
$var wire 1 $\ error_vswitch4 $end
$var wire 1 %\ error_vswitch5 $end
$var wire 1 &\ functional_mode_amux $end
$var wire 1 '\ hld_h_n_buf $end
$var wire 1 (\ hld_ovr_buf $end
$var wire 1 )\ ib_mode_sel_buf $end
$var wire 1 *\ inp_dis_buf $end
$var wire 1 +\ invalid_controls_amux $end
$var wire 1 ,\ oe_n_buf $end
$var wire 1 -\ out_buf $end
$var wire 1 .\ pad_tristate $end
$var wire 1 /\ pwr_good_active_mode $end
$var wire 1 0\ pwr_good_active_mode_vdda $end
$var wire 1 1\ pwr_good_amux $end
$var wire 1 2\ pwr_good_analog_en_vdda $end
$var wire 1 3\ pwr_good_analog_en_vddio_q $end
$var wire 1 4\ pwr_good_analog_en_vswitch $end
$var wire 1 5\ pwr_good_hold_mode $end
$var wire 1 6\ pwr_good_hold_mode_vdda $end
$var wire 1 7\ pwr_good_hold_ovr_mode $end
$var wire 1 8\ pwr_good_inpbuff_hv $end
$var wire 1 9\ pwr_good_inpbuff_lv $end
$var wire 1 :\ pwr_good_output_driver $end
$var wire 1 ;\ slow_buf $end
$var wire 1 <\ vtrip_sel_buf $end
$var wire 1 =\ x_on_analog_en_vdda $end
$var wire 1 >\ x_on_analog_en_vddio_q $end
$var wire 1 ?\ x_on_analog_en_vswitch $end
$var wire 1 @\ x_on_in_hv $end
$var wire 1 A\ x_on_in_lv $end
$var wire 1 B\ x_on_pad $end
$var wire 1 C\ zero_on_analog_en_vdda $end
$var wire 1 D\ zero_on_analog_en_vddio_q $end
$var wire 1 E\ zero_on_analog_en_vswitch $end
$var wire 1 F\ pwr_good_amux_vccd $end
$var wire 1 G\ enable_pad_vssio_q $end
$var wire 1 H\ enable_pad_vddio_q $end
$var wire 1 I\ enable_pad_amuxbus_b $end
$var wire 1 J\ enable_pad_amuxbus_a $end
$var wire 1 K\ disable_inp_buff_lv $end
$var wire 1 L\ disable_inp_buff $end
$var wire 3 M\ amux_select [2:0] $end
$var wire 1 x/ TIE_LO_ESD $end
$var wire 1 f[ TIE_HI_ESD $end
$var wire 1 g[ IN_H $end
$var wire 1 @0 IN $end
$var wire 1 x/ ENABLE_INP_H $end
$var reg 1 N\ analog_en_final $end
$var reg 1 O\ analog_en_vdda $end
$var reg 1 P\ analog_en_vddio_q $end
$var reg 1 Q\ analog_en_vswitch $end
$var reg 1 R\ dis_err_msgs $end
$var reg 3 S\ dm_final [2:0] $end
$var reg 1 T\ hld_ovr_final $end
$var reg 1 U\ ib_mode_sel_final $end
$var reg 1 V\ inp_dis_final $end
$var reg 1 W\ notifier_dm $end
$var reg 1 X\ notifier_enable_h $end
$var reg 1 Y\ notifier_hld_ovr $end
$var reg 1 Z\ notifier_ib_mode_sel $end
$var reg 1 [\ notifier_inp_dis $end
$var reg 1 \\ notifier_oe_n $end
$var reg 1 ]\ notifier_out $end
$var reg 1 ^\ notifier_slow $end
$var reg 1 _\ notifier_vtrip_sel $end
$var reg 1 `\ oe_n_final $end
$var reg 1 a\ out_final $end
$var reg 1 b\ slow_final $end
$var reg 1 c\ vtrip_sel_final $end
$var integer 32 d\ msg_count_pad [31:0] $end
$var integer 32 e\ msg_count_pad1 [31:0] $end
$var integer 32 f\ msg_count_pad10 [31:0] $end
$var integer 32 g\ msg_count_pad11 [31:0] $end
$var integer 32 h\ msg_count_pad12 [31:0] $end
$var integer 32 i\ msg_count_pad2 [31:0] $end
$var integer 32 j\ msg_count_pad3 [31:0] $end
$var integer 32 k\ msg_count_pad4 [31:0] $end
$var integer 32 l\ msg_count_pad5 [31:0] $end
$var integer 32 m\ msg_count_pad6 [31:0] $end
$var integer 32 n\ msg_count_pad7 [31:0] $end
$var integer 32 o\ msg_count_pad8 [31:0] $end
$var integer 32 p\ msg_count_pad9 [31:0] $end
$var integer 32 q\ slow_0_delay [31:0] $end
$var integer 32 r\ slow_1_delay [31:0] $end
$var integer 32 s\ slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area2_io_pad[3] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 ]" ANALOG_EN $end
$var wire 1 %# ANALOG_POL $end
$var wire 1 K# ANALOG_SEL $end
$var wire 3 t\ DM [2:0] $end
$var wire 1 '% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 M% HLD_H_N $end
$var wire 1 s% HLD_OVR $end
$var wire 1 ;& IB_MODE_SEL $end
$var wire 1 a& INP_DIS $end
$var wire 1 )' OE_N $end
$var wire 1 O' OUT $end
$var wire 1 7" PAD $end
$var wire 1 n PAD_A_ESD_0_H $end
$var wire 1 u\ PAD_A_ESD_1_H $end
$var wire 1 v\ PAD_A_NOESD_H $end
$var wire 1 u' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 =( VTRIP_SEL $end
$var wire 1 w/ TIE_LO_ESD $end
$var wire 1 w\ TIE_HI_ESD $end
$var wire 1 x\ IN_H $end
$var wire 1 ?0 IN $end
$var wire 1 w/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 y\ event_error_vswitch5 $end
$var event 1 z\ event_error_vswitch4 $end
$var event 1 {\ event_error_vswitch3 $end
$var event 1 |\ event_error_vswitch2 $end
$var event 1 }\ event_error_vswitch1 $end
$var event 1 ~\ event_error_vddio_q2 $end
$var event 1 !] event_error_vddio_q1 $end
$var event 1 "] event_error_vdda_vddioq_vswitch2 $end
$var event 1 #] event_error_vdda3 $end
$var event 1 $] event_error_vdda2 $end
$var event 1 %] event_error_vdda $end
$var event 1 &] event_error_supply_good $end
$var event 1 '] event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 ]" ANALOG_EN $end
$var wire 1 %# ANALOG_POL $end
$var wire 1 K# ANALOG_SEL $end
$var wire 3 (] DM [2:0] $end
$var wire 1 '% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 M% HLD_H_N $end
$var wire 1 s% HLD_OVR $end
$var wire 1 ;& IB_MODE_SEL $end
$var wire 1 a& INP_DIS $end
$var wire 1 )' OE_N $end
$var wire 1 O' OUT $end
$var wire 1 7" PAD $end
$var wire 1 n PAD_A_ESD_0_H $end
$var wire 1 u\ PAD_A_ESD_1_H $end
$var wire 1 v\ PAD_A_NOESD_H $end
$var wire 1 u' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 =( VTRIP_SEL $end
$var wire 3 )] dm_buf [2:0] $end
$var wire 1 *] error_enable_vddio $end
$var wire 1 +] error_supply_good $end
$var wire 1 ,] error_vdda $end
$var wire 1 -] error_vdda2 $end
$var wire 1 .] error_vdda3 $end
$var wire 1 /] error_vdda_vddioq_vswitch2 $end
$var wire 1 0] error_vddio_q1 $end
$var wire 1 1] error_vddio_q2 $end
$var wire 1 2] error_vswitch1 $end
$var wire 1 3] error_vswitch2 $end
$var wire 1 4] error_vswitch3 $end
$var wire 1 5] error_vswitch4 $end
$var wire 1 6] error_vswitch5 $end
$var wire 1 7] functional_mode_amux $end
$var wire 1 8] hld_h_n_buf $end
$var wire 1 9] hld_ovr_buf $end
$var wire 1 :] ib_mode_sel_buf $end
$var wire 1 ;] inp_dis_buf $end
$var wire 1 <] invalid_controls_amux $end
$var wire 1 =] oe_n_buf $end
$var wire 1 >] out_buf $end
$var wire 1 ?] pad_tristate $end
$var wire 1 @] pwr_good_active_mode $end
$var wire 1 A] pwr_good_active_mode_vdda $end
$var wire 1 B] pwr_good_amux $end
$var wire 1 C] pwr_good_analog_en_vdda $end
$var wire 1 D] pwr_good_analog_en_vddio_q $end
$var wire 1 E] pwr_good_analog_en_vswitch $end
$var wire 1 F] pwr_good_hold_mode $end
$var wire 1 G] pwr_good_hold_mode_vdda $end
$var wire 1 H] pwr_good_hold_ovr_mode $end
$var wire 1 I] pwr_good_inpbuff_hv $end
$var wire 1 J] pwr_good_inpbuff_lv $end
$var wire 1 K] pwr_good_output_driver $end
$var wire 1 L] slow_buf $end
$var wire 1 M] vtrip_sel_buf $end
$var wire 1 N] x_on_analog_en_vdda $end
$var wire 1 O] x_on_analog_en_vddio_q $end
$var wire 1 P] x_on_analog_en_vswitch $end
$var wire 1 Q] x_on_in_hv $end
$var wire 1 R] x_on_in_lv $end
$var wire 1 S] x_on_pad $end
$var wire 1 T] zero_on_analog_en_vdda $end
$var wire 1 U] zero_on_analog_en_vddio_q $end
$var wire 1 V] zero_on_analog_en_vswitch $end
$var wire 1 W] pwr_good_amux_vccd $end
$var wire 1 X] enable_pad_vssio_q $end
$var wire 1 Y] enable_pad_vddio_q $end
$var wire 1 Z] enable_pad_amuxbus_b $end
$var wire 1 [] enable_pad_amuxbus_a $end
$var wire 1 \] disable_inp_buff_lv $end
$var wire 1 ]] disable_inp_buff $end
$var wire 3 ^] amux_select [2:0] $end
$var wire 1 w/ TIE_LO_ESD $end
$var wire 1 w\ TIE_HI_ESD $end
$var wire 1 x\ IN_H $end
$var wire 1 ?0 IN $end
$var wire 1 w/ ENABLE_INP_H $end
$var reg 1 _] analog_en_final $end
$var reg 1 `] analog_en_vdda $end
$var reg 1 a] analog_en_vddio_q $end
$var reg 1 b] analog_en_vswitch $end
$var reg 1 c] dis_err_msgs $end
$var reg 3 d] dm_final [2:0] $end
$var reg 1 e] hld_ovr_final $end
$var reg 1 f] ib_mode_sel_final $end
$var reg 1 g] inp_dis_final $end
$var reg 1 h] notifier_dm $end
$var reg 1 i] notifier_enable_h $end
$var reg 1 j] notifier_hld_ovr $end
$var reg 1 k] notifier_ib_mode_sel $end
$var reg 1 l] notifier_inp_dis $end
$var reg 1 m] notifier_oe_n $end
$var reg 1 n] notifier_out $end
$var reg 1 o] notifier_slow $end
$var reg 1 p] notifier_vtrip_sel $end
$var reg 1 q] oe_n_final $end
$var reg 1 r] out_final $end
$var reg 1 s] slow_final $end
$var reg 1 t] vtrip_sel_final $end
$var integer 32 u] msg_count_pad [31:0] $end
$var integer 32 v] msg_count_pad1 [31:0] $end
$var integer 32 w] msg_count_pad10 [31:0] $end
$var integer 32 x] msg_count_pad11 [31:0] $end
$var integer 32 y] msg_count_pad12 [31:0] $end
$var integer 32 z] msg_count_pad2 [31:0] $end
$var integer 32 {] msg_count_pad3 [31:0] $end
$var integer 32 |] msg_count_pad4 [31:0] $end
$var integer 32 }] msg_count_pad5 [31:0] $end
$var integer 32 ~] msg_count_pad6 [31:0] $end
$var integer 32 !^ msg_count_pad7 [31:0] $end
$var integer 32 "^ msg_count_pad8 [31:0] $end
$var integer 32 #^ msg_count_pad9 [31:0] $end
$var integer 32 $^ slow_0_delay [31:0] $end
$var integer 32 %^ slow_1_delay [31:0] $end
$var integer 32 &^ slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area2_io_pad[4] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 ^" ANALOG_EN $end
$var wire 1 &# ANALOG_POL $end
$var wire 1 L# ANALOG_SEL $end
$var wire 3 '^ DM [2:0] $end
$var wire 1 (% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 N% HLD_H_N $end
$var wire 1 t% HLD_OVR $end
$var wire 1 <& IB_MODE_SEL $end
$var wire 1 b& INP_DIS $end
$var wire 1 *' OE_N $end
$var wire 1 P' OUT $end
$var wire 1 8" PAD $end
$var wire 1 o PAD_A_ESD_0_H $end
$var wire 1 (^ PAD_A_ESD_1_H $end
$var wire 1 )^ PAD_A_NOESD_H $end
$var wire 1 v' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 >( VTRIP_SEL $end
$var wire 1 v/ TIE_LO_ESD $end
$var wire 1 *^ TIE_HI_ESD $end
$var wire 1 +^ IN_H $end
$var wire 1 >0 IN $end
$var wire 1 v/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 ,^ event_error_vswitch5 $end
$var event 1 -^ event_error_vswitch4 $end
$var event 1 .^ event_error_vswitch3 $end
$var event 1 /^ event_error_vswitch2 $end
$var event 1 0^ event_error_vswitch1 $end
$var event 1 1^ event_error_vddio_q2 $end
$var event 1 2^ event_error_vddio_q1 $end
$var event 1 3^ event_error_vdda_vddioq_vswitch2 $end
$var event 1 4^ event_error_vdda3 $end
$var event 1 5^ event_error_vdda2 $end
$var event 1 6^ event_error_vdda $end
$var event 1 7^ event_error_supply_good $end
$var event 1 8^ event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 ^" ANALOG_EN $end
$var wire 1 &# ANALOG_POL $end
$var wire 1 L# ANALOG_SEL $end
$var wire 3 9^ DM [2:0] $end
$var wire 1 (% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 N% HLD_H_N $end
$var wire 1 t% HLD_OVR $end
$var wire 1 <& IB_MODE_SEL $end
$var wire 1 b& INP_DIS $end
$var wire 1 *' OE_N $end
$var wire 1 P' OUT $end
$var wire 1 8" PAD $end
$var wire 1 o PAD_A_ESD_0_H $end
$var wire 1 (^ PAD_A_ESD_1_H $end
$var wire 1 )^ PAD_A_NOESD_H $end
$var wire 1 v' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 >( VTRIP_SEL $end
$var wire 3 :^ dm_buf [2:0] $end
$var wire 1 ;^ error_enable_vddio $end
$var wire 1 <^ error_supply_good $end
$var wire 1 =^ error_vdda $end
$var wire 1 >^ error_vdda2 $end
$var wire 1 ?^ error_vdda3 $end
$var wire 1 @^ error_vdda_vddioq_vswitch2 $end
$var wire 1 A^ error_vddio_q1 $end
$var wire 1 B^ error_vddio_q2 $end
$var wire 1 C^ error_vswitch1 $end
$var wire 1 D^ error_vswitch2 $end
$var wire 1 E^ error_vswitch3 $end
$var wire 1 F^ error_vswitch4 $end
$var wire 1 G^ error_vswitch5 $end
$var wire 1 H^ functional_mode_amux $end
$var wire 1 I^ hld_h_n_buf $end
$var wire 1 J^ hld_ovr_buf $end
$var wire 1 K^ ib_mode_sel_buf $end
$var wire 1 L^ inp_dis_buf $end
$var wire 1 M^ invalid_controls_amux $end
$var wire 1 N^ oe_n_buf $end
$var wire 1 O^ out_buf $end
$var wire 1 P^ pad_tristate $end
$var wire 1 Q^ pwr_good_active_mode $end
$var wire 1 R^ pwr_good_active_mode_vdda $end
$var wire 1 S^ pwr_good_amux $end
$var wire 1 T^ pwr_good_analog_en_vdda $end
$var wire 1 U^ pwr_good_analog_en_vddio_q $end
$var wire 1 V^ pwr_good_analog_en_vswitch $end
$var wire 1 W^ pwr_good_hold_mode $end
$var wire 1 X^ pwr_good_hold_mode_vdda $end
$var wire 1 Y^ pwr_good_hold_ovr_mode $end
$var wire 1 Z^ pwr_good_inpbuff_hv $end
$var wire 1 [^ pwr_good_inpbuff_lv $end
$var wire 1 \^ pwr_good_output_driver $end
$var wire 1 ]^ slow_buf $end
$var wire 1 ^^ vtrip_sel_buf $end
$var wire 1 _^ x_on_analog_en_vdda $end
$var wire 1 `^ x_on_analog_en_vddio_q $end
$var wire 1 a^ x_on_analog_en_vswitch $end
$var wire 1 b^ x_on_in_hv $end
$var wire 1 c^ x_on_in_lv $end
$var wire 1 d^ x_on_pad $end
$var wire 1 e^ zero_on_analog_en_vdda $end
$var wire 1 f^ zero_on_analog_en_vddio_q $end
$var wire 1 g^ zero_on_analog_en_vswitch $end
$var wire 1 h^ pwr_good_amux_vccd $end
$var wire 1 i^ enable_pad_vssio_q $end
$var wire 1 j^ enable_pad_vddio_q $end
$var wire 1 k^ enable_pad_amuxbus_b $end
$var wire 1 l^ enable_pad_amuxbus_a $end
$var wire 1 m^ disable_inp_buff_lv $end
$var wire 1 n^ disable_inp_buff $end
$var wire 3 o^ amux_select [2:0] $end
$var wire 1 v/ TIE_LO_ESD $end
$var wire 1 *^ TIE_HI_ESD $end
$var wire 1 +^ IN_H $end
$var wire 1 >0 IN $end
$var wire 1 v/ ENABLE_INP_H $end
$var reg 1 p^ analog_en_final $end
$var reg 1 q^ analog_en_vdda $end
$var reg 1 r^ analog_en_vddio_q $end
$var reg 1 s^ analog_en_vswitch $end
$var reg 1 t^ dis_err_msgs $end
$var reg 3 u^ dm_final [2:0] $end
$var reg 1 v^ hld_ovr_final $end
$var reg 1 w^ ib_mode_sel_final $end
$var reg 1 x^ inp_dis_final $end
$var reg 1 y^ notifier_dm $end
$var reg 1 z^ notifier_enable_h $end
$var reg 1 {^ notifier_hld_ovr $end
$var reg 1 |^ notifier_ib_mode_sel $end
$var reg 1 }^ notifier_inp_dis $end
$var reg 1 ~^ notifier_oe_n $end
$var reg 1 !_ notifier_out $end
$var reg 1 "_ notifier_slow $end
$var reg 1 #_ notifier_vtrip_sel $end
$var reg 1 $_ oe_n_final $end
$var reg 1 %_ out_final $end
$var reg 1 &_ slow_final $end
$var reg 1 '_ vtrip_sel_final $end
$var integer 32 (_ msg_count_pad [31:0] $end
$var integer 32 )_ msg_count_pad1 [31:0] $end
$var integer 32 *_ msg_count_pad10 [31:0] $end
$var integer 32 +_ msg_count_pad11 [31:0] $end
$var integer 32 ,_ msg_count_pad12 [31:0] $end
$var integer 32 -_ msg_count_pad2 [31:0] $end
$var integer 32 ._ msg_count_pad3 [31:0] $end
$var integer 32 /_ msg_count_pad4 [31:0] $end
$var integer 32 0_ msg_count_pad5 [31:0] $end
$var integer 32 1_ msg_count_pad6 [31:0] $end
$var integer 32 2_ msg_count_pad7 [31:0] $end
$var integer 32 3_ msg_count_pad8 [31:0] $end
$var integer 32 4_ msg_count_pad9 [31:0] $end
$var integer 32 5_ slow_0_delay [31:0] $end
$var integer 32 6_ slow_1_delay [31:0] $end
$var integer 32 7_ slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area2_io_pad[5] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 _" ANALOG_EN $end
$var wire 1 '# ANALOG_POL $end
$var wire 1 M# ANALOG_SEL $end
$var wire 3 8_ DM [2:0] $end
$var wire 1 )% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 O% HLD_H_N $end
$var wire 1 u% HLD_OVR $end
$var wire 1 =& IB_MODE_SEL $end
$var wire 1 c& INP_DIS $end
$var wire 1 +' OE_N $end
$var wire 1 Q' OUT $end
$var wire 1 9" PAD $end
$var wire 1 p PAD_A_ESD_0_H $end
$var wire 1 9_ PAD_A_ESD_1_H $end
$var wire 1 :_ PAD_A_NOESD_H $end
$var wire 1 w' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 ?( VTRIP_SEL $end
$var wire 1 u/ TIE_LO_ESD $end
$var wire 1 ;_ TIE_HI_ESD $end
$var wire 1 <_ IN_H $end
$var wire 1 =0 IN $end
$var wire 1 u/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 =_ event_error_vswitch5 $end
$var event 1 >_ event_error_vswitch4 $end
$var event 1 ?_ event_error_vswitch3 $end
$var event 1 @_ event_error_vswitch2 $end
$var event 1 A_ event_error_vswitch1 $end
$var event 1 B_ event_error_vddio_q2 $end
$var event 1 C_ event_error_vddio_q1 $end
$var event 1 D_ event_error_vdda_vddioq_vswitch2 $end
$var event 1 E_ event_error_vdda3 $end
$var event 1 F_ event_error_vdda2 $end
$var event 1 G_ event_error_vdda $end
$var event 1 H_ event_error_supply_good $end
$var event 1 I_ event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 _" ANALOG_EN $end
$var wire 1 '# ANALOG_POL $end
$var wire 1 M# ANALOG_SEL $end
$var wire 3 J_ DM [2:0] $end
$var wire 1 )% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 O% HLD_H_N $end
$var wire 1 u% HLD_OVR $end
$var wire 1 =& IB_MODE_SEL $end
$var wire 1 c& INP_DIS $end
$var wire 1 +' OE_N $end
$var wire 1 Q' OUT $end
$var wire 1 9" PAD $end
$var wire 1 p PAD_A_ESD_0_H $end
$var wire 1 9_ PAD_A_ESD_1_H $end
$var wire 1 :_ PAD_A_NOESD_H $end
$var wire 1 w' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 ?( VTRIP_SEL $end
$var wire 3 K_ dm_buf [2:0] $end
$var wire 1 L_ error_enable_vddio $end
$var wire 1 M_ error_supply_good $end
$var wire 1 N_ error_vdda $end
$var wire 1 O_ error_vdda2 $end
$var wire 1 P_ error_vdda3 $end
$var wire 1 Q_ error_vdda_vddioq_vswitch2 $end
$var wire 1 R_ error_vddio_q1 $end
$var wire 1 S_ error_vddio_q2 $end
$var wire 1 T_ error_vswitch1 $end
$var wire 1 U_ error_vswitch2 $end
$var wire 1 V_ error_vswitch3 $end
$var wire 1 W_ error_vswitch4 $end
$var wire 1 X_ error_vswitch5 $end
$var wire 1 Y_ functional_mode_amux $end
$var wire 1 Z_ hld_h_n_buf $end
$var wire 1 [_ hld_ovr_buf $end
$var wire 1 \_ ib_mode_sel_buf $end
$var wire 1 ]_ inp_dis_buf $end
$var wire 1 ^_ invalid_controls_amux $end
$var wire 1 __ oe_n_buf $end
$var wire 1 `_ out_buf $end
$var wire 1 a_ pad_tristate $end
$var wire 1 b_ pwr_good_active_mode $end
$var wire 1 c_ pwr_good_active_mode_vdda $end
$var wire 1 d_ pwr_good_amux $end
$var wire 1 e_ pwr_good_analog_en_vdda $end
$var wire 1 f_ pwr_good_analog_en_vddio_q $end
$var wire 1 g_ pwr_good_analog_en_vswitch $end
$var wire 1 h_ pwr_good_hold_mode $end
$var wire 1 i_ pwr_good_hold_mode_vdda $end
$var wire 1 j_ pwr_good_hold_ovr_mode $end
$var wire 1 k_ pwr_good_inpbuff_hv $end
$var wire 1 l_ pwr_good_inpbuff_lv $end
$var wire 1 m_ pwr_good_output_driver $end
$var wire 1 n_ slow_buf $end
$var wire 1 o_ vtrip_sel_buf $end
$var wire 1 p_ x_on_analog_en_vdda $end
$var wire 1 q_ x_on_analog_en_vddio_q $end
$var wire 1 r_ x_on_analog_en_vswitch $end
$var wire 1 s_ x_on_in_hv $end
$var wire 1 t_ x_on_in_lv $end
$var wire 1 u_ x_on_pad $end
$var wire 1 v_ zero_on_analog_en_vdda $end
$var wire 1 w_ zero_on_analog_en_vddio_q $end
$var wire 1 x_ zero_on_analog_en_vswitch $end
$var wire 1 y_ pwr_good_amux_vccd $end
$var wire 1 z_ enable_pad_vssio_q $end
$var wire 1 {_ enable_pad_vddio_q $end
$var wire 1 |_ enable_pad_amuxbus_b $end
$var wire 1 }_ enable_pad_amuxbus_a $end
$var wire 1 ~_ disable_inp_buff_lv $end
$var wire 1 !` disable_inp_buff $end
$var wire 3 "` amux_select [2:0] $end
$var wire 1 u/ TIE_LO_ESD $end
$var wire 1 ;_ TIE_HI_ESD $end
$var wire 1 <_ IN_H $end
$var wire 1 =0 IN $end
$var wire 1 u/ ENABLE_INP_H $end
$var reg 1 #` analog_en_final $end
$var reg 1 $` analog_en_vdda $end
$var reg 1 %` analog_en_vddio_q $end
$var reg 1 &` analog_en_vswitch $end
$var reg 1 '` dis_err_msgs $end
$var reg 3 (` dm_final [2:0] $end
$var reg 1 )` hld_ovr_final $end
$var reg 1 *` ib_mode_sel_final $end
$var reg 1 +` inp_dis_final $end
$var reg 1 ,` notifier_dm $end
$var reg 1 -` notifier_enable_h $end
$var reg 1 .` notifier_hld_ovr $end
$var reg 1 /` notifier_ib_mode_sel $end
$var reg 1 0` notifier_inp_dis $end
$var reg 1 1` notifier_oe_n $end
$var reg 1 2` notifier_out $end
$var reg 1 3` notifier_slow $end
$var reg 1 4` notifier_vtrip_sel $end
$var reg 1 5` oe_n_final $end
$var reg 1 6` out_final $end
$var reg 1 7` slow_final $end
$var reg 1 8` vtrip_sel_final $end
$var integer 32 9` msg_count_pad [31:0] $end
$var integer 32 :` msg_count_pad1 [31:0] $end
$var integer 32 ;` msg_count_pad10 [31:0] $end
$var integer 32 <` msg_count_pad11 [31:0] $end
$var integer 32 =` msg_count_pad12 [31:0] $end
$var integer 32 >` msg_count_pad2 [31:0] $end
$var integer 32 ?` msg_count_pad3 [31:0] $end
$var integer 32 @` msg_count_pad4 [31:0] $end
$var integer 32 A` msg_count_pad5 [31:0] $end
$var integer 32 B` msg_count_pad6 [31:0] $end
$var integer 32 C` msg_count_pad7 [31:0] $end
$var integer 32 D` msg_count_pad8 [31:0] $end
$var integer 32 E` msg_count_pad9 [31:0] $end
$var integer 32 F` slow_0_delay [31:0] $end
$var integer 32 G` slow_1_delay [31:0] $end
$var integer 32 H` slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area2_io_pad[6] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 `" ANALOG_EN $end
$var wire 1 (# ANALOG_POL $end
$var wire 1 N# ANALOG_SEL $end
$var wire 3 I` DM [2:0] $end
$var wire 1 *% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 P% HLD_H_N $end
$var wire 1 v% HLD_OVR $end
$var wire 1 >& IB_MODE_SEL $end
$var wire 1 d& INP_DIS $end
$var wire 1 ,' OE_N $end
$var wire 1 R' OUT $end
$var wire 1 :" PAD $end
$var wire 1 q PAD_A_ESD_0_H $end
$var wire 1 J` PAD_A_ESD_1_H $end
$var wire 1 K` PAD_A_NOESD_H $end
$var wire 1 x' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 @( VTRIP_SEL $end
$var wire 1 t/ TIE_LO_ESD $end
$var wire 1 L` TIE_HI_ESD $end
$var wire 1 M` IN_H $end
$var wire 1 <0 IN $end
$var wire 1 t/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 N` event_error_vswitch5 $end
$var event 1 O` event_error_vswitch4 $end
$var event 1 P` event_error_vswitch3 $end
$var event 1 Q` event_error_vswitch2 $end
$var event 1 R` event_error_vswitch1 $end
$var event 1 S` event_error_vddio_q2 $end
$var event 1 T` event_error_vddio_q1 $end
$var event 1 U` event_error_vdda_vddioq_vswitch2 $end
$var event 1 V` event_error_vdda3 $end
$var event 1 W` event_error_vdda2 $end
$var event 1 X` event_error_vdda $end
$var event 1 Y` event_error_supply_good $end
$var event 1 Z` event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 `" ANALOG_EN $end
$var wire 1 (# ANALOG_POL $end
$var wire 1 N# ANALOG_SEL $end
$var wire 3 [` DM [2:0] $end
$var wire 1 *% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 P% HLD_H_N $end
$var wire 1 v% HLD_OVR $end
$var wire 1 >& IB_MODE_SEL $end
$var wire 1 d& INP_DIS $end
$var wire 1 ,' OE_N $end
$var wire 1 R' OUT $end
$var wire 1 :" PAD $end
$var wire 1 q PAD_A_ESD_0_H $end
$var wire 1 J` PAD_A_ESD_1_H $end
$var wire 1 K` PAD_A_NOESD_H $end
$var wire 1 x' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 @( VTRIP_SEL $end
$var wire 3 \` dm_buf [2:0] $end
$var wire 1 ]` error_enable_vddio $end
$var wire 1 ^` error_supply_good $end
$var wire 1 _` error_vdda $end
$var wire 1 `` error_vdda2 $end
$var wire 1 a` error_vdda3 $end
$var wire 1 b` error_vdda_vddioq_vswitch2 $end
$var wire 1 c` error_vddio_q1 $end
$var wire 1 d` error_vddio_q2 $end
$var wire 1 e` error_vswitch1 $end
$var wire 1 f` error_vswitch2 $end
$var wire 1 g` error_vswitch3 $end
$var wire 1 h` error_vswitch4 $end
$var wire 1 i` error_vswitch5 $end
$var wire 1 j` functional_mode_amux $end
$var wire 1 k` hld_h_n_buf $end
$var wire 1 l` hld_ovr_buf $end
$var wire 1 m` ib_mode_sel_buf $end
$var wire 1 n` inp_dis_buf $end
$var wire 1 o` invalid_controls_amux $end
$var wire 1 p` oe_n_buf $end
$var wire 1 q` out_buf $end
$var wire 1 r` pad_tristate $end
$var wire 1 s` pwr_good_active_mode $end
$var wire 1 t` pwr_good_active_mode_vdda $end
$var wire 1 u` pwr_good_amux $end
$var wire 1 v` pwr_good_analog_en_vdda $end
$var wire 1 w` pwr_good_analog_en_vddio_q $end
$var wire 1 x` pwr_good_analog_en_vswitch $end
$var wire 1 y` pwr_good_hold_mode $end
$var wire 1 z` pwr_good_hold_mode_vdda $end
$var wire 1 {` pwr_good_hold_ovr_mode $end
$var wire 1 |` pwr_good_inpbuff_hv $end
$var wire 1 }` pwr_good_inpbuff_lv $end
$var wire 1 ~` pwr_good_output_driver $end
$var wire 1 !a slow_buf $end
$var wire 1 "a vtrip_sel_buf $end
$var wire 1 #a x_on_analog_en_vdda $end
$var wire 1 $a x_on_analog_en_vddio_q $end
$var wire 1 %a x_on_analog_en_vswitch $end
$var wire 1 &a x_on_in_hv $end
$var wire 1 'a x_on_in_lv $end
$var wire 1 (a x_on_pad $end
$var wire 1 )a zero_on_analog_en_vdda $end
$var wire 1 *a zero_on_analog_en_vddio_q $end
$var wire 1 +a zero_on_analog_en_vswitch $end
$var wire 1 ,a pwr_good_amux_vccd $end
$var wire 1 -a enable_pad_vssio_q $end
$var wire 1 .a enable_pad_vddio_q $end
$var wire 1 /a enable_pad_amuxbus_b $end
$var wire 1 0a enable_pad_amuxbus_a $end
$var wire 1 1a disable_inp_buff_lv $end
$var wire 1 2a disable_inp_buff $end
$var wire 3 3a amux_select [2:0] $end
$var wire 1 t/ TIE_LO_ESD $end
$var wire 1 L` TIE_HI_ESD $end
$var wire 1 M` IN_H $end
$var wire 1 <0 IN $end
$var wire 1 t/ ENABLE_INP_H $end
$var reg 1 4a analog_en_final $end
$var reg 1 5a analog_en_vdda $end
$var reg 1 6a analog_en_vddio_q $end
$var reg 1 7a analog_en_vswitch $end
$var reg 1 8a dis_err_msgs $end
$var reg 3 9a dm_final [2:0] $end
$var reg 1 :a hld_ovr_final $end
$var reg 1 ;a ib_mode_sel_final $end
$var reg 1 <a inp_dis_final $end
$var reg 1 =a notifier_dm $end
$var reg 1 >a notifier_enable_h $end
$var reg 1 ?a notifier_hld_ovr $end
$var reg 1 @a notifier_ib_mode_sel $end
$var reg 1 Aa notifier_inp_dis $end
$var reg 1 Ba notifier_oe_n $end
$var reg 1 Ca notifier_out $end
$var reg 1 Da notifier_slow $end
$var reg 1 Ea notifier_vtrip_sel $end
$var reg 1 Fa oe_n_final $end
$var reg 1 Ga out_final $end
$var reg 1 Ha slow_final $end
$var reg 1 Ia vtrip_sel_final $end
$var integer 32 Ja msg_count_pad [31:0] $end
$var integer 32 Ka msg_count_pad1 [31:0] $end
$var integer 32 La msg_count_pad10 [31:0] $end
$var integer 32 Ma msg_count_pad11 [31:0] $end
$var integer 32 Na msg_count_pad12 [31:0] $end
$var integer 32 Oa msg_count_pad2 [31:0] $end
$var integer 32 Pa msg_count_pad3 [31:0] $end
$var integer 32 Qa msg_count_pad4 [31:0] $end
$var integer 32 Ra msg_count_pad5 [31:0] $end
$var integer 32 Sa msg_count_pad6 [31:0] $end
$var integer 32 Ta msg_count_pad7 [31:0] $end
$var integer 32 Ua msg_count_pad8 [31:0] $end
$var integer 32 Va msg_count_pad9 [31:0] $end
$var integer 32 Wa slow_0_delay [31:0] $end
$var integer 32 Xa slow_1_delay [31:0] $end
$var integer 32 Ya slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area2_io_pad[7] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 a" ANALOG_EN $end
$var wire 1 )# ANALOG_POL $end
$var wire 1 O# ANALOG_SEL $end
$var wire 3 Za DM [2:0] $end
$var wire 1 +% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 Q% HLD_H_N $end
$var wire 1 w% HLD_OVR $end
$var wire 1 ?& IB_MODE_SEL $end
$var wire 1 e& INP_DIS $end
$var wire 1 -' OE_N $end
$var wire 1 S' OUT $end
$var wire 1 ;" PAD $end
$var wire 1 r PAD_A_ESD_0_H $end
$var wire 1 [a PAD_A_ESD_1_H $end
$var wire 1 \a PAD_A_NOESD_H $end
$var wire 1 y' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 A( VTRIP_SEL $end
$var wire 1 s/ TIE_LO_ESD $end
$var wire 1 ]a TIE_HI_ESD $end
$var wire 1 ^a IN_H $end
$var wire 1 ;0 IN $end
$var wire 1 s/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 _a event_error_vswitch5 $end
$var event 1 `a event_error_vswitch4 $end
$var event 1 aa event_error_vswitch3 $end
$var event 1 ba event_error_vswitch2 $end
$var event 1 ca event_error_vswitch1 $end
$var event 1 da event_error_vddio_q2 $end
$var event 1 ea event_error_vddio_q1 $end
$var event 1 fa event_error_vdda_vddioq_vswitch2 $end
$var event 1 ga event_error_vdda3 $end
$var event 1 ha event_error_vdda2 $end
$var event 1 ia event_error_vdda $end
$var event 1 ja event_error_supply_good $end
$var event 1 ka event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 a" ANALOG_EN $end
$var wire 1 )# ANALOG_POL $end
$var wire 1 O# ANALOG_SEL $end
$var wire 3 la DM [2:0] $end
$var wire 1 +% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 Q% HLD_H_N $end
$var wire 1 w% HLD_OVR $end
$var wire 1 ?& IB_MODE_SEL $end
$var wire 1 e& INP_DIS $end
$var wire 1 -' OE_N $end
$var wire 1 S' OUT $end
$var wire 1 ;" PAD $end
$var wire 1 r PAD_A_ESD_0_H $end
$var wire 1 [a PAD_A_ESD_1_H $end
$var wire 1 \a PAD_A_NOESD_H $end
$var wire 1 y' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 A( VTRIP_SEL $end
$var wire 3 ma dm_buf [2:0] $end
$var wire 1 na error_enable_vddio $end
$var wire 1 oa error_supply_good $end
$var wire 1 pa error_vdda $end
$var wire 1 qa error_vdda2 $end
$var wire 1 ra error_vdda3 $end
$var wire 1 sa error_vdda_vddioq_vswitch2 $end
$var wire 1 ta error_vddio_q1 $end
$var wire 1 ua error_vddio_q2 $end
$var wire 1 va error_vswitch1 $end
$var wire 1 wa error_vswitch2 $end
$var wire 1 xa error_vswitch3 $end
$var wire 1 ya error_vswitch4 $end
$var wire 1 za error_vswitch5 $end
$var wire 1 {a functional_mode_amux $end
$var wire 1 |a hld_h_n_buf $end
$var wire 1 }a hld_ovr_buf $end
$var wire 1 ~a ib_mode_sel_buf $end
$var wire 1 !b inp_dis_buf $end
$var wire 1 "b invalid_controls_amux $end
$var wire 1 #b oe_n_buf $end
$var wire 1 $b out_buf $end
$var wire 1 %b pad_tristate $end
$var wire 1 &b pwr_good_active_mode $end
$var wire 1 'b pwr_good_active_mode_vdda $end
$var wire 1 (b pwr_good_amux $end
$var wire 1 )b pwr_good_analog_en_vdda $end
$var wire 1 *b pwr_good_analog_en_vddio_q $end
$var wire 1 +b pwr_good_analog_en_vswitch $end
$var wire 1 ,b pwr_good_hold_mode $end
$var wire 1 -b pwr_good_hold_mode_vdda $end
$var wire 1 .b pwr_good_hold_ovr_mode $end
$var wire 1 /b pwr_good_inpbuff_hv $end
$var wire 1 0b pwr_good_inpbuff_lv $end
$var wire 1 1b pwr_good_output_driver $end
$var wire 1 2b slow_buf $end
$var wire 1 3b vtrip_sel_buf $end
$var wire 1 4b x_on_analog_en_vdda $end
$var wire 1 5b x_on_analog_en_vddio_q $end
$var wire 1 6b x_on_analog_en_vswitch $end
$var wire 1 7b x_on_in_hv $end
$var wire 1 8b x_on_in_lv $end
$var wire 1 9b x_on_pad $end
$var wire 1 :b zero_on_analog_en_vdda $end
$var wire 1 ;b zero_on_analog_en_vddio_q $end
$var wire 1 <b zero_on_analog_en_vswitch $end
$var wire 1 =b pwr_good_amux_vccd $end
$var wire 1 >b enable_pad_vssio_q $end
$var wire 1 ?b enable_pad_vddio_q $end
$var wire 1 @b enable_pad_amuxbus_b $end
$var wire 1 Ab enable_pad_amuxbus_a $end
$var wire 1 Bb disable_inp_buff_lv $end
$var wire 1 Cb disable_inp_buff $end
$var wire 3 Db amux_select [2:0] $end
$var wire 1 s/ TIE_LO_ESD $end
$var wire 1 ]a TIE_HI_ESD $end
$var wire 1 ^a IN_H $end
$var wire 1 ;0 IN $end
$var wire 1 s/ ENABLE_INP_H $end
$var reg 1 Eb analog_en_final $end
$var reg 1 Fb analog_en_vdda $end
$var reg 1 Gb analog_en_vddio_q $end
$var reg 1 Hb analog_en_vswitch $end
$var reg 1 Ib dis_err_msgs $end
$var reg 3 Jb dm_final [2:0] $end
$var reg 1 Kb hld_ovr_final $end
$var reg 1 Lb ib_mode_sel_final $end
$var reg 1 Mb inp_dis_final $end
$var reg 1 Nb notifier_dm $end
$var reg 1 Ob notifier_enable_h $end
$var reg 1 Pb notifier_hld_ovr $end
$var reg 1 Qb notifier_ib_mode_sel $end
$var reg 1 Rb notifier_inp_dis $end
$var reg 1 Sb notifier_oe_n $end
$var reg 1 Tb notifier_out $end
$var reg 1 Ub notifier_slow $end
$var reg 1 Vb notifier_vtrip_sel $end
$var reg 1 Wb oe_n_final $end
$var reg 1 Xb out_final $end
$var reg 1 Yb slow_final $end
$var reg 1 Zb vtrip_sel_final $end
$var integer 32 [b msg_count_pad [31:0] $end
$var integer 32 \b msg_count_pad1 [31:0] $end
$var integer 32 ]b msg_count_pad10 [31:0] $end
$var integer 32 ^b msg_count_pad11 [31:0] $end
$var integer 32 _b msg_count_pad12 [31:0] $end
$var integer 32 `b msg_count_pad2 [31:0] $end
$var integer 32 ab msg_count_pad3 [31:0] $end
$var integer 32 bb msg_count_pad4 [31:0] $end
$var integer 32 cb msg_count_pad5 [31:0] $end
$var integer 32 db msg_count_pad6 [31:0] $end
$var integer 32 eb msg_count_pad7 [31:0] $end
$var integer 32 fb msg_count_pad8 [31:0] $end
$var integer 32 gb msg_count_pad9 [31:0] $end
$var integer 32 hb slow_0_delay [31:0] $end
$var integer 32 ib slow_1_delay [31:0] $end
$var integer 32 jb slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area2_io_pad[8] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 b" ANALOG_EN $end
$var wire 1 *# ANALOG_POL $end
$var wire 1 P# ANALOG_SEL $end
$var wire 3 kb DM [2:0] $end
$var wire 1 ,% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 R% HLD_H_N $end
$var wire 1 x% HLD_OVR $end
$var wire 1 @& IB_MODE_SEL $end
$var wire 1 f& INP_DIS $end
$var wire 1 .' OE_N $end
$var wire 1 T' OUT $end
$var wire 1 <" PAD $end
$var wire 1 s PAD_A_ESD_0_H $end
$var wire 1 lb PAD_A_ESD_1_H $end
$var wire 1 mb PAD_A_NOESD_H $end
$var wire 1 z' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 B( VTRIP_SEL $end
$var wire 1 r/ TIE_LO_ESD $end
$var wire 1 nb TIE_HI_ESD $end
$var wire 1 ob IN_H $end
$var wire 1 :0 IN $end
$var wire 1 r/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 pb event_error_vswitch5 $end
$var event 1 qb event_error_vswitch4 $end
$var event 1 rb event_error_vswitch3 $end
$var event 1 sb event_error_vswitch2 $end
$var event 1 tb event_error_vswitch1 $end
$var event 1 ub event_error_vddio_q2 $end
$var event 1 vb event_error_vddio_q1 $end
$var event 1 wb event_error_vdda_vddioq_vswitch2 $end
$var event 1 xb event_error_vdda3 $end
$var event 1 yb event_error_vdda2 $end
$var event 1 zb event_error_vdda $end
$var event 1 {b event_error_supply_good $end
$var event 1 |b event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 b" ANALOG_EN $end
$var wire 1 *# ANALOG_POL $end
$var wire 1 P# ANALOG_SEL $end
$var wire 3 }b DM [2:0] $end
$var wire 1 ,% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 R% HLD_H_N $end
$var wire 1 x% HLD_OVR $end
$var wire 1 @& IB_MODE_SEL $end
$var wire 1 f& INP_DIS $end
$var wire 1 .' OE_N $end
$var wire 1 T' OUT $end
$var wire 1 <" PAD $end
$var wire 1 s PAD_A_ESD_0_H $end
$var wire 1 lb PAD_A_ESD_1_H $end
$var wire 1 mb PAD_A_NOESD_H $end
$var wire 1 z' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 B( VTRIP_SEL $end
$var wire 3 ~b dm_buf [2:0] $end
$var wire 1 !c error_enable_vddio $end
$var wire 1 "c error_supply_good $end
$var wire 1 #c error_vdda $end
$var wire 1 $c error_vdda2 $end
$var wire 1 %c error_vdda3 $end
$var wire 1 &c error_vdda_vddioq_vswitch2 $end
$var wire 1 'c error_vddio_q1 $end
$var wire 1 (c error_vddio_q2 $end
$var wire 1 )c error_vswitch1 $end
$var wire 1 *c error_vswitch2 $end
$var wire 1 +c error_vswitch3 $end
$var wire 1 ,c error_vswitch4 $end
$var wire 1 -c error_vswitch5 $end
$var wire 1 .c functional_mode_amux $end
$var wire 1 /c hld_h_n_buf $end
$var wire 1 0c hld_ovr_buf $end
$var wire 1 1c ib_mode_sel_buf $end
$var wire 1 2c inp_dis_buf $end
$var wire 1 3c invalid_controls_amux $end
$var wire 1 4c oe_n_buf $end
$var wire 1 5c out_buf $end
$var wire 1 6c pad_tristate $end
$var wire 1 7c pwr_good_active_mode $end
$var wire 1 8c pwr_good_active_mode_vdda $end
$var wire 1 9c pwr_good_amux $end
$var wire 1 :c pwr_good_analog_en_vdda $end
$var wire 1 ;c pwr_good_analog_en_vddio_q $end
$var wire 1 <c pwr_good_analog_en_vswitch $end
$var wire 1 =c pwr_good_hold_mode $end
$var wire 1 >c pwr_good_hold_mode_vdda $end
$var wire 1 ?c pwr_good_hold_ovr_mode $end
$var wire 1 @c pwr_good_inpbuff_hv $end
$var wire 1 Ac pwr_good_inpbuff_lv $end
$var wire 1 Bc pwr_good_output_driver $end
$var wire 1 Cc slow_buf $end
$var wire 1 Dc vtrip_sel_buf $end
$var wire 1 Ec x_on_analog_en_vdda $end
$var wire 1 Fc x_on_analog_en_vddio_q $end
$var wire 1 Gc x_on_analog_en_vswitch $end
$var wire 1 Hc x_on_in_hv $end
$var wire 1 Ic x_on_in_lv $end
$var wire 1 Jc x_on_pad $end
$var wire 1 Kc zero_on_analog_en_vdda $end
$var wire 1 Lc zero_on_analog_en_vddio_q $end
$var wire 1 Mc zero_on_analog_en_vswitch $end
$var wire 1 Nc pwr_good_amux_vccd $end
$var wire 1 Oc enable_pad_vssio_q $end
$var wire 1 Pc enable_pad_vddio_q $end
$var wire 1 Qc enable_pad_amuxbus_b $end
$var wire 1 Rc enable_pad_amuxbus_a $end
$var wire 1 Sc disable_inp_buff_lv $end
$var wire 1 Tc disable_inp_buff $end
$var wire 3 Uc amux_select [2:0] $end
$var wire 1 r/ TIE_LO_ESD $end
$var wire 1 nb TIE_HI_ESD $end
$var wire 1 ob IN_H $end
$var wire 1 :0 IN $end
$var wire 1 r/ ENABLE_INP_H $end
$var reg 1 Vc analog_en_final $end
$var reg 1 Wc analog_en_vdda $end
$var reg 1 Xc analog_en_vddio_q $end
$var reg 1 Yc analog_en_vswitch $end
$var reg 1 Zc dis_err_msgs $end
$var reg 3 [c dm_final [2:0] $end
$var reg 1 \c hld_ovr_final $end
$var reg 1 ]c ib_mode_sel_final $end
$var reg 1 ^c inp_dis_final $end
$var reg 1 _c notifier_dm $end
$var reg 1 `c notifier_enable_h $end
$var reg 1 ac notifier_hld_ovr $end
$var reg 1 bc notifier_ib_mode_sel $end
$var reg 1 cc notifier_inp_dis $end
$var reg 1 dc notifier_oe_n $end
$var reg 1 ec notifier_out $end
$var reg 1 fc notifier_slow $end
$var reg 1 gc notifier_vtrip_sel $end
$var reg 1 hc oe_n_final $end
$var reg 1 ic out_final $end
$var reg 1 jc slow_final $end
$var reg 1 kc vtrip_sel_final $end
$var integer 32 lc msg_count_pad [31:0] $end
$var integer 32 mc msg_count_pad1 [31:0] $end
$var integer 32 nc msg_count_pad10 [31:0] $end
$var integer 32 oc msg_count_pad11 [31:0] $end
$var integer 32 pc msg_count_pad12 [31:0] $end
$var integer 32 qc msg_count_pad2 [31:0] $end
$var integer 32 rc msg_count_pad3 [31:0] $end
$var integer 32 sc msg_count_pad4 [31:0] $end
$var integer 32 tc msg_count_pad5 [31:0] $end
$var integer 32 uc msg_count_pad6 [31:0] $end
$var integer 32 vc msg_count_pad7 [31:0] $end
$var integer 32 wc msg_count_pad8 [31:0] $end
$var integer 32 xc msg_count_pad9 [31:0] $end
$var integer 32 yc slow_0_delay [31:0] $end
$var integer 32 zc slow_1_delay [31:0] $end
$var integer 32 {c slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module mprj_pads.area2_io_pad[9] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 c" ANALOG_EN $end
$var wire 1 +# ANALOG_POL $end
$var wire 1 Q# ANALOG_SEL $end
$var wire 3 |c DM [2:0] $end
$var wire 1 -% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 S% HLD_H_N $end
$var wire 1 y% HLD_OVR $end
$var wire 1 A& IB_MODE_SEL $end
$var wire 1 g& INP_DIS $end
$var wire 1 /' OE_N $end
$var wire 1 U' OUT $end
$var wire 1 =" PAD $end
$var wire 1 u PAD_A_ESD_0_H $end
$var wire 1 }c PAD_A_ESD_1_H $end
$var wire 1 ~c PAD_A_NOESD_H $end
$var wire 1 {' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 C( VTRIP_SEL $end
$var wire 1 q/ TIE_LO_ESD $end
$var wire 1 !d TIE_HI_ESD $end
$var wire 1 "d IN_H $end
$var wire 1 90 IN $end
$var wire 1 q/ ENABLE_INP_H $end
$scope module gpiov2_base $end
$var event 1 #d event_error_vswitch5 $end
$var event 1 $d event_error_vswitch4 $end
$var event 1 %d event_error_vswitch3 $end
$var event 1 &d event_error_vswitch2 $end
$var event 1 'd event_error_vswitch1 $end
$var event 1 (d event_error_vddio_q2 $end
$var event 1 )d event_error_vddio_q1 $end
$var event 1 *d event_error_vdda_vddioq_vswitch2 $end
$var event 1 +d event_error_vdda3 $end
$var event 1 ,d event_error_vdda2 $end
$var event 1 -d event_error_vdda $end
$var event 1 .d event_error_supply_good $end
$var event 1 /d event_error_enable_vddio $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 c" ANALOG_EN $end
$var wire 1 +# ANALOG_POL $end
$var wire 1 Q# ANALOG_SEL $end
$var wire 3 0d DM [2:0] $end
$var wire 1 -% ENABLE_H $end
$var wire 1 Z ENABLE_VDDA_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % ENABLE_VSWITCH_H $end
$var wire 1 S% HLD_H_N $end
$var wire 1 y% HLD_OVR $end
$var wire 1 A& IB_MODE_SEL $end
$var wire 1 g& INP_DIS $end
$var wire 1 /' OE_N $end
$var wire 1 U' OUT $end
$var wire 1 =" PAD $end
$var wire 1 u PAD_A_ESD_0_H $end
$var wire 1 }c PAD_A_ESD_1_H $end
$var wire 1 ~c PAD_A_NOESD_H $end
$var wire 1 {' SLOW $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 C( VTRIP_SEL $end
$var wire 3 1d dm_buf [2:0] $end
$var wire 1 2d error_enable_vddio $end
$var wire 1 3d error_supply_good $end
$var wire 1 4d error_vdda $end
$var wire 1 5d error_vdda2 $end
$var wire 1 6d error_vdda3 $end
$var wire 1 7d error_vdda_vddioq_vswitch2 $end
$var wire 1 8d error_vddio_q1 $end
$var wire 1 9d error_vddio_q2 $end
$var wire 1 :d error_vswitch1 $end
$var wire 1 ;d error_vswitch2 $end
$var wire 1 <d error_vswitch3 $end
$var wire 1 =d error_vswitch4 $end
$var wire 1 >d error_vswitch5 $end
$var wire 1 ?d functional_mode_amux $end
$var wire 1 @d hld_h_n_buf $end
$var wire 1 Ad hld_ovr_buf $end
$var wire 1 Bd ib_mode_sel_buf $end
$var wire 1 Cd inp_dis_buf $end
$var wire 1 Dd invalid_controls_amux $end
$var wire 1 Ed oe_n_buf $end
$var wire 1 Fd out_buf $end
$var wire 1 Gd pad_tristate $end
$var wire 1 Hd pwr_good_active_mode $end
$var wire 1 Id pwr_good_active_mode_vdda $end
$var wire 1 Jd pwr_good_amux $end
$var wire 1 Kd pwr_good_analog_en_vdda $end
$var wire 1 Ld pwr_good_analog_en_vddio_q $end
$var wire 1 Md pwr_good_analog_en_vswitch $end
$var wire 1 Nd pwr_good_hold_mode $end
$var wire 1 Od pwr_good_hold_mode_vdda $end
$var wire 1 Pd pwr_good_hold_ovr_mode $end
$var wire 1 Qd pwr_good_inpbuff_hv $end
$var wire 1 Rd pwr_good_inpbuff_lv $end
$var wire 1 Sd pwr_good_output_driver $end
$var wire 1 Td slow_buf $end
$var wire 1 Ud vtrip_sel_buf $end
$var wire 1 Vd x_on_analog_en_vdda $end
$var wire 1 Wd x_on_analog_en_vddio_q $end
$var wire 1 Xd x_on_analog_en_vswitch $end
$var wire 1 Yd x_on_in_hv $end
$var wire 1 Zd x_on_in_lv $end
$var wire 1 [d x_on_pad $end
$var wire 1 \d zero_on_analog_en_vdda $end
$var wire 1 ]d zero_on_analog_en_vddio_q $end
$var wire 1 ^d zero_on_analog_en_vswitch $end
$var wire 1 _d pwr_good_amux_vccd $end
$var wire 1 `d enable_pad_vssio_q $end
$var wire 1 ad enable_pad_vddio_q $end
$var wire 1 bd enable_pad_amuxbus_b $end
$var wire 1 cd enable_pad_amuxbus_a $end
$var wire 1 dd disable_inp_buff_lv $end
$var wire 1 ed disable_inp_buff $end
$var wire 3 fd amux_select [2:0] $end
$var wire 1 q/ TIE_LO_ESD $end
$var wire 1 !d TIE_HI_ESD $end
$var wire 1 "d IN_H $end
$var wire 1 90 IN $end
$var wire 1 q/ ENABLE_INP_H $end
$var reg 1 gd analog_en_final $end
$var reg 1 hd analog_en_vdda $end
$var reg 1 id analog_en_vddio_q $end
$var reg 1 jd analog_en_vswitch $end
$var reg 1 kd dis_err_msgs $end
$var reg 3 ld dm_final [2:0] $end
$var reg 1 md hld_ovr_final $end
$var reg 1 nd ib_mode_sel_final $end
$var reg 1 od inp_dis_final $end
$var reg 1 pd notifier_dm $end
$var reg 1 qd notifier_enable_h $end
$var reg 1 rd notifier_hld_ovr $end
$var reg 1 sd notifier_ib_mode_sel $end
$var reg 1 td notifier_inp_dis $end
$var reg 1 ud notifier_oe_n $end
$var reg 1 vd notifier_out $end
$var reg 1 wd notifier_slow $end
$var reg 1 xd notifier_vtrip_sel $end
$var reg 1 yd oe_n_final $end
$var reg 1 zd out_final $end
$var reg 1 {d slow_final $end
$var reg 1 |d vtrip_sel_final $end
$var integer 32 }d msg_count_pad [31:0] $end
$var integer 32 ~d msg_count_pad1 [31:0] $end
$var integer 32 !e msg_count_pad10 [31:0] $end
$var integer 32 "e msg_count_pad11 [31:0] $end
$var integer 32 #e msg_count_pad12 [31:0] $end
$var integer 32 $e msg_count_pad2 [31:0] $end
$var integer 32 %e msg_count_pad3 [31:0] $end
$var integer 32 &e msg_count_pad4 [31:0] $end
$var integer 32 'e msg_count_pad5 [31:0] $end
$var integer 32 (e msg_count_pad6 [31:0] $end
$var integer 32 )e msg_count_pad7 [31:0] $end
$var integer 32 *e msg_count_pad8 [31:0] $end
$var integer 32 +e msg_count_pad9 [31:0] $end
$var integer 32 ,e slow_0_delay [31:0] $end
$var integer 32 -e slow_1_delay [31:0] $end
$var integer 32 .e slow_delay [31:0] $end
$scope begin LATCH_dm $end
$upscope $end
$scope begin LATCH_hld_ovr $end
$upscope $end
$scope begin LATCH_ib_mode_sel $end
$upscope $end
$scope begin LATCH_inp_dis $end
$upscope $end
$scope begin LATCH_oe_n $end
$upscope $end
$scope begin LATCH_out $end
$upscope $end
$scope begin LATCH_slow $end
$upscope $end
$scope begin LATCH_vtrip_sel $end
$upscope $end
$upscope $end
$upscope $end
$scope module resetb_pad $end
$var event 1 /e event_errflag_pad_pulse_width $end
$var event 1 0e event_errflag_filt_in_h_pulse_width $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 % DISABLE_PULLUP_H $end
$var wire 1 Z ENABLE_H $end
$var wire 1 ! ENABLE_VDDIO $end
$var wire 1 % EN_VDDIO_SIG_H $end
$var wire 1 % FILT_IN_H $end
$var wire 1 % INP_SEL_H $end
$var wire 1 [/ PAD $end
$var wire 1 ^/ PAD_A_ESD_H $end
$var wire 1 % PULLUP_H $end
$var wire 1 1e TIE_HI_ESD $end
$var wire 1 2e TIE_LO_ESD $end
$var wire 1 ^/ TIE_WEAK_HI_H $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 3e mode_vcchib $end
$var wire 1 4e pwr_good_pullup $end
$var wire 1 5e pwr_good_xres_h_n $end
$var wire 1 6e pwr_good_xres_tmp $end
$var wire 1 7e tmp $end
$var wire 1 8e tmp1 $end
$var wire 1 9e x_on_xres_h_n $end
$var wire 1 :e xres_tmp $end
$var wire 1 / XRES_H_N $end
$var reg 1 ;e corrupt_enable $end
$var reg 1 <e dis_err_msgs $end
$var reg 1 =e notifier_enable_h $end
$var integer 32 >e disable_enable_vddio_change_x [31:0] $end
$var real 1 ?e filt_in_h_pulse_width $end
$var integer 32 @e max_delay [31:0] $end
$var integer 32 Ae min_delay [31:0] $end
$var integer 32 Be msg_count_filt_in_h [31:0] $end
$var integer 32 Ce msg_count_pad [31:0] $end
$var real 1 De pad_pulse_width $end
$var real 1 Ee t_filt_in_h_current_transition $end
$var real 1 Fe t_filt_in_h_prev_transition $end
$var real 1 Ge t_pad_current_transition $end
$var real 1 He t_pad_prev_transition $end
$upscope $end
$scope module user1_corner $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$upscope $end
$scope module user1_vccd_lvclamp_pad $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 ! VCCD $end
$var wire 1 Ie VCCD_PAD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$scope module sky130_fd_io__top_power_lvc_base $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 % BDY2_B2B $end
$var wire 1 ! DRN_LVC1 $end
$var wire 1 ! DRN_LVC2 $end
$var wire 1 Je OGC_LVC $end
$var wire 1 ! P_CORE $end
$var wire 1 Ie P_PAD $end
$var wire 1 % SRC_BDY_LVC1 $end
$var wire 1 % SRC_BDY_LVC2 $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$upscope $end
$upscope $end
$scope module user1_vdda_hvclamp_pad[0] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 Ke VDDA_PAD $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$scope module sky130_fd_io__top_power_hvc_base $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 # DRN_HVC $end
$var wire 1 Le OGC_HVC $end
$var wire 1 # P_CORE $end
$var wire 1 Ke P_PAD $end
$var wire 1 % SRC_BDY_HVC $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$upscope $end
$upscope $end
$scope module user1_vdda_hvclamp_pad[1] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 Me VDDA_PAD $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$scope module sky130_fd_io__top_power_hvc_base $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 # DRN_HVC $end
$var wire 1 Ne OGC_HVC $end
$var wire 1 # P_CORE $end
$var wire 1 Me P_PAD $end
$var wire 1 % SRC_BDY_HVC $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$upscope $end
$upscope $end
$scope module user1_vssa_hvclamp_pad[0] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 Oe VSSA_PAD $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$scope module sky130_fd_io__top_ground_hvc_base $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 # DRN_HVC $end
$var wire 1 % G_CORE $end
$var wire 1 Oe G_PAD $end
$var wire 1 Pe OGC_HVC $end
$var wire 1 % SRC_BDY_HVC $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$upscope $end
$upscope $end
$scope module user1_vssa_hvclamp_pad[1] $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 Qe VSSA_PAD $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$scope module sky130_fd_io__top_ground_hvc_base $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 # DRN_HVC $end
$var wire 1 % G_CORE $end
$var wire 1 Qe G_PAD $end
$var wire 1 Re OGC_HVC $end
$var wire 1 % SRC_BDY_HVC $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$upscope $end
$upscope $end
$scope module user1_vssd_lvclmap_pad $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 Se VSSD_PAD $end
$scope module sky130_fd_io__top_ground_lvc_base $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 % BDY2_B2B $end
$var wire 1 ! DRN_LVC1 $end
$var wire 1 ! DRN_LVC2 $end
$var wire 1 Se G_CORE $end
$var wire 1 % G_PAD $end
$var wire 1 Te OGC_LVC $end
$var wire 1 % SRC_BDY_LVC1 $end
$var wire 1 % SRC_BDY_LVC2 $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$upscope $end
$upscope $end
$scope module user2_corner $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$upscope $end
$scope module user2_vccd_lvclamp_pad $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 ! VCCD $end
$var wire 1 Ue VCCD_PAD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$scope module sky130_fd_io__top_power_lvc_base $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 % BDY2_B2B $end
$var wire 1 ! DRN_LVC1 $end
$var wire 1 ! DRN_LVC2 $end
$var wire 1 Ve OGC_LVC $end
$var wire 1 ! P_CORE $end
$var wire 1 Ue P_PAD $end
$var wire 1 % SRC_BDY_LVC1 $end
$var wire 1 % SRC_BDY_LVC2 $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$upscope $end
$upscope $end
$scope module user2_vdda_hvclamp_pad $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 We VDDA_PAD $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$scope module sky130_fd_io__top_power_hvc_base $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 # DRN_HVC $end
$var wire 1 Xe OGC_HVC $end
$var wire 1 # P_CORE $end
$var wire 1 We P_PAD $end
$var wire 1 % SRC_BDY_HVC $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$upscope $end
$upscope $end
$scope module user2_vssa_hvclamp_pad $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 Ye VSSA_PAD $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$scope module sky130_fd_io__top_ground_hvc_base $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 # DRN_HVC $end
$var wire 1 % G_CORE $end
$var wire 1 Ye G_PAD $end
$var wire 1 Ze OGC_HVC $end
$var wire 1 % SRC_BDY_HVC $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$upscope $end
$upscope $end
$scope module user2_vssd_lvclmap_pad $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$var wire 1 [e VSSD_PAD $end
$scope module sky130_fd_io__top_ground_lvc_base $end
$var wire 1 V( AMUXBUS_A $end
$var wire 1 W( AMUXBUS_B $end
$var wire 1 % BDY2_B2B $end
$var wire 1 ! DRN_LVC1 $end
$var wire 1 ! DRN_LVC2 $end
$var wire 1 [e G_CORE $end
$var wire 1 % G_PAD $end
$var wire 1 \e OGC_LVC $end
$var wire 1 % SRC_BDY_LVC1 $end
$var wire 1 % SRC_BDY_LVC2 $end
$var wire 1 ! VCCD $end
$var wire 1 ! VCCHIB $end
$var wire 1 # VDDA $end
$var wire 1 # VDDIO $end
$var wire 1 -/ VDDIO_Q $end
$var wire 1 % VSSA $end
$var wire 1 % VSSD $end
$var wire 1 % VSSIO $end
$var wire 1 4/ VSSIO_Q $end
$var wire 1 # VSWITCH $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
z\e
x[e
zZe
zYe
zXe
zWe
zVe
zUe
zTe
xSe
zRe
zQe
zPe
zOe
zNe
zMe
zLe
zKe
zJe
zIe
r0 He
r0 Ge
r0 Fe
r0 Ee
r0 De
b0 Ce
b0 Be
b110010 Ae
b1001011000 @e
r0 ?e
b0 >e
x=e
1<e
0;e
x:e
19e
x8e
17e
06e
05e
04e
03e
x2e
z1e
10e
1/e
b0 .e
b0 -e
b0 ,e
b0 +e
b0 *e
b0 )e
b0 (e
b0 'e
b0 &e
b0 %e
b0 $e
b0 #e
b0 "e
b0 !e
b0 ~d
b0 }d
x|d
x{d
xzd
xyd
xxd
xwd
xvd
xud
xtd
xsd
xrd
xqd
xpd
xod
xnd
xmd
bx ld
1kd
xjd
xid
xhd
xgd
b0x fd
0ed
0dd
xcd
xbd
xad
x`d
1_d
0^d
0]d
0\d
1[d
1Zd
1Yd
1Xd
1Wd
1Vd
0Ud
0Td
0Sd
0Rd
0Qd
0Pd
0Od
0Nd
0Md
0Ld
0Kd
0Jd
0Id
0Hd
0Gd
xFd
xEd
1Dd
xCd
0Bd
0Ad
z@d
0?d
x>d
x=d
x<d
x;d
x:d
x9d
x8d
x7d
x6d
x5d
x4d
x3d
x2d
bx 1d
bx 0d
1/d
1.d
1-d
1,d
1+d
1*d
1)d
1(d
1'd
1&d
1%d
1$d
1#d
x"d
x!d
x~c
x}c
bx |c
b0 {c
b0 zc
b0 yc
b0 xc
b0 wc
b0 vc
b0 uc
b0 tc
b0 sc
b0 rc
b0 qc
b0 pc
b0 oc
b0 nc
b0 mc
b0 lc
xkc
xjc
xic
xhc
xgc
xfc
xec
xdc
xcc
xbc
xac
x`c
x_c
x^c
x]c
x\c
bx [c
1Zc
xYc
xXc
xWc
xVc
b0x Uc
0Tc
0Sc
xRc
xQc
xPc
xOc
1Nc
0Mc
0Lc
0Kc
1Jc
1Ic
1Hc
1Gc
1Fc
1Ec
0Dc
0Cc
0Bc
0Ac
0@c
0?c
0>c
0=c
0<c
0;c
0:c
09c
08c
07c
06c
x5c
x4c
13c
x2c
01c
00c
z/c
0.c
x-c
x,c
x+c
x*c
x)c
x(c
x'c
x&c
x%c
x$c
x#c
x"c
x!c
bx ~b
bx }b
1|b
1{b
1zb
1yb
1xb
1wb
1vb
1ub
1tb
1sb
1rb
1qb
1pb
xob
xnb
xmb
xlb
bx kb
b0 jb
b0 ib
b0 hb
b0 gb
b0 fb
b0 eb
b0 db
b0 cb
b0 bb
b0 ab
b0 `b
b0 _b
b0 ^b
b0 ]b
b0 \b
b0 [b
xZb
xYb
xXb
xWb
xVb
xUb
xTb
xSb
xRb
xQb
xPb
xOb
xNb
xMb
xLb
xKb
bx Jb
1Ib
xHb
xGb
xFb
xEb
b0x Db
0Cb
0Bb
xAb
x@b
x?b
x>b
1=b
0<b
0;b
0:b
19b
18b
17b
16b
15b
14b
03b
02b
01b
00b
0/b
0.b
0-b
0,b
0+b
0*b
0)b
0(b
0'b
0&b
0%b
x$b
x#b
1"b
x!b
0~a
0}a
z|a
0{a
xza
xya
xxa
xwa
xva
xua
xta
xsa
xra
xqa
xpa
xoa
xna
bx ma
bx la
1ka
1ja
1ia
1ha
1ga
1fa
1ea
1da
1ca
1ba
1aa
1`a
1_a
x^a
x]a
x\a
x[a
bx Za
b0 Ya
b0 Xa
b0 Wa
b0 Va
b0 Ua
b0 Ta
b0 Sa
b0 Ra
b0 Qa
b0 Pa
b0 Oa
b0 Na
b0 Ma
b0 La
b0 Ka
b0 Ja
xIa
xHa
xGa
xFa
xEa
xDa
xCa
xBa
xAa
x@a
x?a
x>a
x=a
x<a
x;a
x:a
bx 9a
18a
x7a
x6a
x5a
x4a
b0x 3a
02a
01a
x0a
x/a
x.a
x-a
1,a
0+a
0*a
0)a
1(a
1'a
1&a
1%a
1$a
1#a
0"a
0!a
0~`
0}`
0|`
0{`
0z`
0y`
0x`
0w`
0v`
0u`
0t`
0s`
0r`
xq`
xp`
1o`
xn`
0m`
0l`
zk`
0j`
xi`
xh`
xg`
xf`
xe`
xd`
xc`
xb`
xa`
x``
x_`
x^`
x]`
bx \`
bx [`
1Z`
1Y`
1X`
1W`
1V`
1U`
1T`
1S`
1R`
1Q`
1P`
1O`
1N`
xM`
xL`
xK`
xJ`
bx I`
b0 H`
b0 G`
b0 F`
b0 E`
b0 D`
b0 C`
b0 B`
b0 A`
b0 @`
b0 ?`
b0 >`
b0 =`
b0 <`
b0 ;`
b0 :`
b0 9`
x8`
x7`
x6`
x5`
x4`
x3`
x2`
x1`
x0`
x/`
x.`
x-`
x,`
x+`
x*`
x)`
bx (`
1'`
x&`
x%`
x$`
x#`
b0x "`
0!`
0~_
x}_
x|_
x{_
xz_
1y_
0x_
0w_
0v_
1u_
1t_
1s_
1r_
1q_
1p_
0o_
0n_
0m_
0l_
0k_
0j_
0i_
0h_
0g_
0f_
0e_
0d_
0c_
0b_
0a_
x`_
x__
1^_
x]_
0\_
0[_
zZ_
0Y_
xX_
xW_
xV_
xU_
xT_
xS_
xR_
xQ_
xP_
xO_
xN_
xM_
xL_
bx K_
bx J_
1I_
1H_
1G_
1F_
1E_
1D_
1C_
1B_
1A_
1@_
1?_
1>_
1=_
x<_
x;_
x:_
x9_
bx 8_
b0 7_
b0 6_
b0 5_
b0 4_
b0 3_
b0 2_
b0 1_
b0 0_
b0 /_
b0 ._
b0 -_
b0 ,_
b0 +_
b0 *_
b0 )_
b0 (_
x'_
x&_
x%_
x$_
x#_
x"_
x!_
x~^
x}^
x|^
x{^
xz^
xy^
xx^
xw^
xv^
bx u^
1t^
xs^
xr^
xq^
xp^
b0x o^
0n^
0m^
xl^
xk^
xj^
xi^
1h^
0g^
0f^
0e^
1d^
1c^
1b^
1a^
1`^
1_^
0^^
0]^
0\^
0[^
0Z^
0Y^
0X^
0W^
0V^
0U^
0T^
0S^
0R^
0Q^
0P^
xO^
xN^
1M^
xL^
0K^
0J^
zI^
0H^
xG^
xF^
xE^
xD^
xC^
xB^
xA^
x@^
x?^
x>^
x=^
x<^
x;^
bx :^
bx 9^
18^
17^
16^
15^
14^
13^
12^
11^
10^
1/^
1.^
1-^
1,^
x+^
x*^
x)^
x(^
bx '^
b0 &^
b0 %^
b0 $^
b0 #^
b0 "^
b0 !^
b0 ~]
b0 }]
b0 |]
b0 {]
b0 z]
b0 y]
b0 x]
b0 w]
b0 v]
b0 u]
xt]
xs]
xr]
xq]
xp]
xo]
xn]
xm]
xl]
xk]
xj]
xi]
xh]
xg]
xf]
xe]
bx d]
1c]
xb]
xa]
x`]
x_]
b0x ^]
0]]
0\]
x[]
xZ]
xY]
xX]
1W]
0V]
0U]
0T]
1S]
1R]
1Q]
1P]
1O]
1N]
0M]
0L]
0K]
0J]
0I]
0H]
0G]
0F]
0E]
0D]
0C]
0B]
0A]
0@]
0?]
x>]
x=]
1<]
x;]
0:]
09]
z8]
07]
x6]
x5]
x4]
x3]
x2]
x1]
x0]
x/]
x.]
x-]
x,]
x+]
x*]
bx )]
bx (]
1']
1&]
1%]
1$]
1#]
1"]
1!]
1~\
1}\
1|\
1{\
1z\
1y\
xx\
xw\
xv\
xu\
bx t\
b0 s\
b0 r\
b0 q\
b0 p\
b0 o\
b0 n\
b0 m\
b0 l\
b0 k\
b0 j\
b0 i\
b0 h\
b0 g\
b0 f\
b0 e\
b0 d\
xc\
xb\
xa\
x`\
x_\
x^\
x]\
x\\
x[\
xZ\
xY\
xX\
xW\
xV\
xU\
xT\
bx S\
1R\
xQ\
xP\
xO\
xN\
b0x M\
0L\
0K\
xJ\
xI\
xH\
xG\
1F\
0E\
0D\
0C\
1B\
1A\
1@\
1?\
1>\
1=\
0<\
0;\
0:\
09\
08\
07\
06\
05\
04\
03\
02\
01\
00\
0/\
0.\
x-\
x,\
1+\
x*\
0)\
0(\
z'\
0&\
x%\
x$\
x#\
x"\
x!\
x~[
x}[
x|[
x{[
xz[
xy[
xx[
xw[
bx v[
bx u[
1t[
1s[
1r[
1q[
1p[
1o[
1n[
1m[
1l[
1k[
1j[
1i[
1h[
xg[
xf[
xe[
xd[
bx c[
b0 b[
b0 a[
b0 `[
b0 _[
b0 ^[
b0 ][
b0 \[
b0 [[
b0 Z[
b0 Y[
b0 X[
b0 W[
b0 V[
b0 U[
b0 T[
b0 S[
xR[
xQ[
xP[
xO[
xN[
xM[
xL[
xK[
xJ[
xI[
xH[
xG[
xF[
xE[
xD[
xC[
bx B[
1A[
x@[
x?[
x>[
x=[
b0x <[
0;[
0:[
x9[
x8[
x7[
x6[
15[
04[
03[
02[
11[
10[
1/[
1.[
1-[
1,[
0+[
0*[
0)[
0([
0'[
0&[
0%[
0$[
0#[
0"[
0![
0~Z
0}Z
0|Z
0{Z
xzZ
xyZ
1xZ
xwZ
0vZ
0uZ
ztZ
0sZ
xrZ
xqZ
xpZ
xoZ
xnZ
xmZ
xlZ
xkZ
xjZ
xiZ
xhZ
xgZ
xfZ
bx eZ
bx dZ
1cZ
1bZ
1aZ
1`Z
1_Z
1^Z
1]Z
1\Z
1[Z
1ZZ
1YZ
1XZ
1WZ
xVZ
xUZ
xTZ
xSZ
bx RZ
b0 QZ
b0 PZ
b0 OZ
b0 NZ
b0 MZ
b0 LZ
b0 KZ
b0 JZ
b0 IZ
b0 HZ
b0 GZ
b0 FZ
b0 EZ
b0 DZ
b0 CZ
b0 BZ
xAZ
x@Z
x?Z
x>Z
x=Z
x<Z
x;Z
x:Z
x9Z
x8Z
x7Z
x6Z
x5Z
x4Z
x3Z
x2Z
bx 1Z
10Z
x/Z
x.Z
x-Z
x,Z
b0x +Z
0*Z
0)Z
x(Z
x'Z
x&Z
x%Z
1$Z
0#Z
0"Z
0!Z
1~Y
1}Y
1|Y
1{Y
1zY
1yY
0xY
0wY
0vY
0uY
0tY
0sY
0rY
0qY
0pY
0oY
0nY
0mY
0lY
0kY
0jY
xiY
xhY
1gY
xfY
0eY
0dY
zcY
0bY
xaY
x`Y
x_Y
x^Y
x]Y
x\Y
x[Y
xZY
xYY
xXY
xWY
xVY
xUY
bx TY
bx SY
1RY
1QY
1PY
1OY
1NY
1MY
1LY
1KY
1JY
1IY
1HY
1GY
1FY
xEY
xDY
xCY
xBY
bx AY
b0 @Y
b0 ?Y
b0 >Y
b0 =Y
b0 <Y
b0 ;Y
b0 :Y
b0 9Y
b0 8Y
b0 7Y
b0 6Y
b0 5Y
b0 4Y
b0 3Y
b0 2Y
b0 1Y
x0Y
x/Y
x.Y
x-Y
x,Y
x+Y
x*Y
x)Y
x(Y
x'Y
x&Y
x%Y
x$Y
x#Y
x"Y
x!Y
bx ~X
1}X
x|X
x{X
xzX
xyX
b0x xX
0wX
0vX
xuX
xtX
xsX
xrX
1qX
0pX
0oX
0nX
1mX
1lX
1kX
1jX
1iX
1hX
0gX
0fX
0eX
0dX
0cX
0bX
0aX
0`X
0_X
0^X
0]X
0\X
0[X
0ZX
0YX
xXX
xWX
1VX
xUX
0TX
0SX
zRX
0QX
xPX
xOX
xNX
xMX
xLX
xKX
xJX
xIX
xHX
xGX
xFX
xEX
xDX
bx CX
bx BX
1AX
1@X
1?X
1>X
1=X
1<X
1;X
1:X
19X
18X
17X
16X
15X
x4X
x3X
x2X
x1X
bx 0X
b0 /X
b0 .X
b0 -X
b0 ,X
b0 +X
b0 *X
b0 )X
b0 (X
b0 'X
b0 &X
b0 %X
b0 $X
b0 #X
b0 "X
b0 !X
b0 ~W
x}W
x|W
x{W
xzW
xyW
xxW
xwW
xvW
xuW
xtW
xsW
xrW
xqW
xpW
xoW
xnW
bx mW
1lW
xkW
xjW
xiW
xhW
b0x gW
0fW
0eW
xdW
xcW
xbW
xaW
1`W
0_W
0^W
0]W
1\W
1[W
1ZW
1YW
1XW
1WW
0VW
0UW
0TW
0SW
0RW
0QW
0PW
0OW
0NW
0MW
0LW
0KW
0JW
0IW
0HW
xGW
xFW
1EW
xDW
0CW
0BW
zAW
0@W
x?W
x>W
x=W
x<W
x;W
x:W
x9W
x8W
x7W
x6W
x5W
x4W
x3W
bx 2W
bx 1W
10W
1/W
1.W
1-W
1,W
1+W
1*W
1)W
1(W
1'W
1&W
1%W
1$W
x#W
x"W
x!W
x~V
bx }V
b0 |V
b0 {V
b0 zV
b0 yV
b0 xV
b0 wV
b0 vV
b0 uV
b0 tV
b0 sV
b0 rV
b0 qV
b0 pV
b0 oV
b0 nV
b0 mV
xlV
xkV
xjV
xiV
xhV
xgV
xfV
xeV
xdV
xcV
xbV
xaV
x`V
x_V
x^V
x]V
bx \V
1[V
xZV
xYV
xXV
xWV
b0x VV
0UV
0TV
xSV
xRV
xQV
xPV
1OV
0NV
0MV
0LV
1KV
1JV
1IV
1HV
1GV
1FV
0EV
0DV
0CV
0BV
0AV
0@V
0?V
0>V
0=V
0<V
0;V
0:V
09V
08V
07V
x6V
x5V
14V
x3V
02V
01V
z0V
0/V
x.V
x-V
x,V
x+V
x*V
x)V
x(V
x'V
x&V
x%V
x$V
x#V
x"V
bx !V
bx ~U
1}U
1|U
1{U
1zU
1yU
1xU
1wU
1vU
1uU
1tU
1sU
1rU
1qU
xpU
xoU
xnU
xmU
bx lU
b0 kU
b0 jU
b0 iU
b0 hU
b0 gU
b0 fU
b0 eU
b0 dU
b0 cU
b0 bU
b0 aU
b0 `U
b0 _U
b0 ^U
b0 ]U
b0 \U
x[U
xZU
xYU
xXU
xWU
xVU
xUU
xTU
xSU
xRU
xQU
xPU
xOU
xNU
xMU
xLU
bx KU
1JU
xIU
xHU
xGU
xFU
b0x EU
0DU
0CU
xBU
xAU
x@U
x?U
1>U
0=U
0<U
0;U
1:U
19U
18U
17U
16U
15U
04U
03U
02U
01U
00U
0/U
0.U
0-U
0,U
0+U
0*U
0)U
0(U
0'U
0&U
x%U
x$U
1#U
x"U
0!U
0~T
z}T
0|T
x{T
xzT
xyT
xxT
xwT
xvT
xuT
xtT
xsT
xrT
xqT
xpT
xoT
bx nT
bx mT
1lT
1kT
1jT
1iT
1hT
1gT
1fT
1eT
1dT
1cT
1bT
1aT
1`T
x_T
x^T
x]T
x\T
bx [T
b0 ZT
b0 YT
b0 XT
b0 WT
b0 VT
b0 UT
b0 TT
b0 ST
b0 RT
b0 QT
b0 PT
b0 OT
b0 NT
b0 MT
b0 LT
b0 KT
xJT
xIT
xHT
xGT
xFT
xET
xDT
xCT
xBT
xAT
x@T
x?T
x>T
x=T
x<T
x;T
bx :T
19T
x8T
x7T
x6T
x5T
b0x 4T
03T
02T
x1T
x0T
x/T
x.T
1-T
0,T
0+T
0*T
1)T
1(T
1'T
1&T
1%T
1$T
0#T
0"T
0!T
0~S
0}S
0|S
0{S
0zS
0yS
0xS
0wS
0vS
0uS
0tS
0sS
xrS
xqS
1pS
xoS
0nS
0mS
zlS
0kS
xjS
xiS
xhS
xgS
xfS
xeS
xdS
xcS
xbS
xaS
x`S
x_S
x^S
bx ]S
bx \S
1[S
1ZS
1YS
1XS
1WS
1VS
1US
1TS
1SS
1RS
1QS
1PS
1OS
xNS
xMS
xLS
xKS
bx JS
b0 IS
b0 HS
b0 GS
b0 FS
b0 ES
b0 DS
b0 CS
b0 BS
b0 AS
b0 @S
b0 ?S
b0 >S
b0 =S
b0 <S
b0 ;S
b0 :S
x9S
x8S
x7S
x6S
x5S
x4S
x3S
x2S
x1S
x0S
x/S
x.S
x-S
x,S
x+S
x*S
bx )S
1(S
x'S
x&S
x%S
x$S
b0x #S
0"S
0!S
x~R
x}R
x|R
x{R
1zR
0yR
0xR
0wR
1vR
1uR
1tR
1sR
1rR
1qR
0pR
0oR
0nR
0mR
0lR
0kR
0jR
0iR
0hR
0gR
0fR
0eR
0dR
0cR
0bR
xaR
x`R
1_R
x^R
0]R
0\R
z[R
0ZR
xYR
xXR
xWR
xVR
xUR
xTR
xSR
xRR
xQR
xPR
xOR
xNR
xMR
bx LR
bx KR
1JR
1IR
1HR
1GR
1FR
1ER
1DR
1CR
1BR
1AR
1@R
1?R
1>R
x=R
x<R
x;R
x:R
bx 9R
b0 8R
b0 7R
b0 6R
b0 5R
b0 4R
b0 3R
b0 2R
b0 1R
b0 0R
b0 /R
b0 .R
b0 -R
b0 ,R
b0 +R
b0 *R
b0 )R
x(R
x'R
x&R
x%R
x$R
x#R
x"R
x!R
x~Q
x}Q
x|Q
x{Q
xzQ
xyQ
xxQ
xwQ
bx vQ
1uQ
xtQ
xsQ
xrQ
xqQ
b0x pQ
0oQ
0nQ
xmQ
xlQ
xkQ
xjQ
1iQ
0hQ
0gQ
0fQ
1eQ
1dQ
1cQ
1bQ
1aQ
1`Q
0_Q
0^Q
0]Q
0\Q
0[Q
0ZQ
0YQ
0XQ
0WQ
0VQ
0UQ
0TQ
0SQ
0RQ
0QQ
xPQ
xOQ
1NQ
xMQ
0LQ
0KQ
zJQ
0IQ
xHQ
xGQ
xFQ
xEQ
xDQ
xCQ
xBQ
xAQ
x@Q
x?Q
x>Q
x=Q
x<Q
bx ;Q
bx :Q
19Q
18Q
17Q
16Q
15Q
14Q
13Q
12Q
11Q
10Q
1/Q
1.Q
1-Q
x,Q
x+Q
x*Q
x)Q
bx (Q
b0 'Q
b0 &Q
b0 %Q
b0 $Q
b0 #Q
b0 "Q
b0 !Q
b0 ~P
b0 }P
b0 |P
b0 {P
b0 zP
b0 yP
b0 xP
b0 wP
b0 vP
xuP
xtP
xsP
xrP
xqP
xpP
xoP
xnP
xmP
xlP
xkP
xjP
xiP
xhP
xgP
xfP
bx eP
1dP
xcP
xbP
xaP
x`P
b0x _P
0^P
0]P
x\P
x[P
xZP
xYP
1XP
0WP
0VP
0UP
1TP
1SP
1RP
1QP
1PP
1OP
0NP
0MP
0LP
0KP
0JP
0IP
0HP
0GP
0FP
0EP
0DP
0CP
0BP
0AP
0@P
x?P
x>P
1=P
x<P
0;P
0:P
z9P
08P
x7P
x6P
x5P
x4P
x3P
x2P
x1P
x0P
x/P
x.P
x-P
x,P
x+P
bx *P
bx )P
1(P
1'P
1&P
1%P
1$P
1#P
1"P
1!P
1~O
1}O
1|O
1{O
1zO
xyO
xxO
xwO
xvO
bx uO
b0 tO
b0 sO
b0 rO
b0 qO
b0 pO
b0 oO
b0 nO
b0 mO
b0 lO
b0 kO
b0 jO
b0 iO
b0 hO
b0 gO
b0 fO
b0 eO
xdO
xcO
xbO
xaO
x`O
x_O
x^O
x]O
x\O
x[O
xZO
xYO
xXO
xWO
xVO
xUO
bx TO
1SO
xRO
xQO
xPO
xOO
b0x NO
0MO
0LO
xKO
xJO
xIO
xHO
1GO
0FO
0EO
0DO
1CO
1BO
1AO
1@O
1?O
1>O
0=O
0<O
0;O
0:O
09O
08O
07O
06O
05O
04O
03O
02O
01O
00O
0/O
x.O
x-O
1,O
x+O
0*O
0)O
z(O
0'O
x&O
x%O
x$O
x#O
x"O
x!O
x~N
x}N
x|N
x{N
xzN
xyN
xxN
bx wN
bx vN
1uN
1tN
1sN
1rN
1qN
1pN
1oN
1nN
1mN
1lN
1kN
1jN
1iN
xhN
xgN
xfN
xeN
bx dN
b0 cN
b0 bN
b0 aN
b0 `N
b0 _N
b0 ^N
b0 ]N
b0 \N
b0 [N
b0 ZN
b0 YN
b0 XN
b0 WN
b0 VN
b0 UN
b0 TN
xSN
xRN
xQN
xPN
xON
xNN
xMN
xLN
xKN
xJN
xIN
xHN
xGN
xFN
xEN
xDN
bx CN
1BN
xAN
x@N
x?N
x>N
b0x =N
0<N
0;N
x:N
x9N
x8N
x7N
16N
05N
04N
03N
12N
11N
10N
1/N
1.N
1-N
0,N
0+N
0*N
0)N
0(N
0'N
0&N
0%N
0$N
0#N
0"N
0!N
0~M
0}M
0|M
x{M
xzM
1yM
xxM
0wM
0vM
zuM
0tM
xsM
xrM
xqM
xpM
xoM
xnM
xmM
xlM
xkM
xjM
xiM
xhM
xgM
bx fM
bx eM
1dM
1cM
1bM
1aM
1`M
1_M
1^M
1]M
1\M
1[M
1ZM
1YM
1XM
xWM
xVM
xUM
xTM
bx SM
b0 RM
b0 QM
b0 PM
b0 OM
b0 NM
b0 MM
b0 LM
b0 KM
b0 JM
b0 IM
b0 HM
b0 GM
b0 FM
b0 EM
b0 DM
b0 CM
xBM
xAM
x@M
x?M
x>M
x=M
x<M
x;M
x:M
x9M
x8M
x7M
x6M
x5M
x4M
x3M
bx 2M
11M
x0M
x/M
x.M
x-M
b0x ,M
0+M
0*M
x)M
x(M
x'M
x&M
1%M
0$M
0#M
0"M
1!M
1~L
1}L
1|L
1{L
1zL
0yL
0xL
0wL
0vL
0uL
0tL
0sL
0rL
0qL
0pL
0oL
0nL
0mL
0lL
0kL
xjL
xiL
1hL
xgL
0fL
0eL
zdL
0cL
xbL
xaL
x`L
x_L
x^L
x]L
x\L
x[L
xZL
xYL
xXL
xWL
xVL
bx UL
bx TL
1SL
1RL
1QL
1PL
1OL
1NL
1ML
1LL
1KL
1JL
1IL
1HL
1GL
xFL
xEL
xDL
xCL
bx BL
b0 AL
b0 @L
b0 ?L
b0 >L
b0 =L
b0 <L
b0 ;L
b0 :L
b0 9L
b0 8L
b0 7L
b0 6L
b0 5L
b0 4L
b0 3L
b0 2L
x1L
x0L
x/L
x.L
x-L
x,L
x+L
x*L
x)L
x(L
x'L
x&L
x%L
x$L
x#L
x"L
bx !L
1~K
x}K
x|K
x{K
xzK
b0x yK
0xK
0wK
xvK
xuK
xtK
xsK
1rK
0qK
0pK
0oK
1nK
1mK
1lK
1kK
1jK
1iK
0hK
0gK
0fK
0eK
0dK
0cK
0bK
0aK
0`K
0_K
0^K
0]K
0\K
0[K
0ZK
xYK
xXK
1WK
xVK
0UK
0TK
zSK
0RK
xQK
xPK
xOK
xNK
xMK
xLK
xKK
xJK
xIK
xHK
xGK
xFK
xEK
bx DK
bx CK
1BK
1AK
1@K
1?K
1>K
1=K
1<K
1;K
1:K
19K
18K
17K
16K
x5K
x4K
x3K
x2K
bx 1K
b0 0K
b0 /K
b0 .K
b0 -K
b0 ,K
b0 +K
b0 *K
b0 )K
b0 (K
b0 'K
b0 &K
b0 %K
b0 $K
b0 #K
b0 "K
b0 !K
x~J
x}J
x|J
x{J
xzJ
xyJ
xxJ
xwJ
xvJ
xuJ
xtJ
xsJ
xrJ
xqJ
xpJ
xoJ
bx nJ
1mJ
xlJ
xkJ
xjJ
xiJ
b0x hJ
0gJ
0fJ
xeJ
xdJ
xcJ
xbJ
1aJ
0`J
0_J
0^J
1]J
1\J
1[J
1ZJ
1YJ
1XJ
0WJ
0VJ
0UJ
0TJ
0SJ
0RJ
0QJ
0PJ
0OJ
0NJ
0MJ
0LJ
0KJ
0JJ
0IJ
xHJ
xGJ
1FJ
xEJ
0DJ
0CJ
zBJ
0AJ
x@J
x?J
x>J
x=J
x<J
x;J
x:J
x9J
x8J
x7J
x6J
x5J
x4J
bx 3J
bx 2J
11J
10J
1/J
1.J
1-J
1,J
1+J
1*J
1)J
1(J
1'J
1&J
1%J
x$J
x#J
x"J
x!J
bx ~I
b0 }I
b0 |I
b0 {I
b0 zI
b0 yI
b0 xI
b0 wI
b0 vI
b0 uI
b0 tI
b0 sI
b0 rI
b0 qI
b0 pI
b0 oI
b0 nI
xmI
xlI
xkI
xjI
xiI
xhI
xgI
xfI
xeI
xdI
xcI
xbI
xaI
x`I
x_I
x^I
bx ]I
1\I
x[I
xZI
xYI
xXI
b0x WI
0VI
0UI
xTI
xSI
xRI
xQI
1PI
0OI
0NI
0MI
1LI
1KI
1JI
1II
1HI
1GI
0FI
0EI
0DI
0CI
0BI
0AI
0@I
0?I
0>I
0=I
0<I
0;I
0:I
09I
08I
x7I
x6I
15I
x4I
03I
02I
z1I
00I
x/I
x.I
x-I
x,I
x+I
x*I
x)I
x(I
x'I
x&I
x%I
x$I
x#I
bx "I
bx !I
1~H
1}H
1|H
1{H
1zH
1yH
1xH
1wH
1vH
1uH
1tH
1sH
1rH
xqH
xpH
xoH
xnH
bx mH
b0 lH
b0 kH
b0 jH
b0 iH
b0 hH
b0 gH
b0 fH
b0 eH
b0 dH
b0 cH
b0 bH
b0 aH
b0 `H
b0 _H
b0 ^H
b0 ]H
x\H
x[H
xZH
xYH
xXH
xWH
xVH
xUH
xTH
xSH
xRH
xQH
xPH
xOH
xNH
xMH
bx LH
1KH
xJH
xIH
xHH
xGH
b0x FH
0EH
0DH
xCH
xBH
xAH
x@H
1?H
0>H
0=H
0<H
1;H
1:H
19H
18H
17H
16H
05H
04H
03H
02H
01H
00H
0/H
0.H
0-H
0,H
0+H
0*H
0)H
0(H
0'H
x&H
x%H
1$H
x#H
0"H
0!H
z~G
0}G
x|G
x{G
xzG
xyG
xxG
xwG
xvG
xuG
xtG
xsG
xrG
xqG
xpG
bx oG
bx nG
1mG
1lG
1kG
1jG
1iG
1hG
1gG
1fG
1eG
1dG
1cG
1bG
1aG
x`G
x_G
x^G
x]G
bx \G
b0 [G
b0 ZG
b0 YG
b0 XG
b0 WG
b0 VG
b0 UG
b0 TG
b0 SG
b0 RG
b0 QG
b0 PG
b0 OG
b0 NG
b0 MG
b0 LG
xKG
xJG
xIG
xHG
xGG
xFG
xEG
xDG
xCG
xBG
xAG
x@G
x?G
x>G
x=G
x<G
bx ;G
1:G
x9G
x8G
x7G
x6G
b0x 5G
04G
03G
x2G
x1G
x0G
x/G
1.G
0-G
0,G
0+G
1*G
1)G
1(G
1'G
1&G
1%G
0$G
0#G
0"G
0!G
0~F
0}F
0|F
0{F
0zF
0yF
0xF
0wF
0vF
0uF
0tF
xsF
xrF
1qF
xpF
0oF
0nF
zmF
0lF
xkF
xjF
xiF
xhF
xgF
xfF
xeF
xdF
xcF
xbF
xaF
x`F
x_F
bx ^F
bx ]F
1\F
1[F
1ZF
1YF
1XF
1WF
1VF
1UF
1TF
1SF
1RF
1QF
1PF
xOF
xNF
xMF
xLF
bx KF
b0 JF
b0 IF
b0 HF
b0 GF
b0 FF
b0 EF
b0 DF
b0 CF
b0 BF
b0 AF
b0 @F
b0 ?F
b0 >F
b0 =F
b0 <F
b0 ;F
x:F
x9F
x8F
x7F
x6F
x5F
x4F
x3F
x2F
x1F
x0F
x/F
x.F
x-F
x,F
x+F
bx *F
1)F
x(F
x'F
x&F
x%F
b0x $F
0#F
0"F
x!F
x~E
x}E
x|E
1{E
0zE
0yE
0xE
1wE
1vE
1uE
1tE
1sE
1rE
0qE
0pE
0oE
0nE
0mE
0lE
0kE
0jE
0iE
0hE
0gE
0fE
0eE
0dE
0cE
xbE
xaE
1`E
x_E
0^E
0]E
z\E
0[E
xZE
xYE
xXE
xWE
xVE
xUE
xTE
xSE
xRE
xQE
xPE
xOE
xNE
bx ME
bx LE
1KE
1JE
1IE
1HE
1GE
1FE
1EE
1DE
1CE
1BE
1AE
1@E
1?E
x>E
x=E
x<E
x;E
bx :E
b0 9E
b0 8E
b0 7E
b0 6E
b0 5E
b0 4E
b0 3E
b0 2E
b0 1E
b0 0E
b0 /E
b0 .E
b0 -E
b0 ,E
b0 +E
b0 *E
x)E
x(E
x'E
x&E
x%E
x$E
x#E
x"E
x!E
x~D
x}D
x|D
x{D
xzD
xyD
xxD
bx wD
1vD
xuD
xtD
xsD
xrD
b0x qD
0pD
0oD
xnD
xmD
xlD
xkD
1jD
0iD
0hD
0gD
1fD
1eD
1dD
1cD
1bD
1aD
0`D
0_D
0^D
0]D
0\D
0[D
0ZD
0YD
0XD
0WD
0VD
0UD
0TD
0SD
0RD
xQD
xPD
1OD
xND
0MD
0LD
zKD
0JD
xID
xHD
xGD
xFD
xED
xDD
xCD
xBD
xAD
x@D
x?D
x>D
x=D
bx <D
bx ;D
1:D
19D
18D
17D
16D
15D
14D
13D
12D
11D
10D
1/D
1.D
x-D
x,D
x+D
x*D
bx )D
b0 (D
b0 'D
b0 &D
b0 %D
b0 $D
b0 #D
b0 "D
b0 !D
b0 ~C
b0 }C
b0 |C
b0 {C
b0 zC
b0 yC
b0 xC
b0 wC
xvC
xuC
xtC
xsC
xrC
xqC
xpC
xoC
xnC
xmC
xlC
xkC
xjC
xiC
xhC
xgC
bx fC
1eC
xdC
xcC
xbC
xaC
b0x `C
0_C
0^C
x]C
x\C
x[C
xZC
1YC
0XC
0WC
0VC
1UC
1TC
1SC
1RC
1QC
1PC
0OC
0NC
0MC
0LC
0KC
0JC
0IC
0HC
0GC
0FC
0EC
0DC
0CC
0BC
0AC
x@C
x?C
1>C
x=C
0<C
0;C
z:C
09C
x8C
x7C
x6C
x5C
x4C
x3C
x2C
x1C
x0C
x/C
x.C
x-C
x,C
bx +C
bx *C
1)C
1(C
1'C
1&C
1%C
1$C
1#C
1"C
1!C
1~B
1}B
1|B
1{B
xzB
xyB
xxB
xwB
bx vB
b0 uB
b0 tB
b0 sB
b0 rB
b0 qB
b0 pB
b0 oB
b0 nB
b0 mB
b0 lB
b0 kB
b0 jB
b0 iB
b0 hB
b0 gB
b0 fB
xeB
xdB
xcB
xbB
xaB
x`B
x_B
x^B
x]B
x\B
x[B
xZB
xYB
xXB
xWB
xVB
bx UB
1TB
xSB
xRB
xQB
xPB
b0x OB
0NB
0MB
xLB
xKB
xJB
xIB
1HB
0GB
0FB
0EB
1DB
1CB
1BB
1AB
1@B
1?B
0>B
0=B
0<B
0;B
0:B
09B
08B
07B
06B
05B
04B
03B
02B
01B
00B
x/B
x.B
1-B
x,B
0+B
0*B
z)B
0(B
x'B
x&B
x%B
x$B
x#B
x"B
x!B
x~A
x}A
x|A
x{A
xzA
xyA
bx xA
bx wA
1vA
1uA
1tA
1sA
1rA
1qA
1pA
1oA
1nA
1mA
1lA
1kA
1jA
xiA
xhA
xgA
xfA
bx eA
b0 dA
b0 cA
b0 bA
b0 aA
b0 `A
b0 _A
b0 ^A
b0 ]A
b0 \A
b0 [A
b0 ZA
b0 YA
b0 XA
b0 WA
b0 VA
b0 UA
xTA
xSA
xRA
xQA
xPA
xOA
xNA
xMA
xLA
xKA
xJA
xIA
xHA
xGA
xFA
xEA
bx DA
1CA
xBA
xAA
x@A
x?A
b0x >A
0=A
0<A
x;A
x:A
x9A
x8A
17A
06A
05A
04A
13A
12A
11A
10A
1/A
1.A
0-A
0,A
0+A
0*A
0)A
0(A
0'A
0&A
0%A
0$A
0#A
0"A
0!A
0~@
0}@
x|@
x{@
1z@
xy@
0x@
0w@
zv@
0u@
xt@
xs@
xr@
xq@
xp@
xo@
xn@
xm@
xl@
xk@
xj@
xi@
xh@
bx g@
bx f@
1e@
1d@
1c@
1b@
1a@
1`@
1_@
1^@
1]@
1\@
1[@
1Z@
1Y@
xX@
xW@
xV@
xU@
bx T@
b0 S@
b0 R@
b0 Q@
b0 P@
b0 O@
b0 N@
b0 M@
b0 L@
b0 K@
b0 J@
b0 I@
b0 H@
b0 G@
b0 F@
b0 E@
b0 D@
xC@
xB@
xA@
x@@
x?@
x>@
x=@
x<@
x;@
x:@
x9@
x8@
x7@
x6@
x5@
x4@
bx 3@
12@
x1@
x0@
x/@
x.@
b0x -@
0,@
0+@
x*@
x)@
x(@
x'@
1&@
0%@
0$@
0#@
1"@
1!@
1~?
1}?
1|?
1{?
0z?
0y?
0x?
0w?
0v?
0u?
0t?
0s?
0r?
0q?
0p?
0o?
0n?
0m?
0l?
xk?
xj?
1i?
xh?
0g?
0f?
ze?
0d?
xc?
xb?
xa?
x`?
x_?
x^?
x]?
x\?
x[?
xZ?
xY?
xX?
xW?
bx V?
bx U?
1T?
1S?
1R?
1Q?
1P?
1O?
1N?
1M?
1L?
1K?
1J?
1I?
1H?
xG?
xF?
xE?
xD?
bx C?
b0 B?
b0 A?
b0 @?
b0 ??
b0 >?
b0 =?
b0 <?
b0 ;?
b0 :?
b0 9?
b0 8?
b0 7?
b0 6?
b0 5?
b0 4?
b0 3?
x2?
x1?
x0?
x/?
x.?
x-?
x,?
x+?
x*?
x)?
x(?
x'?
x&?
x%?
x$?
x#?
bx "?
1!?
x~>
x}>
x|>
x{>
b0x z>
0y>
0x>
xw>
xv>
xu>
xt>
1s>
0r>
0q>
0p>
1o>
1n>
1m>
1l>
1k>
1j>
0i>
0h>
0g>
0f>
0e>
0d>
0c>
0b>
0a>
0`>
0_>
0^>
0]>
0\>
0[>
xZ>
xY>
1X>
xW>
0V>
0U>
zT>
0S>
xR>
xQ>
xP>
xO>
xN>
xM>
xL>
xK>
xJ>
xI>
xH>
xG>
xF>
bx E>
bx D>
1C>
1B>
1A>
1@>
1?>
1>>
1=>
1<>
1;>
1:>
19>
18>
17>
x6>
x5>
x4>
x3>
bx 2>
b0 1>
b0 0>
b0 />
b0 .>
b0 ->
b0 ,>
b0 +>
b0 *>
b0 )>
b0 (>
b0 '>
b0 &>
b0 %>
b0 $>
b0 #>
b0 ">
x!>
x~=
x}=
x|=
x{=
xz=
xy=
xx=
xw=
xv=
xu=
xt=
xs=
xr=
xq=
xp=
bx o=
1n=
xm=
xl=
xk=
xj=
b0x i=
0h=
0g=
xf=
xe=
xd=
xc=
1b=
0a=
0`=
0_=
1^=
1]=
1\=
1[=
1Z=
1Y=
0X=
0W=
0V=
0U=
0T=
0S=
0R=
0Q=
0P=
0O=
0N=
0M=
0L=
0K=
0J=
xI=
xH=
1G=
xF=
0E=
0D=
zC=
0B=
xA=
x@=
x?=
x>=
x==
x<=
x;=
x:=
x9=
x8=
x7=
x6=
x5=
bx 4=
bx 3=
12=
11=
10=
1/=
1.=
1-=
1,=
1+=
1*=
1)=
1(=
1'=
1&=
x%=
x$=
x#=
x"=
bx !=
b0 ~<
b0 }<
b0 |<
b0 {<
b0 z<
b0 y<
b0 x<
b0 w<
b0 v<
b0 u<
b0 t<
b0 s<
b0 r<
b0 q<
b0 p<
b0 o<
xn<
xm<
xl<
xk<
xj<
xi<
xh<
xg<
xf<
xe<
xd<
xc<
xb<
xa<
x`<
x_<
bx ^<
1]<
x\<
x[<
xZ<
xY<
b0x X<
0W<
0V<
xU<
xT<
xS<
xR<
1Q<
0P<
0O<
0N<
1M<
1L<
1K<
1J<
1I<
1H<
0G<
0F<
0E<
0D<
0C<
0B<
0A<
0@<
0?<
0><
0=<
0<<
0;<
0:<
09<
x8<
x7<
16<
x5<
04<
03<
z2<
01<
x0<
x/<
x.<
x-<
x,<
x+<
x*<
x)<
x(<
x'<
x&<
x%<
x$<
bx #<
bx "<
1!<
1~;
1};
1|;
1{;
1z;
1y;
1x;
1w;
1v;
1u;
1t;
1s;
xr;
xq;
xp;
xo;
bx n;
b0 m;
b0 l;
b0 k;
b0 j;
b0 i;
b0 h;
b0 g;
b0 f;
b0 e;
b0 d;
b0 c;
b0 b;
b0 a;
b0 `;
b0 _;
b0 ^;
x];
x\;
x[;
xZ;
xY;
xX;
xW;
xV;
xU;
xT;
xS;
xR;
xQ;
xP;
xO;
xN;
bx M;
1L;
xK;
xJ;
xI;
xH;
b0x G;
0F;
0E;
xD;
xC;
xB;
xA;
1@;
0?;
0>;
0=;
1<;
1;;
1:;
19;
18;
17;
06;
05;
04;
03;
02;
01;
00;
0/;
0.;
0-;
0,;
0+;
0*;
0);
0(;
x';
x&;
1%;
x$;
0#;
0";
z!;
0~:
x}:
x|:
x{:
xz:
xy:
xx:
xw:
xv:
xu:
xt:
xs:
xr:
xq:
bx p:
bx o:
1n:
1m:
1l:
1k:
1j:
1i:
1h:
1g:
1f:
1e:
1d:
1c:
1b:
xa:
x`:
x_:
x^:
bx ]:
b0 \:
b0 [:
b0 Z:
b0 Y:
b0 X:
b0 W:
b0 V:
b0 U:
b0 T:
b0 S:
b0 R:
b0 Q:
b0 P:
b0 O:
b0 N:
b0 M:
xL:
xK:
xJ:
xI:
xH:
xG:
xF:
xE:
xD:
xC:
xB:
xA:
x@:
x?:
x>:
x=:
bx <:
1;:
x::
x9:
x8:
x7:
b0x 6:
05:
04:
x3:
x2:
x1:
x0:
1/:
0.:
0-:
0,:
1+:
1*:
1):
1(:
1':
1&:
0%:
0$:
0#:
0":
0!:
0~9
0}9
0|9
0{9
0z9
0y9
0x9
0w9
0v9
0u9
xt9
xs9
1r9
xq9
0p9
0o9
zn9
0m9
xl9
xk9
xj9
xi9
xh9
xg9
xf9
xe9
xd9
xc9
xb9
xa9
x`9
bx _9
bx ^9
1]9
1\9
1[9
1Z9
1Y9
1X9
1W9
1V9
1U9
1T9
1S9
1R9
1Q9
xP9
xO9
xN9
xM9
bx L9
b0 K9
b0 J9
b0 I9
b0 H9
b0 G9
b0 F9
b0 E9
b0 D9
b0 C9
b0 B9
b0 A9
b0 @9
b0 ?9
b0 >9
b0 =9
b0 <9
x;9
x:9
x99
x89
x79
x69
x59
x49
x39
x29
x19
x09
x/9
x.9
x-9
x,9
bx +9
1*9
x)9
x(9
x'9
x&9
b0x %9
0$9
0#9
x"9
x!9
x~8
x}8
1|8
0{8
0z8
0y8
1x8
1w8
1v8
1u8
1t8
1s8
0r8
0q8
0p8
0o8
0n8
0m8
0l8
0k8
0j8
0i8
0h8
0g8
0f8
0e8
0d8
xc8
xb8
1a8
x`8
0_8
0^8
z]8
0\8
x[8
xZ8
xY8
xX8
xW8
xV8
xU8
xT8
xS8
xR8
xQ8
xP8
xO8
bx N8
bx M8
1L8
1K8
1J8
1I8
1H8
1G8
1F8
1E8
1D8
1C8
1B8
1A8
1@8
x?8
x>8
x=8
x<8
bx ;8
z:8
z98
z88
z78
z68
z58
z48
z38
z28
z18
z08
z/8
z.8
z-8
z,8
z+8
b0 *8
b0 )8
b0 (8
b0 '8
b0 &8
b0 %8
b0 $8
b0 #8
b0 "8
b0 !8
b0 ~7
b0 }7
b0 |7
b0 {7
b0 z7
b0 y7
xx7
xw7
xv7
xu7
xt7
xs7
xr7
xq7
xp7
xo7
xn7
xm7
xl7
xk7
xj7
xi7
bx h7
1g7
xf7
xe7
xd7
xc7
bx b7
0a7
0`7
x_7
x^7
x]7
x\7
1[7
0Z7
0Y7
0X7
1W7
1V7
1U7
1T7
1S7
1R7
xQ7
xP7
0O7
0N7
0M7
0L7
0K7
0J7
0I7
0H7
0G7
0F7
0E7
0D7
0C7
xB7
xA7
1@7
x?7
x>7
x=7
z<7
0;7
x:7
x97
x87
x77
x67
x57
x47
x37
x27
x17
x07
x/7
x.7
bx -7
bx ,7
1+7
1*7
1)7
1(7
1'7
1&7
1%7
1$7
1#7
1"7
1!7
1~6
1}6
x|6
x{6
xz6
xy6
xx6
bx w6
b0 v6
b0 u6
b0 t6
b0 s6
b0 r6
b0 q6
b0 p6
b0 o6
b0 n6
b0 m6
b0 l6
b0 k6
b0 j6
b0 i6
b0 h6
b0 g6
xf6
xe6
xd6
xc6
xb6
xa6
x`6
x_6
x^6
x]6
x\6
x[6
xZ6
xY6
xX6
xW6
bx V6
1U6
xT6
xS6
xR6
xQ6
bx P6
0O6
0N6
xM6
xL6
xK6
xJ6
1I6
0H6
0G6
0F6
1E6
1D6
1C6
1B6
1A6
1@6
x?6
x>6
0=6
0<6
0;6
0:6
096
086
076
066
056
046
036
026
016
x06
x/6
1.6
x-6
x,6
x+6
z*6
0)6
x(6
x'6
x&6
x%6
x$6
x#6
x"6
x!6
x~5
x}5
x|5
x{5
xz5
bx y5
bx x5
1w5
1v5
1u5
1t5
1s5
1r5
1q5
1p5
1o5
1n5
1m5
1l5
1k5
xj5
xi5
xh5
xg5
xf5
bx e5
b0 d5
b0 c5
b0 b5
b0 a5
b0 `5
b0 _5
b0 ^5
b0 ]5
b0 \5
b0 [5
b0 Z5
b0 Y5
b0 X5
b0 W5
b0 V5
b0 U5
xT5
xS5
xR5
xQ5
xP5
xO5
xN5
xM5
xL5
xK5
xJ5
xI5
xH5
xG5
xF5
xE5
bx D5
1C5
xB5
xA5
x@5
x?5
bx >5
0=5
0<5
x;5
x:5
x95
x85
175
065
055
045
135
125
115
105
1/5
1.5
x-5
x,5
0+5
0*5
0)5
0(5
0'5
0&5
0%5
0$5
0#5
0"5
0!5
0~4
0}4
x|4
x{4
1z4
xy4
xx4
xw4
zv4
0u4
xt4
xs4
xr4
xq4
xp4
xo4
xn4
xm4
xl4
xk4
xj4
xi4
xh4
bx g4
bx f4
1e4
1d4
1c4
1b4
1a4
1`4
1_4
1^4
1]4
1\4
1[4
1Z4
1Y4
xX4
xW4
xV4
xU4
xT4
bx S4
b0 R4
b0 Q4
b0 P4
b0 O4
b0 N4
b0 M4
b0 L4
b0 K4
b0 J4
b0 I4
b0 H4
b0 G4
b0 F4
b0 E4
b0 D4
b0 C4
xB4
xA4
x@4
x?4
x>4
x=4
x<4
x;4
x:4
x94
x84
x74
x64
x54
x44
x34
bx 24
114
x04
x/4
x.4
x-4
bx0 ,4
0+4
0*4
x)4
x(4
x'4
x&4
1%4
0$4
0#4
0"4
1!4
1~3
1}3
1|3
1{3
1z3
xy3
xx3
0w3
0v3
0u3
0t3
0s3
0r3
0q3
0p3
0o3
0n3
0m3
0l3
0k3
0j3
0i3
1h3
1g3
xf3
xe3
zd3
0c3
xb3
xa3
x`3
x_3
x^3
x]3
x\3
x[3
xZ3
xY3
xX3
xW3
xV3
bzx U3
bzx T3
1S3
1R3
1Q3
1P3
1O3
1N3
1M3
1L3
1K3
1J3
1I3
1H3
1G3
xF3
xE3
xD3
xC3
xB3
xA3
bzx @3
b0 ?3
b0 >3
b0 =3
b0 <3
b0 ;3
b0 :3
b0 93
b0 83
b0 73
b0 63
b0 53
b0 43
b0 33
b0 23
b0 13
b0 03
x/3
x.3
x-3
x,3
x+3
x*3
x)3
x(3
x'3
x&3
x%3
x$3
x#3
x"3
x!3
x~2
bx }2
1|2
x{2
xz2
xy2
xx2
bx w2
0v2
0u2
xt2
xs2
xr2
xq2
1p2
0o2
0n2
0m2
1l2
1k2
1j2
1i2
1h2
1g2
xf2
xe2
0d2
0c2
0b2
0a2
0`2
0_2
0^2
0]2
0\2
0[2
0Z2
0Y2
0X2
xW2
0V2
1U2
1T2
xS2
xR2
zQ2
0P2
xO2
xN2
xM2
xL2
xK2
xJ2
xI2
xH2
xG2
xF2
xE2
xD2
xC2
bzx B2
bzx A2
1@2
1?2
1>2
1=2
1<2
1;2
1:2
192
182
172
162
152
142
x32
x22
x12
x02
x/2
x.2
bzx -2
b0 ,2
b0 +2
b0 *2
b0 )2
b0 (2
b0 '2
b0 &2
b0 %2
b0 $2
b0 #2
b0 "2
b0 !2
b0 ~1
b0 }1
b0 |1
b0 {1
xz1
xy1
xx1
xw1
xv1
xu1
xt1
xs1
xr1
xq1
xp1
xo1
xn1
xm1
xl1
xk1
bx j1
1i1
xh1
xg1
xf1
xe1
bx d1
0c1
0b1
xa1
x`1
x_1
x^1
1]1
0\1
0[1
0Z1
1Y1
1X1
1W1
1V1
1U1
1T1
xS1
xR1
0Q1
0P1
0O1
0N1
0M1
0L1
0K1
0J1
0I1
0H1
0G1
0F1
0E1
xD1
zC1
1B1
1A1
x@1
x?1
z>1
0=1
x<1
x;1
x:1
x91
x81
x71
x61
x51
x41
x31
x21
x11
x01
bxz /1
bxz .1
1-1
1,1
1+1
1*1
1)1
1(1
1'1
1&1
1%1
1$1
1#1
1"1
1!1
x~0
x}0
x|0
x{0
xz0
bxz y0
xx0
xw0
xv0
xu0
xt0
xs0
xr0
xq0
xp0
xo0
xn0
xm0
xl0
xk0
xj0
xi0
xh0
xg0
xf0
xe0
xd0
xc0
xb0
xa0
x`0
x_0
x^0
x]0
x\0
x[0
xZ0
xY0
xX0
xW0
xV0
xU0
xT0
xS0
xR0
xQ0
xP0
xO0
xN0
xM0
xL0
xK0
xJ0
xI0
xH0
xG0
xF0
xE0
xD0
xC0
xB0
xA0
x@0
x?0
x>0
x=0
x<0
x;0
x:0
x90
x80
x70
x60
x50
x40
x30
x20
x10
x00
x/0
x.0
x-0
x,0
x+0
x*0
x)0
x(0
x'0
x&0
x%0
x$0
x#0
x"0
x!0
x~/
x}/
x|/
x{/
xz/
xy/
xx/
xw/
xv/
xu/
xt/
xs/
xr/
xq/
xp/
xo/
xn/
xm/
xl/
xk/
xj/
xi/
xh/
xg/
xf/
xe/
xd/
xc/
xb/
xa/
x`/
x_/
0^/
x]/
z\/
0[/
0Z/
0Y/
0X/
0W/
0V/
0U/
0T/
0S/
0R/
0Q/
0P/
0O/
0N/
0M/
0L/
0K/
0J/
0I/
0H/
0G/
0F/
0E/
0D/
0C/
0B/
0A/
0@/
0?/
0>/
0=/
0</
0;/
0:/
09/
08/
07/
06/
05/
x4/
x3/
x2/
x1/
x0/
x//
x./
z-/
z,/
z+/
z*/
z)/
z(/
z'/
0&/
0%/
0$/
0#/
0"/
0!/
0~.
0}.
0|.
0{.
0z.
0y.
0x.
0w.
0v.
0u.
0t.
0s.
0r.
0q.
0p.
0o.
0n.
0m.
0l.
0k.
0j.
0i.
0h.
0g.
0f.
0e.
0d.
0c.
0b.
0a.
0`.
0_.
0^.
x].
x\.
x[.
xZ.
xY.
xX.
xW.
xV.
xU.
xT.
xS.
xR.
xQ.
xP.
xO.
xN.
xM.
xL.
xK.
xJ.
xI.
xH.
xG.
xF.
xE.
xD.
xC.
xB.
xA.
x@.
x?.
x>.
x=.
x<.
x;.
x:.
x9.
x8.
x7.
x6.
x5.
x4.
x3.
x2.
x1.
x0.
x/.
x..
x-.
x,.
x+.
x*.
x).
x(.
x'.
x&.
x%.
x$.
x#.
x".
x!.
x~-
x}-
x|-
x{-
xz-
xy-
xx-
xw-
xv-
xu-
xt-
xs-
xr-
xq-
xp-
xo-
xn-
xm-
xl-
xk-
xj-
xi-
xh-
xg-
xf-
xe-
xd-
xc-
xb-
xa-
x`-
x_-
x^-
x]-
x\-
x[-
xZ-
xY-
xX-
xW-
xV-
xU-
xT-
xS-
xR-
xQ-
xP-
xO-
xN-
xM-
xL-
xK-
xJ-
xI-
xH-
xG-
xF-
xE-
xD-
xC-
xB-
xA-
x@-
x?-
x>-
x=-
x<-
x;-
x:-
x9-
x8-
x7-
x6-
x5-
x4-
x3-
x2-
x1-
x0-
x/-
x.-
x--
x,-
x+-
x*-
x)-
x(-
x'-
x&-
x%-
x$-
x#-
x"-
x!-
x~,
x},
x|,
x{,
0z,
0y,
0x,
0w,
0v,
0u,
0t,
0s,
0r,
0q,
0p,
0o,
0n,
0m,
0l,
0k,
0j,
0i,
0h,
0g,
0f,
0e,
0d,
0c,
0b,
0a,
0`,
0_,
0^,
0],
0\,
0[,
0Z,
0Y,
0X,
0W,
0V,
0U,
0T,
0S,
0R,
0Q,
0P,
0O,
0N,
0M,
0L,
0K,
0J,
0I,
0H,
0G,
0F,
0E,
0D,
0C,
0B,
0A,
0@,
0?,
0>,
0=,
0<,
0;,
0:,
09,
08,
07,
06,
05,
04,
03,
02,
01,
00,
0/,
z.,
z-,
z,,
z+,
z*,
z),
z(,
z',
z&,
z%,
z$,
z#,
z",
z!,
z~+
z}+
z|+
z{+
zz+
zy+
zx+
zw+
zv+
zu+
zt+
zs+
zr+
zq+
zp+
zo+
zn+
zm+
zl+
zk+
zj+
zi+
zh+
zg+
0f+
0e+
0d+
0c+
0b+
0a+
0`+
0_+
0^+
0]+
0\+
0[+
0Z+
0Y+
0X+
0W+
0V+
0U+
0T+
0S+
0R+
0Q+
0P+
0O+
0N+
0M+
0L+
0K+
0J+
0I+
0H+
0G+
0F+
0E+
0D+
0C+
0B+
0A+
x@+
x?+
x>+
x=+
x<+
x;+
x:+
x9+
x8+
x7+
x6+
x5+
x4+
x3+
x2+
x1+
x0+
x/+
x.+
x-+
x,+
x++
x*+
x)+
x(+
x'+
x&+
x%+
x$+
x#+
x"+
x!+
x~*
x}*
x|*
x{*
xz*
xy*
xx*
xw*
xv*
xu*
xt*
xs*
xr*
xq*
xp*
xo*
xn*
xm*
xl*
xk*
xj*
xi*
xh*
xg*
xf*
xe*
xd*
xc*
xb*
xa*
x`*
x_*
x^*
x]*
x\*
x[*
xZ*
xY*
xX*
xW*
xV*
xU*
xT*
xS*
xR*
xQ*
xP*
xO*
xN*
xM*
xL*
xK*
xJ*
xI*
xH*
xG*
xF*
xE*
xD*
xC*
xB*
xA*
x@*
x?*
x>*
x=*
x<*
x;*
x:*
x9*
x8*
x7*
x6*
x5*
x4*
x3*
x2*
x1*
x0*
x/*
x.*
x-*
0,*
0+*
0**
0)*
0(*
0'*
0&*
0%*
0$*
0#*
0"*
0!*
0~)
0})
0|)
0{)
0z)
0y)
0x)
0w)
0v)
0u)
0t)
0s)
0r)
0q)
0p)
0o)
0n)
0m)
0l)
0k)
0j)
0i)
0h)
0g)
0f)
0e)
0d)
0c)
0b)
0a)
0`)
0_)
0^)
0])
0\)
0[)
0Z)
0Y)
0X)
0W)
0V)
0U)
0T)
0S)
0R)
0Q)
0P)
0O)
0N)
0M)
0L)
0K)
0J)
0I)
0H)
0G)
0F)
0E)
0D)
0C)
0B)
0A)
0@)
0?)
x>)
x=)
x<)
x;)
x:)
x9)
x8)
x7)
x6)
x5)
x4)
x3)
x2)
x1)
x0)
x/)
x.)
x-)
x,)
x+)
x*)
x))
x()
x')
x&)
x%)
x$)
x#)
x")
x!)
x~(
0}(
0|(
0{(
0z(
0y(
0x(
0w(
0v(
0u(
0t(
0s(
0r(
0q(
0p(
0o(
0n(
0m(
0l(
0k(
0j(
0i(
0h(
0g(
0f(
0e(
0d(
0c(
0b(
0a(
0`(
0_(
0^(
0](
0\(
0[(
0Z(
0Y(
0X(
xW(
xV(
0U(
0T(
0S(
0R(
0Q(
0P(
0O(
0N(
0M(
0L(
0K(
0J(
0I(
0H(
0G(
0F(
0E(
0D(
0C(
0B(
0A(
0@(
0?(
0>(
0=(
0<(
0;(
0:(
09(
08(
07(
06(
05(
04(
03(
02(
01(
00(
0/(
0.(
0-(
0,(
0+(
0*(
0)(
0((
0'(
0&(
0%(
0$(
0#(
0"(
0!(
0~'
0}'
0|'
0{'
0z'
0y'
0x'
0w'
0v'
0u'
0t'
0s'
0r'
0q'
0p'
0o'
0n'
0m'
0l'
0k'
0j'
0i'
0h'
xg'
xf'
xe'
xd'
xc'
xb'
xa'
x`'
x_'
x^'
x]'
x\'
x['
xZ'
xY'
xX'
xW'
xV'
xU'
xT'
xS'
xR'
xQ'
xP'
xO'
xN'
xM'
xL'
xK'
xJ'
xI'
xH'
xG'
xF'
xE'
xD'
xC'
xB'
xA'
x@'
x?'
x>'
x='
x<'
x;'
x:'
x9'
x8'
x7'
x6'
x5'
x4'
x3'
x2'
x1'
x0'
x/'
x.'
x-'
x,'
x+'
x*'
x)'
x('
x''
x&'
x%'
x$'
x#'
x"'
x!'
x~&
x}&
x|&
x{&
xz&
xy&
xx&
xw&
xv&
xu&
xt&
xs&
xr&
xq&
xp&
xo&
xn&
xm&
xl&
xk&
xj&
xi&
xh&
xg&
xf&
xe&
xd&
xc&
xb&
xa&
x`&
x_&
x^&
x]&
x\&
x[&
xZ&
xY&
xX&
xW&
xV&
xU&
xT&
0S&
0R&
0Q&
0P&
0O&
0N&
0M&
0L&
0K&
0J&
0I&
0H&
0G&
0F&
0E&
0D&
0C&
0B&
0A&
0@&
0?&
0>&
0=&
0<&
0;&
0:&
09&
08&
07&
06&
05&
04&
03&
02&
01&
00&
0/&
0.&
0-&
0,&
0+&
0*&
0)&
0(&
0'&
0&&
0%&
0$&
0#&
0"&
0!&
0~%
0}%
0|%
0{%
0z%
0y%
0x%
0w%
0v%
0u%
0t%
0s%
0r%
0q%
0p%
0o%
0n%
0m%
0l%
0k%
0j%
0i%
0h%
0g%
0f%
ze%
zd%
zc%
zb%
za%
z`%
z_%
z^%
z]%
z\%
z[%
zZ%
zY%
zX%
zW%
zV%
zU%
zT%
zS%
zR%
zQ%
zP%
zO%
zN%
zM%
zL%
zK%
zJ%
zI%
zH%
zG%
zF%
zE%
zD%
zC%
zB%
zA%
z@%
0?%
0>%
0=%
0<%
0;%
0:%
09%
08%
07%
06%
05%
04%
03%
02%
01%
00%
0/%
0.%
0-%
0,%
0+%
0*%
0)%
0(%
0'%
0&%
0%%
0$%
0#%
0"%
0!%
0~$
0}$
0|$
0{$
0z$
0y$
0x$
xw$
xv$
xu$
xt$
xs$
xr$
xq$
xp$
xo$
xn$
xm$
xl$
xk$
xj$
xi$
xh$
xg$
xf$
xe$
xd$
xc$
xb$
xa$
x`$
x_$
x^$
x]$
x\$
x[$
xZ$
xY$
xX$
xW$
xV$
xU$
xT$
xS$
xR$
xQ$
xP$
xO$
xN$
xM$
xL$
xK$
xJ$
xI$
xH$
xG$
xF$
xE$
xD$
xC$
xB$
xA$
x@$
x?$
x>$
x=$
x<$
x;$
x:$
x9$
x8$
x7$
x6$
x5$
x4$
x3$
x2$
x1$
x0$
x/$
x.$
x-$
x,$
x+$
x*$
x)$
x($
x'$
x&$
x%$
x$$
x#$
x"$
x!$
x~#
x}#
x|#
x{#
xz#
xy#
xx#
xw#
xv#
xu#
xt#
xs#
xr#
xq#
xp#
xo#
xn#
xm#
xl#
xk#
xj#
xi#
xh#
xg#
xf#
xe#
xd#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0:#
09#
08#
07#
06#
05#
04#
03#
02#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
xO"
xN"
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
x="
x<"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~
x}
x|
x{
xz
xy
xx
xw
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
xi
xh
xg
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
0\
0[
0Z
b0 Y
b0 X
bx W
bx V
bx U
b0 T
b0 S
bx R
bx Q
b0 P
b0 O
b0 N
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
0A
1@
0?
0>
1=
x<
bx ;
0:
09
x8
x7
x6
x5
x4
x3
b0 2
bz 1
bx 0
x/
1.
bx -
bx ,
x+
x*
x)
x(
x'
0&
x%
0$
z#
0"
z!
$end
#1000
0<e
0kd
0Zc
0Ib
08a
0'`
0t^
0c]
0R\
0A[
00Z
0}X
0lW
0[V
0JU
09T
0(S
0uQ
0dP
0SO
0BN
01M
0~K
0mJ
0\I
0KH
0:G
0)F
0vD
0eC
0TB
0CA
02@
0!?
0n=
0]<
0L;
0;:
0*9
0g7
0U6
0C5
014
0|2
0i1
#12500
1:
#25000
0:
#37500
1:
#50000
0:
#62500
1:
#75000
0:
#87500
1:
#100000
0:
0=d
0<d
0:d
0,c
0+c
0)c
0ya
0xa
0va
0h`
0g`
0e`
0W_
0V_
0T_
0F^
0E^
0C^
05]
04]
02]
0$\
0#\
0!\
0qZ
0pZ
0nZ
0`Y
0_Y
0]Y
0OX
0NX
0LX
0>W
0=W
0;W
0-V
0,V
0*V
0zT
0yT
0wT
0iS
0hS
0fS
0XR
0WR
0UR
0GQ
0FQ
0DQ
06P
05P
03P
0%O
0$O
0"O
0rM
0qM
0oM
0aL
0`L
0^L
0PK
0OK
0MK
0?J
0>J
0<J
0.I
0-I
0+I
0{G
0zG
0xG
0jF
0iF
0gF
0YE
0XE
0VE
0HD
0GD
0ED
07C
06C
04C
0&B
0%B
0#B
0s@
0r@
0p@
0b?
0a?
0_?
0Q>
0P>
0N>
0@=
0?=
0==
0/<
0.<
0,<
0|:
0{:
0y:
0k9
0j9
0h9
0Z8
0Y8
0W8
097
087
077
067
0'6
0&6
0%6
0$6
0s4
0r4
0q4
0p4
0a3
0`3
0_3
0^3
0N2
0M2
0L2
0K2
0;1
0:1
091
081
011
051
0D2
0H2
0W3
0[3
0i4
0m4
0{5
0!6
0/7
037
0S8
0U8
00C
02C
0AD
0CD
0RE
0TE
0cF
0eF
0tG
0vG
0'I
0)I
08J
0:J
0IK
0KK
0ZL
0\L
0d9
0f9
0u:
0w:
0(<
0*<
09=
0;=
0J>
0L>
0[?
0]?
0l@
0n@
0}A
0!B
0kM
0mM
0jZ
0lZ
0{[
0}[
0.]
00]
0?^
0A^
0P_
0R_
0a`
0c`
0ra
0ta
0%c
0'c
06d
08d
0|N
0~N
0/P
01P
0@Q
0BQ
0QR
0SR
0bS
0dS
0sT
0uT
0&V
0(V
07W
09W
0HX
0JX
0YY
0[Y
031
0<1
071
0F2
0O2
0J2
0Y3
0b3
0]3
0k4
0t4
0o4
0}5
0(6
0#6
017
0:7
057
0P8
0T8
0-C
01C
0>D
0BD
0OE
0SE
0`F
0dF
0qG
0uG
0$I
0(I
05J
09J
0FK
0JK
0WL
0[L
0a9
0e9
0r:
0v:
0%<
0)<
06=
0:=
0G>
0K>
0X?
0\?
0i@
0m@
0zA
0~A
0hM
0lM
0gZ
0kZ
0x[
0|[
0+]
0/]
0<^
0@^
0M_
0Q_
0^`
0b`
0oa
0sa
0"c
0&c
03d
07d
0yN
0}N
0,P
00P
0=Q
0AQ
0NR
0RR
0_S
0cS
0pT
0tT
0#V
0'V
04W
08W
0EX
0IX
0VY
0ZY
041
061
0G2
0I2
0Z3
0\3
0l4
0n4
0~5
0"6
027
047
0O8
0,C
0=D
0NE
0_F
0pG
0#I
04J
0EK
0VL
0`9
0q:
0$<
05=
0F>
0W?
0h@
0yA
0gM
0fZ
0w[
0*]
0;^
0L_
0]`
0na
0!c
02d
0xN
0+P
0<Q
0MR
0^S
0oT
0"V
03W
0DX
0UY
0R8
0X8
0[8
0V8
0/C
05C
08C
03C
0@D
0FD
0ID
0DD
0QE
0WE
0ZE
0UE
0bF
0hF
0kF
0fF
0sG
0yG
0|G
0wG
0&I
0,I
0/I
0*I
07J
0=J
0@J
0;J
0HK
0NK
0QK
0LK
0YL
0_L
0bL
0]L
0c9
0i9
0l9
0g9
0t:
0z:
0}:
0x:
0'<
0-<
00<
0+<
08=
0>=
0A=
0<=
0I>
0O>
0R>
0M>
0Z?
0`?
0c?
0^?
0k@
0q@
0t@
0o@
0|A
0$B
0'B
0"B
0jM
0pM
0sM
0nM
0iZ
0oZ
0rZ
0mZ
0z[
0"\
0%\
0~[
0-]
03]
06]
01]
0>^
0D^
0G^
0B^
0O_
0U_
0X_
0S_
0``
0f`
0i`
0d`
0qa
0wa
0za
0ua
0$c
0*c
0-c
0(c
05d
0;d
0>d
09d
0{N
0#O
0&O
0!O
0.P
04P
07P
02P
0?Q
0EQ
0HQ
0CQ
0PR
0VR
0YR
0TR
0aS
0gS
0jS
0eS
0rT
0xT
0{T
0vT
0%V
0+V
0.V
0)V
06W
0<W
0?W
0:W
0GX
0MX
0PX
0KX
0XY
0^Y
0aY
0\Y
001
021
0C2
0E2
0V3
0X3
0h4
0j4
0z5
0|5
0.7
007
0Q8
0b9
0s:
0&<
07=
0H>
0Y?
0j@
0{A
0.C
0?D
0PE
0aF
0rG
0%I
06J
0GK
0XL
0iM
0zN
0-P
0>Q
0OR
0`S
0qT
0$V
05W
0FX
0WY
0hZ
0y[
0,]
0=^
0N_
0_`
0pa
0#c
04d
#112500
1:
#125000
0:
#137500
1:
#150000
0:
#162500
1:
#175000
0:
#187500
1:
#200000
0:
1$
1[
#212500
1:
#225000
0:
#237500
1:
#250000
0:
#262500
1:
#275000
0:
#287500
1:
#300000
0:
#312500
1:
#325000
0:
#337500
1:
#350000
0:
#362500
1:
#375000
0:
#387500
1:
#400000
0:
1"
1\
#412500
1:
#425000
0:
#437500
1:
#450000
0:
#462500
1:
#475000
0:
#487500
1:
#500000
0w8
0TC
0eD
0vE
0)G
0:H
0KI
0\J
0mK
0~L
0*:
0;;
0L<
0]=
0n>
0!@
02A
0CB
01N
00[
0A\
0R]
0c^
0t_
0'a
08b
0Ic
0Zd
0BO
0SP
0dQ
0uR
0(T
09U
0JV
0[W
0lX
0}Y
0v8
0SC
0dD
0uE
0(G
09H
0JI
0[J
0lK
0}L
0):
0:;
0K<
0\=
0m>
0~?
01A
0BB
00N
0/[
0@\
0Q]
0b^
0s_
0&a
07b
0Hc
0Yd
0AO
0RP
0cQ
0tR
0'T
08U
0IV
0ZW
0kX
0|Y
0X1
0k2
0~3
025
0D6
0V7
0W1
0j2
0}3
015
0C6
0U7
0|8
0YC
0jD
0{E
0.G
0?H
0PI
0aJ
0rK
0%M
0/:
0@;
0Q<
0b=
0s>
0&@
07A
0HB
06N
05[
0F\
0W]
0h^
0y_
0,a
0=b
0Nc
0_d
0GO
0XP
0iQ
0zR
0-T
0>U
0OV
0`W
0qX
0$Z
0]1
0p2
0%4
075
0I6
0[7
1A+
1x$
1L+
1%%
1W+
10%
1`+
19%
1a+
1:%
1b+
1;%
1c+
1<%
1d+
1=%
1e+
1>%
1f+
1?%
1B+
1y$
1C+
1z$
1D+
1{$
1E+
1|$
1F+
1}$
1G+
1~$
1H+
1!%
1I+
1"%
1J+
1#%
1K+
1$%
1M+
1&%
1N+
1'%
1O+
1(%
1P+
1)%
1Q+
1*%
1R+
1+%
1S+
1,%
1T+
1-%
1U+
1.%
1V+
1/%
1X+
11%
1Y+
12%
1Z+
13%
1[+
14%
1\+
15%
1]+
16%
1^+
17%
1_+
18%
x3e
0A1
0.
0:
b11111111111111111111111111111111111111 2
1^.
1Z
#512500
1:
#525000
0:
#537500
1:
#550000
0:
#562500
1:
#575000
0:
#587500
1:
#600000
0:
#612500
1:
#625000
0:
#637500
1:
#650000
0:
#662500
1:
#675000
0:
#687500
1:
#700000
0:
#712500
1:
#725000
0:
#737500
1:
#750000
0:
#762500
1:
#775000
0:
#787500
1:
#800000
0:
#812500
1:
#825000
0:
#837500
1:
#850000
0:
#862500
1:
#875000
0:
#887500
1:
#900000
0:
#912500
1:
#925000
0:
#937500
1:
#950000
0:
#962500
1:
#975000
0:
#987500
1:
#1000000
r1000 De
r1000 Ge
18e
1^/
1[/
0:
19
#1012500
1:
#1025000
0:
